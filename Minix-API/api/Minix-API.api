public abstract interface annotation class dev/racci/minix/api/annotations/MappedConfig : java/lang/annotation/Annotation {
	public abstract fun file ()Ljava/lang/String;
	public abstract fun parent ()Ljava/lang/Class;
	public abstract fun serializers ()[Ljava/lang/Class;
}

public abstract interface annotation class dev/racci/minix/api/annotations/MappedExtension : java/lang/annotation/Annotation {
	public abstract fun bindToKClass ()Ljava/lang/Class;
	public abstract fun dependencies ()[Ljava/lang/Class;
	public abstract fun name ()Ljava/lang/String;
	public abstract fun parent ()Ljava/lang/Class;
	public abstract fun threadCount ()I
}

public abstract interface annotation class dev/racci/minix/api/annotations/MappedIntegration : java/lang/annotation/Annotation {
	public abstract fun integrationManager ()Ljava/lang/Class;
	public abstract fun parent ()Ljava/lang/Class;
	public abstract fun pluginName ()Ljava/lang/String;
}

public abstract interface annotation class dev/racci/minix/api/annotations/MappedPlugin : java/lang/annotation/Annotation {
	public abstract fun bStatsId ()I
	public abstract fun bindToKClass ()Ljava/lang/Class;
}

public abstract interface annotation class dev/racci/minix/api/annotations/MinixDsl : java/lang/annotation/Annotation {
}

public abstract interface annotation class dev/racci/minix/api/annotations/MinixExperimental : java/lang/annotation/Annotation {
}

public abstract interface annotation class dev/racci/minix/api/annotations/MinixInternal : java/lang/annotation/Annotation {
}

public abstract interface annotation class dev/racci/minix/api/annotations/RunAsync : java/lang/annotation/Annotation {
}

public abstract interface class dev/racci/minix/api/builders/BannerBuilder : dev/racci/minix/api/builders/BaseItemBuilder {
	public abstract fun addPattern ([Lorg/bukkit/block/banner/Pattern;)Ldev/racci/minix/api/builders/BannerBuilder;
	public abstract fun getBaseColour ()Lorg/bukkit/Material;
	public abstract fun getPatterns ()Ljava/util/List;
	public abstract fun setBaseColour (Lorg/bukkit/Material;)V
	public abstract fun setPatterns (Ljava/util/List;)V
}

public abstract interface class dev/racci/minix/api/builders/BaseItemBuilder {
	public abstract fun addEnchant ([Lkotlin/Pair;)Ldev/racci/minix/api/builders/BaseItemBuilder;
	public abstract fun addFlag ([Lorg/bukkit/inventory/ItemFlag;)Ldev/racci/minix/api/builders/BaseItemBuilder;
	public abstract fun addModifier (Lorg/bukkit/attribute/Attribute;[Lorg/bukkit/attribute/AttributeModifier;)Ldev/racci/minix/api/builders/BaseItemBuilder;
	public abstract fun build ()Lorg/bukkit/inventory/ItemStack;
	public abstract fun clearModifiers (Lorg/bukkit/attribute/Attribute;)Ldev/racci/minix/api/builders/BaseItemBuilder;
	public abstract fun getAmount ()I
	public abstract fun getAttributeModifiers ()Lcom/google/common/collect/Multimap;
	public abstract fun getDestroyableKeys ()Ljava/util/Set;
	public abstract fun getGlowing ()Z
	public abstract fun getItemFlags ()Ljava/util/Set;
	public abstract fun getItemStack ()Lorg/bukkit/inventory/ItemStack;
	public abstract fun getLore ()Ljava/util/List;
	public abstract fun getMeta ()Lorg/bukkit/inventory/meta/ItemMeta;
	public abstract fun getModel ()Ljava/lang/Integer;
	public abstract fun getName ()Lnet/kyori/adventure/text/Component;
	public abstract fun getPlaceableKeys ()Ljava/util/Set;
	public abstract fun isUnbreakable ()Z
	public abstract fun lore ([Lnet/kyori/adventure/text/Component;)Ldev/racci/minix/api/builders/BaseItemBuilder;
	public abstract fun pdc (Lkotlin/jvm/functions/Function1;)Ldev/racci/minix/api/builders/BaseItemBuilder;
	public abstract fun removeEnchant ([Lorg/bukkit/enchantments/Enchantment;)Ldev/racci/minix/api/builders/BaseItemBuilder;
	public abstract fun removeFlag ([Lorg/bukkit/inventory/ItemFlag;)Ldev/racci/minix/api/builders/BaseItemBuilder;
	public abstract fun removeModifier (Lorg/bukkit/attribute/Attribute;[Lorg/bukkit/attribute/AttributeModifier;)Ldev/racci/minix/api/builders/BaseItemBuilder;
	public abstract fun setAmount (I)V
	public abstract fun setAttributeModifiers (Lcom/google/common/collect/Multimap;)V
	public abstract fun setDestroyableKeys (Ljava/util/Set;)V
	public abstract fun setGlowing (Z)V
	public abstract fun setItemFlags (Ljava/util/Set;)V
	public abstract fun setItemStack (Lorg/bukkit/inventory/ItemStack;)V
	public abstract fun setLore (Ljava/util/List;)V
	public abstract fun setMeta (Lorg/bukkit/inventory/meta/ItemMeta;)V
	public abstract fun setModel (Ljava/lang/Integer;)V
	public abstract fun setName (Lnet/kyori/adventure/text/Component;)V
	public abstract fun setPlaceableKeys (Ljava/util/Set;)V
	public abstract fun setUnbreakable (Z)V
}

public abstract interface class dev/racci/minix/api/builders/BookBuilder : dev/racci/minix/api/builders/BaseItemBuilder {
	public abstract fun addPage ([Lnet/kyori/adventure/text/Component;)Ldev/racci/minix/api/builders/BookBuilder;
	public abstract fun getAuthor ()Lnet/kyori/adventure/text/Component;
	public abstract fun getGeneration ()Lorg/bukkit/inventory/meta/BookMeta$Generation;
	public abstract fun getTitle ()Lnet/kyori/adventure/text/Component;
	public abstract fun setAuthor (Lnet/kyori/adventure/text/Component;)V
	public abstract fun setGeneration (Lorg/bukkit/inventory/meta/BookMeta$Generation;)V
	public abstract fun setPages ([Lkotlin/Pair;)Ldev/racci/minix/api/builders/BookBuilder;
	public abstract fun setTitle (Lnet/kyori/adventure/text/Component;)V
}

public abstract interface class dev/racci/minix/api/builders/FireworkBuilder : dev/racci/minix/api/builders/BaseItemBuilder {
	public abstract fun addEffects ([Lorg/bukkit/FireworkEffect;)Ldev/racci/minix/api/builders/FireworkBuilder;
	public abstract fun getEffects ()Ljava/util/List;
	public abstract fun getPower ()I
	public abstract fun setEffects (Ljava/util/List;)V
	public abstract fun setPower (I)V
}

public abstract interface class dev/racci/minix/api/builders/HeadBuilder : dev/racci/minix/api/builders/BaseItemBuilder {
	public abstract fun getOwner ()Lorg/bukkit/OfflinePlayer;
	public abstract fun getPlayerProfiler ()Lcom/destroystokyo/paper/profile/PlayerProfile;
	public abstract fun getTexture ()Ljava/lang/String;
	public abstract fun setOwner (Lorg/bukkit/OfflinePlayer;)V
	public abstract fun setPlayerProfiler (Lcom/destroystokyo/paper/profile/PlayerProfile;)V
	public abstract fun setTexture (Ljava/lang/String;)V
}

public abstract interface class dev/racci/minix/api/builders/ItemBuilder : dev/racci/minix/api/builders/BaseItemBuilder {
}

public abstract interface class dev/racci/minix/api/builders/ItemBuilderDSL {
	public static final field Companion Ldev/racci/minix/api/builders/ItemBuilderDSL$Companion;
	public abstract fun banner (Lorg/bukkit/inventory/ItemStack;Lkotlin/jvm/functions/Function1;)Lorg/bukkit/inventory/ItemStack;
	public abstract fun book (Lorg/bukkit/inventory/ItemStack;Lkotlin/jvm/functions/Function1;)Lorg/bukkit/inventory/ItemStack;
	public abstract fun firework (Lorg/bukkit/inventory/ItemStack;Lkotlin/jvm/functions/Function1;)Lorg/bukkit/inventory/ItemStack;
	public abstract fun from (Lorg/bukkit/Material;Lkotlin/jvm/functions/Function1;)Lorg/bukkit/inventory/ItemStack;
	public abstract fun from (Lorg/bukkit/inventory/ItemStack;Lkotlin/jvm/functions/Function1;)Lorg/bukkit/inventory/ItemStack;
	public abstract fun head (Lorg/bukkit/inventory/ItemStack;Lkotlin/jvm/functions/Function1;)Lorg/bukkit/inventory/ItemStack;
	public abstract fun map (Lorg/bukkit/inventory/ItemStack;Lkotlin/jvm/functions/Function1;)Lorg/bukkit/inventory/ItemStack;
}

public final class dev/racci/minix/api/builders/ItemBuilderDSL$Companion : dev/racci/minix/api/builders/ItemBuilderDSL {
	public fun banner (Lorg/bukkit/inventory/ItemStack;Lkotlin/jvm/functions/Function1;)Lorg/bukkit/inventory/ItemStack;
	public fun book (Lorg/bukkit/inventory/ItemStack;Lkotlin/jvm/functions/Function1;)Lorg/bukkit/inventory/ItemStack;
	public fun firework (Lorg/bukkit/inventory/ItemStack;Lkotlin/jvm/functions/Function1;)Lorg/bukkit/inventory/ItemStack;
	public fun from (Lorg/bukkit/Material;Lkotlin/jvm/functions/Function1;)Lorg/bukkit/inventory/ItemStack;
	public fun from (Lorg/bukkit/inventory/ItemStack;Lkotlin/jvm/functions/Function1;)Lorg/bukkit/inventory/ItemStack;
	public fun head (Lorg/bukkit/inventory/ItemStack;Lkotlin/jvm/functions/Function1;)Lorg/bukkit/inventory/ItemStack;
	public fun map (Lorg/bukkit/inventory/ItemStack;Lkotlin/jvm/functions/Function1;)Lorg/bukkit/inventory/ItemStack;
}

public final class dev/racci/minix/api/builders/ItemBuilderDSL$DefaultImpls {
	public static synthetic fun banner$default (Ldev/racci/minix/api/builders/ItemBuilderDSL;Lorg/bukkit/inventory/ItemStack;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/bukkit/inventory/ItemStack;
	public static synthetic fun book$default (Ldev/racci/minix/api/builders/ItemBuilderDSL;Lorg/bukkit/inventory/ItemStack;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/bukkit/inventory/ItemStack;
	public static synthetic fun firework$default (Ldev/racci/minix/api/builders/ItemBuilderDSL;Lorg/bukkit/inventory/ItemStack;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/bukkit/inventory/ItemStack;
	public static synthetic fun from$default (Ldev/racci/minix/api/builders/ItemBuilderDSL;Lorg/bukkit/Material;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/bukkit/inventory/ItemStack;
	public static synthetic fun from$default (Ldev/racci/minix/api/builders/ItemBuilderDSL;Lorg/bukkit/inventory/ItemStack;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/bukkit/inventory/ItemStack;
	public static synthetic fun head$default (Ldev/racci/minix/api/builders/ItemBuilderDSL;Lorg/bukkit/inventory/ItemStack;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/bukkit/inventory/ItemStack;
	public static synthetic fun map$default (Ldev/racci/minix/api/builders/ItemBuilderDSL;Lorg/bukkit/inventory/ItemStack;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/bukkit/inventory/ItemStack;
}

public abstract interface class dev/racci/minix/api/builders/MapBuilder {
	public abstract fun getColour ()Lorg/bukkit/Color;
	public abstract fun getLocName ()Ljava/lang/String;
	public abstract fun getScaling ()Z
	public abstract fun getView ()Lorg/bukkit/map/MapView;
	public abstract fun setColour (Lorg/bukkit/Color;)V
	public abstract fun setLocName (Ljava/lang/String;)V
	public abstract fun setScaling (Z)V
	public abstract fun setView (Lorg/bukkit/map/MapView;)V
}

public final class dev/racci/minix/api/collections/ExpiringArray : java/util/HashSet {
	public synthetic fun <init> (JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun add (Ljava/lang/Object;)Z
	public final fun getDuration-UwyO8pc ()J
	public fun getSize ()I
	public final fun size ()I
}

public final class dev/racci/minix/api/collections/PlayerMap : java/util/HashMap, dev/racci/minix/api/extensions/WithPlugin {
	public fun <init> ()V
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public final fun containsKey (Ljava/lang/Object;)Z
	public fun containsKey (Lorg/bukkit/entity/Player;)Z
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public final fun entrySet ()Ljava/util/Set;
	public final fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun get (Lorg/bukkit/entity/Player;)Ljava/lang/Object;
	public fun getEntries ()Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public final fun getOrDefault (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getOrDefault (Lorg/bukkit/entity/Player;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getSize ()I
	public fun getValues ()Ljava/util/Collection;
	public final fun keySet ()Ljava/util/Set;
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public final fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun remove (Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun remove (Lorg/bukkit/entity/Player;)Ljava/lang/Object;
	public fun remove (Lorg/bukkit/entity/Player;Ljava/lang/Object;)Z
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun size ()I
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public final fun values ()Ljava/util/Collection;
}

public final class dev/racci/minix/api/collections/RegisteringMap : java/util/Map, kotlin/jvm/internal/markers/KMappedMarker {
	public fun <init> ()V
	public fun clear ()V
	public fun compute (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ldev/racci/minix/api/utils/Loadable;
	public synthetic fun compute (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun computeIfAbsent (Ljava/lang/Object;Ljava/util/function/Function;)Ldev/racci/minix/api/utils/Loadable;
	public synthetic fun computeIfAbsent (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
	public fun computeIfPresent (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ldev/racci/minix/api/utils/Loadable;
	public synthetic fun computeIfPresent (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun containsKey (Ljava/lang/Object;)Z
	public fun containsValue (Ldev/racci/minix/api/utils/Loadable;)Z
	public final fun containsValue (Ljava/lang/Object;)Z
	public synthetic fun entrySet ()Ljava/util/Set;
	public final fun entrySet ()Lkotlinx/collections/immutable/ImmutableSet;
	public fun get (Ljava/lang/Object;)Ldev/racci/minix/api/utils/Loadable;
	public synthetic fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun getEntries ()Lkotlinx/collections/immutable/ImmutableSet;
	public fun getKeys ()Lkotlinx/collections/immutable/ImmutableSet;
	public final fun getRegistered ()Lkotlinx/collections/immutable/ImmutableSet;
	public final fun getRegistered (Ljava/lang/Object;)Ljava/util/Optional;
	public fun getSize ()I
	public fun getValues ()Lkotlinx/collections/immutable/ImmutableSet;
	public fun isEmpty ()Z
	public synthetic fun keySet ()Ljava/util/Set;
	public final fun keySet ()Lkotlinx/collections/immutable/ImmutableSet;
	public fun merge (Ljava/lang/Object;Ldev/racci/minix/api/utils/Loadable;Ljava/util/function/BiFunction;)Ldev/racci/minix/api/utils/Loadable;
	public synthetic fun merge (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
	public fun put (Ljava/lang/Object;Ldev/racci/minix/api/utils/Loadable;)Ldev/racci/minix/api/utils/Loadable;
	public final fun put (Ljava/lang/Object;Ldev/racci/minix/api/utils/Loadable;)Z
	public synthetic fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun put (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun put$default (Ldev/racci/minix/api/collections/RegisteringMap;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public fun putAll (Ljava/util/Map;)V
	public fun putIfAbsent (Ljava/lang/Object;Ldev/racci/minix/api/utils/Loadable;)Ldev/racci/minix/api/utils/Loadable;
	public synthetic fun putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun register-IoAF18A (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun registerAll (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Ldev/racci/minix/api/utils/Loadable;
	public synthetic fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;Ljava/lang/Object;)Z
	public final fun remove (Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun replace (Ljava/lang/Object;Ldev/racci/minix/api/utils/Loadable;)Ldev/racci/minix/api/utils/Loadable;
	public fun replace (Ljava/lang/Object;Ldev/racci/minix/api/utils/Loadable;Ldev/racci/minix/api/utils/Loadable;)Z
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public synthetic fun replace (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replaceAll (Ljava/util/function/BiFunction;)V
	public final fun size ()I
	public final fun unregister (Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun unregisterAll (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public synthetic fun values ()Ljava/util/Collection;
	public final fun values ()Lkotlinx/collections/immutable/ImmutableSet;
}

public final class dev/racci/minix/api/configuration/constraint/MinixConstraints {
	public static final field INSTANCE Ldev/racci/minix/api/configuration/constraint/MinixConstraints;
}

public final class dev/racci/minix/api/configuration/constraint/MinixConstraints$LoggingLevel : org/spongepowered/configurate/objectmapping/meta/Constraint {
	public static final field INSTANCE Ldev/racci/minix/api/configuration/constraint/MinixConstraints$LoggingLevel;
	public synthetic fun validate (Ljava/lang/Object;)V
	public fun validate (Ljava/lang/String;)V
}

public abstract interface class dev/racci/minix/api/coroutine/CoroutineSession {
	public abstract fun dispose ()V
	public abstract fun fireSuspendingEvent (Lorg/bukkit/event/Event;Ldev/racci/minix/api/data/enums/EventExecutionType;)Ljava/util/Collection;
	public abstract fun getAsyncDispatcher ()Lkotlin/coroutines/CoroutineContext;
	public abstract fun getMinecraftDispatcher ()Lkotlin/coroutines/CoroutineContext;
	public abstract fun getScope ()Lkotlinx/coroutines/CoroutineScope;
	public abstract fun isManipulatedServerHeartBeat ()Z
	public abstract fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public abstract fun registerSuspendedListener (Lorg/bukkit/event/Listener;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun setManipulatedServerHeartBeat (Z)V
}

public final class dev/racci/minix/api/coroutine/CoroutineSession$DefaultImpls {
	public static synthetic fun launch$default (Ldev/racci/minix/api/coroutine/CoroutineSession;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
}

public abstract class dev/racci/minix/api/coroutine/CoroutineTimings : kotlin/coroutines/AbstractCoroutineContextElement, java/lang/Runnable {
	public static final field Key Ldev/racci/minix/api/coroutine/CoroutineTimings$Key;
	public fun <init> ()V
	public final fun getQueue ()Ljava/util/Queue;
	public fun run ()V
	public final fun setQueue (Ljava/util/Queue;)V
}

public final class dev/racci/minix/api/coroutine/CoroutineTimings$Key : kotlin/coroutines/CoroutineContext$Key {
}

public final class dev/racci/minix/api/coroutine/ExtensionKt {
	public static final fun callSuspendingEvent (Lorg/bukkit/plugin/PluginManager;Lorg/bukkit/event/Event;Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/data/enums/EventExecutionType;)Ljava/util/Collection;
	public static final fun getAsyncDispatcher (Ldev/racci/minix/api/plugin/MinixPlugin;)Lkotlin/coroutines/CoroutineContext;
	public static final fun getMinecraftDispatcher (Ldev/racci/minix/api/plugin/MinixPlugin;)Lkotlin/coroutines/CoroutineContext;
	public static final fun getScope (Ldev/racci/minix/api/plugin/MinixPlugin;)Lkotlinx/coroutines/CoroutineScope;
	public static final fun launch (Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static synthetic fun launch$default (Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Lkotlinx/coroutines/Job;
	public static final fun launchAsync (Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun registerSuspendingEvents (Ldev/racci/minix/api/plugin/MinixPlugin;Lorg/bukkit/event/Listener;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun registerSuspendingEvents (Lorg/bukkit/plugin/PluginManager;Lorg/bukkit/event/Listener;Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class dev/racci/minix/api/data/LangConfig : dev/racci/minix/api/data/MinixConfig {
	public fun <init> ()V
	public final fun get (Ljava/lang/String;[Lkotlin/Pair;)Lnet/kyori/adventure/text/Component;
	public abstract fun getPrefixes ()Ljava/util/Map;
	public fun load (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class dev/racci/minix/api/data/LangConfig$InnerLang : dev/racci/minix/api/utils/PropertyFinder, dev/racci/minix/api/data/MinixConfig$InnerConfig {
	public fun <init> ()V
	public fun getInitialized ()Z
	public fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun setInitialized (Z)V
	public fun setPlugin (Ldev/racci/minix/api/plugin/MinixPlugin;)V
}

public abstract class dev/racci/minix/api/data/MinixConfig : dev/racci/minix/api/extensions/WithPlugin {
	public fun <init> (Z)V
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public final fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public final fun getPrimaryConfig ()Z
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getVersionTransformations ()Ljava/util/Map;
	public fun handleLoad ()V
	public fun handleUnload ()V
	public final fun hashCode ()I
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun load (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public final fun toString ()Ljava/lang/String;
}

public abstract interface class dev/racci/minix/api/data/MinixConfig$InnerConfig {
	public abstract fun getInitialized ()Z
	public abstract fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public abstract fun setInitialized (Z)V
	public abstract fun setPlugin (Ldev/racci/minix/api/plugin/MinixPlugin;)V
}

public final class dev/racci/minix/api/data/MinixConfig$InnerConfig$Default : dev/racci/minix/api/data/MinixConfig$InnerConfig {
	public field plugin Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun <init> ()V
	public fun getInitialized ()Z
	public fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun setInitialized (Z)V
	public fun setPlugin (Ldev/racci/minix/api/plugin/MinixPlugin;)V
}

public final class dev/racci/minix/api/data/MinixConfig$Minix : dev/racci/minix/api/data/MinixConfig$InnerConfig {
	public fun <init> ()V
	public fun getInitialized ()Z
	public final fun getLoggingLevel ()Ljava/lang/String;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public final fun processLoggingLevel ()V
	public fun setInitialized (Z)V
	public final fun setLoggingLevel (Ljava/lang/String;)V
	public fun setPlugin (Ldev/racci/minix/api/plugin/MinixPlugin;)V
}

public final class dev/racci/minix/api/data/PlayerData {
	public static final field Companion Ldev/racci/minix/api/data/PlayerData$Companion;
	public fun <init> (Ljava/util/UUID;)V
	public final fun component1 ()Ljava/util/UUID;
	public final fun copy (Ljava/util/UUID;)Ldev/racci/minix/api/data/PlayerData;
	public static synthetic fun copy$default (Ldev/racci/minix/api/data/PlayerData;Ljava/util/UUID;ILjava/lang/Object;)Ldev/racci/minix/api/data/PlayerData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getInAccess ()I
	public final fun getLiquidType ()Ldev/racci/minix/api/data/enums/LiquidType;
	public final fun getUuid ()Ljava/util/UUID;
	public fun hashCode ()I
	public final fun isDoubleAttack ()Z
	public final fun isDoubleInteract ()Z
	public final fun isDoubleJump ()Z
	public final fun isDoubleOffhand ()Z
	public final fun isDoubleSneak ()Z
	public final fun setInAccess (I)V
	public final fun setLiquidType (Ldev/racci/minix/api/data/enums/LiquidType;)V
	public fun toString ()Ljava/lang/String;
}

public final class dev/racci/minix/api/data/PlayerData$Companion {
	public final fun getDOUBLE_DELAY-UwyO8pc ()J
}

public final class dev/racci/minix/api/data/PluginUpdater {
	public field name Ljava/lang/String;
	public fun <init> ()V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getActiveProvider ()I
	public final fun getChannels ()[Ljava/lang/String;
	public final fun getFailedAttempts ()I
	public final fun getIgnored ()[Ljava/lang/String;
	public final fun getLastRun ()Lkotlinx/datetime/Instant;
	public final fun getLocalFile ()Ljava/lang/String;
	public final fun getLocalVersion ()Ldev/racci/minix/api/utils/Loadable;
	public final fun getName ()Ljava/lang/String;
	public final fun getPluginInstance ()Lorg/bukkit/plugin/Plugin;
	public final fun getProvider ()Ldev/racci/minix/api/updater/providers/UpdateProvider;
	public final fun getProviders ()Ljava/util/List;
	public final fun getResult ()Ldev/racci/minix/api/updater/UpdateResult;
	public final fun getSentAvailable ()Z
	public final fun getSentInfo ()Z
	public final fun getUpdateMode ()Ldev/racci/minix/api/updater/UpdateMode;
	public fun hashCode ()I
	public final fun setActiveProvider (I)V
	public final fun setChannels ([Ljava/lang/String;)V
	public final fun setFailedAttempts (I)V
	public final fun setIgnored ([Ljava/lang/String;)V
	public final fun setLastRun (Lkotlinx/datetime/Instant;)V
	public final fun setName (Ljava/lang/String;)V
	public final fun setPluginInstance (Lorg/bukkit/plugin/Plugin;)V
	public final fun setProviders (Ljava/util/List;)V
	public final fun setResult (Ldev/racci/minix/api/updater/UpdateResult;)V
	public final fun setSentAvailable (Z)V
	public final fun setSentInfo (Z)V
	public final fun setUpdateMode (Ldev/racci/minix/api/updater/UpdateMode;)V
	public fun toString ()Ljava/lang/String;
}

public final class dev/racci/minix/api/data/enums/EventExecutionType : java/lang/Enum {
	public static final field Concurrent Ldev/racci/minix/api/data/enums/EventExecutionType;
	public static final field Sequential Ldev/racci/minix/api/data/enums/EventExecutionType;
	public static fun valueOf (Ljava/lang/String;)Ldev/racci/minix/api/data/enums/EventExecutionType;
	public static fun values ()[Ldev/racci/minix/api/data/enums/EventExecutionType;
}

public final class dev/racci/minix/api/data/enums/LiquidType : java/lang/Enum {
	public static final field Companion Ldev/racci/minix/api/data/enums/LiquidType$Companion;
	public static final field LAVA Ldev/racci/minix/api/data/enums/LiquidType;
	public static final field NON Ldev/racci/minix/api/data/enums/LiquidType;
	public static final field WATER Ldev/racci/minix/api/data/enums/LiquidType;
	public static fun valueOf (Ljava/lang/String;)Ldev/racci/minix/api/data/enums/LiquidType;
	public static fun values ()[Ldev/racci/minix/api/data/enums/LiquidType;
}

public final class dev/racci/minix/api/data/enums/LiquidType$Companion {
	public final fun convert (Lorg/bukkit/Material;)Ldev/racci/minix/api/data/enums/LiquidType;
	public final fun convert (Lorg/bukkit/block/Block;)Ldev/racci/minix/api/data/enums/LiquidType;
	public final fun getLiquidType (Lorg/bukkit/Material;)Ldev/racci/minix/api/data/enums/LiquidType;
	public final fun getLiquidType (Lorg/bukkit/block/Block;)Ldev/racci/minix/api/data/enums/LiquidType;
}

public final class dev/racci/minix/api/destructors/CommonDestructorKt {
	public static final fun component1 (Lorg/bukkit/Location;)D
	public static final fun component1 (Lorg/bukkit/util/Vector;)D
	public static final fun component2 (Lorg/bukkit/Location;)D
	public static final fun component2 (Lorg/bukkit/util/Vector;)D
	public static final fun component3 (Lorg/bukkit/Location;)D
	public static final fun component3 (Lorg/bukkit/util/Vector;)D
	public static final fun component4 (Lorg/bukkit/Location;)Lorg/bukkit/World;
}

public final class dev/racci/minix/api/destructors/EventDestructorKt {
	public static final fun component1 (Lorg/bukkit/event/block/BlockEvent;)Lorg/bukkit/block/Block;
	public static final fun component1 (Lorg/bukkit/event/entity/EntityEvent;)Lorg/bukkit/entity/Entity;
	public static final fun component1 (Lorg/bukkit/event/entity/PlayerLeashEntityEvent;)Lorg/bukkit/entity/Player;
	public static final fun component1 (Lorg/bukkit/event/inventory/InventoryEvent;)Lorg/bukkit/inventory/Inventory;
	public static final fun component1 (Lorg/bukkit/event/inventory/InventoryMoveItemEvent;)Lorg/bukkit/inventory/ItemStack;
	public static final fun component1 (Lorg/bukkit/event/inventory/InventoryPickupItemEvent;)Lorg/bukkit/entity/Item;
	public static final fun component1 (Lorg/bukkit/event/player/PlayerEvent;)Lorg/bukkit/entity/Player;
	public static final fun component1 (Lorg/bukkit/event/server/TabCompleteEvent;)Lorg/bukkit/command/CommandSender;
	public static final fun component1 (Lorg/bukkit/event/vehicle/VehicleEvent;)Lorg/bukkit/entity/Vehicle;
	public static final fun component1 (Lorg/bukkit/event/weather/WeatherEvent;)Lorg/bukkit/World;
	public static final fun component1 (Lorg/bukkit/event/world/WorldEvent;)Lorg/bukkit/World;
	public static final fun component2 (Lorg/bukkit/event/entity/PlayerLeashEntityEvent;)Lorg/bukkit/entity/Entity;
	public static final fun component2 (Lorg/bukkit/event/inventory/InventoryEvent;)Ljava/util/List;
	public static final fun component2 (Lorg/bukkit/event/inventory/InventoryMoveItemEvent;)Lorg/bukkit/inventory/Inventory;
	public static final fun component2 (Lorg/bukkit/event/inventory/InventoryPickupItemEvent;)Lorg/bukkit/inventory/Inventory;
	public static final fun component2 (Lorg/bukkit/event/player/PlayerExpChangeEvent;)I
	public static final fun component2 (Lorg/bukkit/event/player/PlayerItemHeldEvent;)I
	public static final fun component2 (Lorg/bukkit/event/player/PlayerMoveEvent;)Lorg/bukkit/Location;
	public static final fun component2 (Lorg/bukkit/event/server/TabCompleteEvent;)Ljava/util/List;
	public static final fun component2 (Lorg/bukkit/event/vehicle/VehicleMoveEvent;)Lorg/bukkit/Location;
	public static final fun component3 (Lorg/bukkit/event/entity/PlayerLeashEntityEvent;)Lorg/bukkit/entity/Entity;
	public static final fun component3 (Lorg/bukkit/event/inventory/InventoryEvent;)Lorg/bukkit/inventory/InventoryView;
	public static final fun component3 (Lorg/bukkit/event/inventory/InventoryMoveItemEvent;)Lorg/bukkit/inventory/Inventory;
	public static final fun component3 (Lorg/bukkit/event/player/PlayerItemHeldEvent;)I
	public static final fun component3 (Lorg/bukkit/event/player/PlayerMoveEvent;)Lorg/bukkit/Location;
	public static final fun component3 (Lorg/bukkit/event/server/TabCompleteEvent;)Ljava/lang/String;
	public static final fun component3 (Lorg/bukkit/event/vehicle/VehicleMoveEvent;)Lorg/bukkit/Location;
}

public final class dev/racci/minix/api/destructors/PatternDestructorKt {
	public static final fun component1 (Lorg/bukkit/block/banner/Pattern;)Lorg/bukkit/DyeColor;
	public static final fun component2 (Lorg/bukkit/block/banner/Pattern;)Lorg/bukkit/block/banner/PatternType;
}

public class dev/racci/minix/api/events/CompanionEventHandler {
	public fun <init> ()V
	public fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public abstract class dev/racci/minix/api/events/KEvent : org/bukkit/event/Event, org/bukkit/event/Cancellable {
	public static final field Companion Ldev/racci/minix/api/events/KEvent$Companion;
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getHandlers ()Lorg/bukkit/event/HandlerList;
	public fun isCancelled ()Z
	public fun setCancelled (Z)V
}

public final class dev/racci/minix/api/events/KEvent$Companion {
	public final fun getHandlerMap ()Lcom/github/benmanes/caffeine/cache/LoadingCache;
}

public abstract class dev/racci/minix/api/events/keybind/ComboEvent : dev/racci/minix/api/events/player/KPlayerEvent {
	public synthetic fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component2 ()Lorg/bukkit/inventory/ItemStack;
	public final fun component3 ()Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;
	public final fun component4 ()Lorg/bukkit/entity/Entity;
	public final fun getBlockData ()Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;
	public final fun getEntity ()Lorg/bukkit/entity/Entity;
	public fun getHasItem ()Z
	public final fun getItem ()Lorg/bukkit/inventory/ItemStack;
	public final fun isBlockEvent ()Z
	public final fun isEntityEvent ()Z
}

public final class dev/racci/minix/api/events/keybind/ComboEvent$BlockData {
	public fun <init> (Lorg/bukkit/block/Block;Lorg/bukkit/block/BlockFace;)V
	public final fun component1 ()Lorg/bukkit/block/Block;
	public final fun component2 ()Lorg/bukkit/block/BlockFace;
	public final fun copy (Lorg/bukkit/block/Block;Lorg/bukkit/block/BlockFace;)Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;
	public static synthetic fun copy$default (Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/block/Block;Lorg/bukkit/block/BlockFace;ILjava/lang/Object;)Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBlock ()Lorg/bukkit/block/Block;
	public final fun getBlockFace ()Lorg/bukkit/block/BlockFace;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class dev/racci/minix/api/events/keybind/OffhandComboEvent : dev/racci/minix/api/events/keybind/ComboEvent {
	public synthetic fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component5 ()Lorg/bukkit/inventory/ItemStack;
	public fun getHasItem ()Z
	public final fun getOffHandItem ()Lorg/bukkit/inventory/ItemStack;
}

public final class dev/racci/minix/api/events/keybind/PlayerDoubleOffhandEvent : dev/racci/minix/api/events/keybind/OffhandComboEvent {
	public static final field Companion Ldev/racci/minix/api/events/keybind/PlayerDoubleOffhandEvent$Companion;
	public fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;)V
	public synthetic fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerDoubleOffhandEvent$Companion : dev/racci/minix/api/events/CompanionEventHandler {
	public fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerDoublePrimaryEvent : dev/racci/minix/api/events/keybind/ComboEvent {
	public static final field Companion Ldev/racci/minix/api/events/keybind/PlayerDoublePrimaryEvent$Companion;
	public fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;)V
	public static fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerDoublePrimaryEvent$Companion : dev/racci/minix/api/events/CompanionEventHandler {
	public fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerDoubleSecondaryEvent : dev/racci/minix/api/events/keybind/ComboEvent {
	public static final field Companion Ldev/racci/minix/api/events/keybind/PlayerDoubleSecondaryEvent$Companion;
	public fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;)V
	public static fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerDoubleSecondaryEvent$Companion : dev/racci/minix/api/events/CompanionEventHandler {
	public fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerOffhandEvent : dev/racci/minix/api/events/keybind/OffhandComboEvent {
	public static final field Companion Ldev/racci/minix/api/events/keybind/PlayerOffhandEvent$Companion;
	public fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;)V
	public static fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerOffhandEvent$Companion : dev/racci/minix/api/events/CompanionEventHandler {
	public fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerPrimaryEvent : dev/racci/minix/api/events/keybind/ComboEvent {
	public static final field Companion Ldev/racci/minix/api/events/keybind/PlayerPrimaryEvent$Companion;
	public fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;)V
	public static fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerPrimaryEvent$Companion : dev/racci/minix/api/events/CompanionEventHandler {
	public fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerSecondaryEvent : dev/racci/minix/api/events/keybind/ComboEvent {
	public static final field Companion Ldev/racci/minix/api/events/keybind/PlayerSecondaryEvent$Companion;
	public fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;)V
	public static fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerSecondaryEvent$Companion : dev/racci/minix/api/events/CompanionEventHandler {
	public fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerSneakDoubleOffhandEvent : dev/racci/minix/api/events/keybind/OffhandComboEvent {
	public static final field Companion Ldev/racci/minix/api/events/keybind/PlayerSneakDoubleOffhandEvent$Companion;
	public fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;)V
	public synthetic fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerSneakDoubleOffhandEvent$Companion : dev/racci/minix/api/events/CompanionEventHandler {
	public fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerSneakDoublePrimaryEvent : dev/racci/minix/api/events/keybind/ComboEvent {
	public static final field Companion Ldev/racci/minix/api/events/keybind/PlayerSneakDoublePrimaryEvent$Companion;
	public fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;)V
	public synthetic fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerSneakDoublePrimaryEvent$Companion : dev/racci/minix/api/events/CompanionEventHandler {
	public fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerSneakDoubleSecondaryEvent : dev/racci/minix/api/events/keybind/ComboEvent {
	public static final field Companion Ldev/racci/minix/api/events/keybind/PlayerSneakDoubleSecondaryEvent$Companion;
	public fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;)V
	public synthetic fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerSneakDoubleSecondaryEvent$Companion : dev/racci/minix/api/events/CompanionEventHandler {
	public fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerSneakOffhandEvent : dev/racci/minix/api/events/keybind/OffhandComboEvent {
	public static final field Companion Ldev/racci/minix/api/events/keybind/PlayerSneakOffhandEvent$Companion;
	public fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;)V
	public synthetic fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerSneakOffhandEvent$Companion : dev/racci/minix/api/events/CompanionEventHandler {
	public fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerSneakPrimaryEvent : dev/racci/minix/api/events/keybind/ComboEvent {
	public static final field Companion Ldev/racci/minix/api/events/keybind/PlayerSneakPrimaryEvent$Companion;
	public fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;)V
	public static fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerSneakPrimaryEvent$Companion : dev/racci/minix/api/events/CompanionEventHandler {
	public fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerSneakSecondaryEvent : dev/racci/minix/api/events/keybind/ComboEvent {
	public static final field Companion Ldev/racci/minix/api/events/keybind/PlayerSneakSecondaryEvent$Companion;
	public fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/inventory/ItemStack;Ldev/racci/minix/api/events/keybind/ComboEvent$BlockData;Lorg/bukkit/entity/Entity;)V
	public static fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/keybind/PlayerSneakSecondaryEvent$Companion : dev/racci/minix/api/events/CompanionEventHandler {
	public fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public abstract class dev/racci/minix/api/events/player/KPlayerEvent : org/bukkit/event/player/PlayerEvent, org/bukkit/event/Cancellable {
	public fun <init> (Lorg/bukkit/entity/Player;Z)V
	public synthetic fun <init> (Lorg/bukkit/entity/Player;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getHandlers ()Lorg/bukkit/event/HandlerList;
	public fun isCancelled ()Z
	public fun setCancelled (Z)V
}

public final class dev/racci/minix/api/events/player/PlayerLightEvent : dev/racci/minix/api/events/player/KPlayerEvent {
	public static final field Companion Ldev/racci/minix/api/events/player/PlayerLightEvent$Companion;
	public fun <init> (Lorg/bukkit/entity/Player;IILdev/racci/minix/api/events/player/PlayerLightEvent$Cause;)V
	public final fun getCause ()Ldev/racci/minix/api/events/player/PlayerLightEvent$Cause;
	public static fun getHandlerList ()Lorg/bukkit/event/HandlerList;
	public final fun getNewLightLevel ()I
	public final fun getOldLightLevel ()I
}

public final class dev/racci/minix/api/events/player/PlayerLightEvent$Cause : java/lang/Enum {
	public static final field BLOCK_UPDATE Ldev/racci/minix/api/events/player/PlayerLightEvent$Cause;
	public static final field MOVEMENT Ldev/racci/minix/api/events/player/PlayerLightEvent$Cause;
	public static fun valueOf (Ljava/lang/String;)Ldev/racci/minix/api/events/player/PlayerLightEvent$Cause;
	public static fun values ()[Ldev/racci/minix/api/events/player/PlayerLightEvent$Cause;
}

public final class dev/racci/minix/api/events/player/PlayerLightEvent$Companion : dev/racci/minix/api/events/CompanionEventHandler {
	public fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/player/PlayerLiquidEnterEvent : dev/racci/minix/api/events/player/PlayerLiquidEvent {
	public static final field Companion Ldev/racci/minix/api/events/player/PlayerLiquidEnterEvent$Companion;
	public fun <init> (Lorg/bukkit/entity/Player;Ldev/racci/minix/api/data/enums/LiquidType;Ldev/racci/minix/api/data/enums/LiquidType;)V
	public static fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/player/PlayerLiquidEnterEvent$Companion : dev/racci/minix/api/events/CompanionEventHandler {
	public fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public abstract class dev/racci/minix/api/events/player/PlayerLiquidEvent : dev/racci/minix/api/events/player/KPlayerEvent {
	public synthetic fun <init> (Lorg/bukkit/entity/Player;Ldev/racci/minix/api/data/enums/LiquidType;Ldev/racci/minix/api/data/enums/LiquidType;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component2 ()Ldev/racci/minix/api/data/enums/LiquidType;
	public final fun component3 ()Ldev/racci/minix/api/data/enums/LiquidType;
	public final fun getNewType ()Ldev/racci/minix/api/data/enums/LiquidType;
	public final fun getPreviousType ()Ldev/racci/minix/api/data/enums/LiquidType;
}

public final class dev/racci/minix/api/events/player/PlayerLiquidExitEvent : dev/racci/minix/api/events/player/PlayerLiquidEvent {
	public static final field Companion Ldev/racci/minix/api/events/player/PlayerLiquidExitEvent$Companion;
	public fun <init> (Lorg/bukkit/entity/Player;Ldev/racci/minix/api/data/enums/LiquidType;Ldev/racci/minix/api/data/enums/LiquidType;)V
	public static fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/player/PlayerLiquidExitEvent$Companion : dev/racci/minix/api/events/CompanionEventHandler {
	public fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/player/PlayerMoveFullXYZEvent : dev/racci/minix/api/events/player/KPlayerEvent {
	public static final field Companion Ldev/racci/minix/api/events/player/PlayerMoveFullXYZEvent$Companion;
	public fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/Location;Lorg/bukkit/Location;)V
	public final fun component2 ()Lorg/bukkit/Location;
	public final fun component3 ()Lorg/bukkit/Location;
	public final fun getFrom ()Lorg/bukkit/Location;
	public static fun getHandlerList ()Lorg/bukkit/event/HandlerList;
	public final fun getTo ()Lorg/bukkit/Location;
	public final fun setTo (Lorg/bukkit/Location;)V
}

public final class dev/racci/minix/api/events/player/PlayerMoveFullXYZEvent$Companion : dev/racci/minix/api/events/CompanionEventHandler {
	public fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/player/PlayerMoveXYZEvent : dev/racci/minix/api/events/player/KPlayerEvent {
	public static final field Companion Ldev/racci/minix/api/events/player/PlayerMoveXYZEvent$Companion;
	public fun <init> (Lorg/bukkit/entity/Player;Lorg/bukkit/Location;Lorg/bukkit/Location;)V
	public final fun component2 ()Lorg/bukkit/Location;
	public final fun component3 ()Lorg/bukkit/Location;
	public final fun getFrom ()Lorg/bukkit/Location;
	public static fun getHandlerList ()Lorg/bukkit/event/HandlerList;
	public final fun getTo ()Lorg/bukkit/Location;
	public final fun hasExplicitlyChangedBlock ()Z
	public final fun setTo (Lorg/bukkit/Location;)V
}

public final class dev/racci/minix/api/events/player/PlayerMoveXYZEvent$Companion : dev/racci/minix/api/events/CompanionEventHandler {
	public fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/player/PlayerUnloadEvent : dev/racci/minix/api/events/KEvent {
	public static final field Companion Ldev/racci/minix/api/events/player/PlayerUnloadEvent$Companion;
	public fun <init> ()V
	public fun <init> (Lorg/bukkit/entity/Player;Ljava/util/UUID;)V
	public synthetic fun <init> (Lorg/bukkit/entity/Player;Ljava/util/UUID;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lorg/bukkit/entity/Player;
	public final fun component2 ()Ljava/util/UUID;
	public static fun getHandlerList ()Lorg/bukkit/event/HandlerList;
	public final fun getPlayer ()Lorg/bukkit/entity/Player;
	public final fun getUuid ()Ljava/util/UUID;
}

public final class dev/racci/minix/api/events/player/PlayerUnloadEvent$Companion : dev/racci/minix/api/events/CompanionEventHandler {
	public fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/plugin/CaughtCoroutineExceptionEvent : dev/racci/minix/api/events/plugin/KPluginEvent, org/bukkit/event/Cancellable {
	public static final field Companion Ldev/racci/minix/api/events/plugin/CaughtCoroutineExceptionEvent$Companion;
	public fun <init> (Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/Throwable;)V
	public static fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/plugin/CaughtCoroutineExceptionEvent$Companion : dev/racci/minix/api/events/CompanionEventHandler {
	public fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public abstract class dev/racci/minix/api/events/plugin/KPluginEvent : org/bukkit/event/server/PluginEvent, org/bukkit/event/Cancellable {
	public fun <init> (Ldev/racci/minix/api/plugin/MinixPlugin;)V
	public fun getHandlers ()Lorg/bukkit/event/HandlerList;
	public fun isCancelled ()Z
	public fun setCancelled (Z)V
}

public abstract class dev/racci/minix/api/events/world/KWorldEvent : org/bukkit/event/world/WorldEvent, org/bukkit/event/Cancellable {
	public fun <init> (Lorg/bukkit/World;)V
	public fun getHandlers ()Lorg/bukkit/event/HandlerList;
	public fun isCancelled ()Z
	public final fun isCustom ()Z
	public final fun isEnd ()Z
	public final fun isNether ()Z
	public final fun isOverworld ()Z
	public fun setCancelled (Z)V
}

public final class dev/racci/minix/api/events/world/WorldDayEvent : dev/racci/minix/api/events/world/KWorldEvent {
	public static final field Companion Ldev/racci/minix/api/events/world/WorldDayEvent$Companion;
	public fun <init> (Lorg/bukkit/World;)V
	public static final fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/world/WorldDayEvent$Companion {
	public final fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/world/WorldNightEvent : dev/racci/minix/api/events/world/KWorldEvent {
	public static final field Companion Ldev/racci/minix/api/events/world/WorldNightEvent$Companion;
	public fun <init> (Lorg/bukkit/World;)V
	public static final fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/events/world/WorldNightEvent$Companion {
	public final fun getHandlerList ()Lorg/bukkit/event/HandlerList;
}

public final class dev/racci/minix/api/exceptions/DependencyErrorException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public final class dev/racci/minix/api/exceptions/IncorrectItemTypeException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public final class dev/racci/minix/api/exceptions/LevelConversionException : java/lang/RuntimeException {
	public fun <init> (Ljava/lang/Object;)V
}

public final class dev/racci/minix/api/exceptions/MissingAnnotationException : java/lang/RuntimeException {
	public fun <init> (Lkotlin/reflect/KClass;Lkotlin/reflect/KClass;)V
}

public final class dev/racci/minix/api/exceptions/MissingPluginException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public final class dev/racci/minix/api/exceptions/NoTraceException : java/lang/RuntimeException {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun fillInStackTrace ()Ljava/lang/Throwable;
}

public abstract class dev/racci/minix/api/extension/Extension : dev/racci/minix/api/extension/ExtensionSkeleton {
	public fun <init> ()V
	public final fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public final fun equals (Ljava/lang/Object;)Z
	public fun getDispatcher ()Ldev/racci/minix/api/utils/Closeable;
	public final fun getEventListener ()Ldev/racci/minix/api/extensions/KListener;
	public fun getKoin ()Lorg/koin/core/Koin;
	public final fun getLoaded ()Z
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public final fun getName ()Ljava/lang/String;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun getState ()Ldev/racci/minix/api/extension/ExtensionState;
	public final fun getSupervisor ()Lkotlinx/coroutines/CoroutineScope;
	public final fun getValue ()Ljava/lang/String;
	public fun handleDisable (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun handleEnable (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun handleLoad (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun handleUnload (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun hashCode ()I
	public final fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun setState (Ldev/racci/minix/api/extension/ExtensionState;)V
	public final fun setState (Ldev/racci/minix/api/extension/ExtensionState;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public final fun toString ()Ljava/lang/String;
}

public abstract class dev/racci/minix/api/extension/Extension$ExtensionCompanion : org/koin/core/component/KoinComponent {
	public fun <init> ()V
	public fun getKoin ()Lorg/koin/core/Koin;
	public final fun getService ()Ldev/racci/minix/api/extension/Extension;
	public final fun getValue (Ldev/racci/minix/api/extension/Extension$ExtensionCompanion;Lkotlin/reflect/KProperty;)Ldev/racci/minix/api/extension/Extension;
	public final fun inject ()Lkotlin/Lazy;
}

public abstract interface class dev/racci/minix/api/extension/ExtensionSkeleton : dev/racci/minix/api/extensions/WithPlugin, org/koin/core/qualifier/Qualifier {
	public abstract fun getDispatcher ()Ldev/racci/minix/api/utils/Closeable;
	public abstract fun getEventListener ()Ldev/racci/minix/api/extensions/KListener;
	public abstract fun getLoaded ()Z
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getState ()Ldev/racci/minix/api/extension/ExtensionState;
	public abstract fun getSupervisor ()Lkotlinx/coroutines/CoroutineScope;
	public abstract fun handleDisable (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleEnable (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleLoad (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleUnload (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/extension/ExtensionSkeleton$DefaultImpls {
	public static fun async (Ldev/racci/minix/api/extension/ExtensionSkeleton;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static fun completableAsync (Ldev/racci/minix/api/extension/ExtensionSkeleton;Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public static fun completableSync (Ldev/racci/minix/api/extension/ExtensionSkeleton;Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public static fun deferredAsync (Ldev/racci/minix/api/extension/ExtensionSkeleton;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public static fun deferredSync (Ldev/racci/minix/api/extension/ExtensionSkeleton;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public static fun deleteProperty (Ldev/racci/minix/api/extension/ExtensionSkeleton;Ljava/lang/String;)V
	public static fun getKoin (Ldev/racci/minix/api/extension/ExtensionSkeleton;)Lorg/koin/core/Koin;
	public static fun getLogger (Ldev/racci/minix/api/extension/ExtensionSkeleton;)Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public static fun getProperty (Ldev/racci/minix/api/extension/ExtensionSkeleton;Ljava/lang/String;)Ljava/lang/Object;
	public static fun getProperty (Ldev/racci/minix/api/extension/ExtensionSkeleton;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun handleDisable (Ldev/racci/minix/api/extension/ExtensionSkeleton;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun handleEnable (Ldev/racci/minix/api/extension/ExtensionSkeleton;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun handleLoad (Ldev/racci/minix/api/extension/ExtensionSkeleton;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun handleUnload (Ldev/racci/minix/api/extension/ExtensionSkeleton;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun launch (Ldev/racci/minix/api/extension/ExtensionSkeleton;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static fun registerEvents (Ldev/racci/minix/api/extension/ExtensionSkeleton;[Lorg/bukkit/event/Listener;)V
	public static fun setProperty (Ldev/racci/minix/api/extension/ExtensionSkeleton;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun sync (Ldev/racci/minix/api/extension/ExtensionSkeleton;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/extension/ExtensionState : java/lang/Enum {
	public static final field DISABLED Ldev/racci/minix/api/extension/ExtensionState;
	public static final field DISABLING Ldev/racci/minix/api/extension/ExtensionState;
	public static final field ENABLED Ldev/racci/minix/api/extension/ExtensionState;
	public static final field ENABLING Ldev/racci/minix/api/extension/ExtensionState;
	public static final field LOADED Ldev/racci/minix/api/extension/ExtensionState;
	public static final field LOADING Ldev/racci/minix/api/extension/ExtensionState;
	public static final field UNLOADED Ldev/racci/minix/api/extension/ExtensionState;
	public static final field UNLOADING Ldev/racci/minix/api/extension/ExtensionState;
	public static fun valueOf (Ljava/lang/String;)Ldev/racci/minix/api/extension/ExtensionState;
	public static fun values ()[Ldev/racci/minix/api/extension/ExtensionState;
}

public final class dev/racci/minix/api/extension/ExtensionStateEvent {
	public fun <init> (Ldev/racci/minix/api/extension/Extension;Ldev/racci/minix/api/extension/ExtensionState;)V
	public final fun component1 ()Ldev/racci/minix/api/extension/Extension;
	public final fun component2 ()Ldev/racci/minix/api/extension/ExtensionState;
	public final fun copy (Ldev/racci/minix/api/extension/Extension;Ldev/racci/minix/api/extension/ExtensionState;)Ldev/racci/minix/api/extension/ExtensionStateEvent;
	public static synthetic fun copy$default (Ldev/racci/minix/api/extension/ExtensionStateEvent;Ldev/racci/minix/api/extension/Extension;Ldev/racci/minix/api/extension/ExtensionState;ILjava/lang/Object;)Ldev/racci/minix/api/extension/ExtensionStateEvent;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExtension ()Ldev/racci/minix/api/extension/Extension;
	public final fun getState ()Ldev/racci/minix/api/extension/ExtensionState;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/racci/minix/api/extension/ExtensionStateKt {
	public static final fun send (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/extension/ExtensionStateEvent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/extensions/Console : org/bukkit/command/ConsoleCommandSender {
	public static final field INSTANCE Ldev/racci/minix/api/extensions/Console;
	public fun abandonConversation (Lorg/bukkit/conversations/Conversation;)V
	public fun abandonConversation (Lorg/bukkit/conversations/Conversation;Lorg/bukkit/conversations/ConversationAbandonedEvent;)V
	public fun acceptConversationInput (Ljava/lang/String;)V
	public fun addAttachment (Lorg/bukkit/plugin/Plugin;)Lorg/bukkit/permissions/PermissionAttachment;
	public fun addAttachment (Lorg/bukkit/plugin/Plugin;I)Lorg/bukkit/permissions/PermissionAttachment;
	public fun addAttachment (Lorg/bukkit/plugin/Plugin;Ljava/lang/String;Z)Lorg/bukkit/permissions/PermissionAttachment;
	public fun addAttachment (Lorg/bukkit/plugin/Plugin;Ljava/lang/String;ZI)Lorg/bukkit/permissions/PermissionAttachment;
	public fun beginConversation (Lorg/bukkit/conversations/Conversation;)Z
	public final fun command (Ljava/lang/String;)Z
	public fun getEffectivePermissions ()Ljava/util/Set;
	public fun getName ()Ljava/lang/String;
	public fun getServer ()Lorg/bukkit/Server;
	public fun hasPermission (Ljava/lang/String;)Z
	public fun hasPermission (Lorg/bukkit/permissions/Permission;)Z
	public fun isConversing ()Z
	public fun isOp ()Z
	public fun isPermissionSet (Ljava/lang/String;)Z
	public fun isPermissionSet (Lorg/bukkit/permissions/Permission;)Z
	public fun name ()Lnet/kyori/adventure/text/Component;
	public fun recalculatePermissions ()V
	public fun removeAttachment (Lorg/bukkit/permissions/PermissionAttachment;)V
	public fun sendMessage (Ljava/lang/String;)V
	public fun sendMessage (Ljava/util/UUID;Ljava/lang/String;)V
	public fun sendMessage (Ljava/util/UUID;[Ljava/lang/String;)V
	public fun sendMessage ([Ljava/lang/String;)V
	public fun sendRawMessage (Ljava/lang/String;)V
	public fun sendRawMessage (Ljava/util/UUID;Ljava/lang/String;)V
	public fun setOp (Z)V
	public fun spigot ()Lorg/bukkit/command/CommandSender$Spigot;
}

public final class dev/racci/minix/api/extensions/ExAdventureKt {
	public static final fun lazyPlaceholder (Lnet/kyori/adventure/text/minimessage/MiniMessage;Ljava/lang/String;[Lkotlin/Pair;)Lnet/kyori/adventure/text/Component;
}

public final class dev/racci/minix/api/extensions/ExBlockKt {
	public static final fun sendBlockChange (Lorg/bukkit/block/Block;Lorg/bukkit/Material;Lkotlin/jvm/functions/Function1;[Lorg/bukkit/entity/Player;)V
	public static final fun sendBlockChange (Lorg/bukkit/block/Block;Lorg/bukkit/block/data/BlockData;[Lorg/bukkit/entity/Player;)V
}

public final class dev/racci/minix/api/extensions/ExBooleanKt {
	public static final fun asBoolean (I)Z
	public static final fun asInt (Ljava/lang/Boolean;)I
	public static final fun asInt (Z)I
}

public final class dev/racci/minix/api/extensions/ExBukkitKt {
	public static final fun broadcast (Ljava/lang/Iterable;Lkotlin/jvm/functions/Function1;)V
	public static final fun broadcast (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)V
	public static final fun broadcast (Lnet/kyori/adventure/text/Component;)I
	public static final fun broadcast ([Lorg/bukkit/entity/Player;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun broadcast$default (Ljava/lang/Iterable;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static final fun getPm ()Lorg/bukkit/plugin/PluginManager;
	public static final fun getServer ()Lorg/bukkit/Server;
}

public final class dev/racci/minix/api/extensions/ExCommandKt {
	public static final fun getKnownCommandsField ()Ljava/lang/reflect/Field;
	public static final fun getServerCommands ()Lorg/bukkit/command/SimpleCommandMap;
}

public final class dev/racci/minix/api/extensions/ExConfigurationKt {
	public static final fun putAll (Lorg/bukkit/configuration/ConfigurationSection;Ljava/util/Map;)V
	public static final fun putAllIfAbsent (Lorg/bukkit/configuration/ConfigurationSection;Ljava/util/Map;)I
	public static final fun toMap (Lorg/bukkit/configuration/ConfigurationSection;)Ljava/util/Map;
}

public final class dev/racci/minix/api/extensions/ExEntityKt {
	public static final fun hasOwner (Lorg/bukkit/entity/Entity;)Z
	public static final fun isTamed (Lorg/bukkit/entity/Entity;)Z
}

public final class dev/racci/minix/api/extensions/ExEnumKt {
	public static final fun formatted (Ljava/lang/Enum;Ljava/lang/String;Z)Ljava/lang/String;
	public static synthetic fun formatted$default (Ljava/lang/Enum;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;
}

public final class dev/racci/minix/api/extensions/ExEventKt {
	public static final fun callEvent (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)Z
	public static final fun cancel (Lorg/bukkit/event/Cancellable;)V
	public static final fun event (Lorg/bukkit/event/Listener;Lkotlin/reflect/KClass;Ldev/racci/minix/api/plugin/MinixPlugin;Lorg/bukkit/event/EventPriority;ZZLkotlin/jvm/functions/Function2;)V
	public static synthetic fun event$default (Lorg/bukkit/event/Listener;Lkotlin/reflect/KClass;Ldev/racci/minix/api/plugin/MinixPlugin;Lorg/bukkit/event/EventPriority;ZZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)V
	public static final fun events (Ldev/racci/minix/api/extensions/WithPlugin;Lkotlin/jvm/functions/Function1;)Ldev/racci/minix/api/extensions/SimpleKListener;
	public static final fun events (Ldev/racci/minix/api/extensions/WithPlugin;[Lkotlin/reflect/KClass;Lorg/bukkit/event/EventPriority;ZZLdev/racci/minix/api/extensions/SimpleKListener;Lkotlin/jvm/functions/Function2;)V
	public static final fun events (Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/jvm/functions/Function1;)Ldev/racci/minix/api/extensions/SimpleKListener;
	public static synthetic fun events$default (Ldev/racci/minix/api/extensions/WithPlugin;[Lkotlin/reflect/KClass;Lorg/bukkit/event/EventPriority;ZZLdev/racci/minix/api/extensions/SimpleKListener;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)V
	public static final fun getDisplaced (Lorg/bukkit/event/player/PlayerMoveEvent;)Z
	public static final fun registerEvents (Lorg/bukkit/event/Listener;Ldev/racci/minix/api/plugin/MinixPlugin;)V
	public static final fun unregisterListener (Lorg/bukkit/event/Listener;)V
}

public final class dev/racci/minix/api/extensions/ExInventoryKt {
	public static final fun getHasSpace (Lorg/bukkit/inventory/Inventory;)Z
	public static final fun hasSpace (Lorg/bukkit/inventory/Inventory;Lorg/bukkit/inventory/ItemStack;I)Z
	public static synthetic fun hasSpace$default (Lorg/bukkit/inventory/Inventory;Lorg/bukkit/inventory/ItemStack;IILjava/lang/Object;)Z
	public static final fun spaceOf (Lorg/bukkit/inventory/Inventory;Lorg/bukkit/inventory/ItemStack;)I
}

public final class dev/racci/minix/api/extensions/ExItemStackKt {
	public static final fun addTexture (Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;)V
	public static final fun addTexture (Lorg/bukkit/inventory/meta/ItemMeta;Ljava/lang/String;)V
	public static final fun asItemStack (Lorg/bukkit/Material;ILkotlin/jvm/functions/Function1;)Lorg/bukkit/inventory/meta/ItemMeta;
	public static synthetic fun asItemStack$default (Lorg/bukkit/Material;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/bukkit/inventory/meta/ItemMeta;
	public static final fun displayName (Lorg/bukkit/inventory/ItemStack;Lnet/kyori/adventure/text/Component;)Lorg/bukkit/inventory/meta/ItemMeta;
	public static final fun getPdc (Lorg/bukkit/inventory/ItemStack;)Lorg/bukkit/persistence/PersistentDataContainer;
	public static final fun getTexture (Lorg/bukkit/inventory/meta/SkullMeta;)Ljava/lang/String;
	public static final fun isAxe (Lorg/bukkit/Material;)Z
	public static final fun isDoor (Lorg/bukkit/Material;)Z
	public static final fun isHoe (Lorg/bukkit/Material;)Z
	public static final fun isIngot (Lorg/bukkit/Material;)Z
	public static final fun isLava (Lorg/bukkit/Material;)Z
	public static final fun isMinecart (Lorg/bukkit/Material;)Z
	public static final fun isOre (Lorg/bukkit/Material;)Z
	public static final fun isPickaxe (Lorg/bukkit/Material;)Z
	public static final fun isSpade (Lorg/bukkit/Material;)Z
	public static final fun isSword (Lorg/bukkit/Material;)Z
	public static final fun isWater (Lorg/bukkit/Material;)Z
	public static final fun pdc (Lorg/bukkit/inventory/ItemStack;Lkotlin/jvm/functions/Function1;)Lorg/bukkit/persistence/PersistentDataContainer;
}

public final class dev/racci/minix/api/extensions/ExLocationKt {
	public static final fun dropItem (Lorg/bukkit/Location;Lorg/bukkit/inventory/ItemStack;)Lorg/bukkit/entity/Item;
	public static final fun dropItemNaturally (Lorg/bukkit/Location;Lorg/bukkit/inventory/ItemStack;)Lorg/bukkit/entity/Item;
	public static final fun generateTree (Lorg/bukkit/Location;Lorg/bukkit/TreeType;)Z
	public static final fun isDay (Lorg/bukkit/Location;)Z
	public static final fun isNight (Lorg/bukkit/Location;)Z
	public static final fun playEffect (Lorg/bukkit/Location;Lorg/bukkit/Effect;I)V
	public static final fun playEffect (Lorg/bukkit/Location;Lorg/bukkit/Effect;II)V
	public static final fun playEffect (Lorg/bukkit/Location;Lorg/bukkit/Effect;Ljava/lang/Object;)V
	public static final fun playEffect (Lorg/bukkit/Location;Lorg/bukkit/Effect;Ljava/lang/Object;I)V
	public static final fun playSound (Lorg/bukkit/Location;Lorg/bukkit/Sound;FF)V
	public static final fun spawnArrow (Lorg/bukkit/Location;Lorg/bukkit/util/Vector;FF)Lorg/bukkit/entity/Arrow;
	public static final fun strikeLightning (Lorg/bukkit/Location;)Lorg/bukkit/entity/LightningStrike;
	public static final fun strikeLightningEffect (Lorg/bukkit/Location;)Lorg/bukkit/entity/LightningStrike;
}

public final class dev/racci/minix/api/extensions/ExMaterialKt {
	public static final fun toItemStack (Lorg/bukkit/Material;ILkotlin/jvm/functions/Function1;)Lorg/bukkit/inventory/ItemStack;
	public static synthetic fun toItemStack$default (Lorg/bukkit/Material;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/bukkit/inventory/ItemStack;
}

public final class dev/racci/minix/api/extensions/ExMathKt {
	public static final fun round (DI)D
}

public final class dev/racci/minix/api/extensions/ExMiniMessageKt {
	public static final fun asInsert (Lnet/kyori/adventure/text/Component;)Lnet/kyori/adventure/text/minimessage/tag/Inserting;
	public static final fun parse (Lnet/kyori/adventure/text/minimessage/MiniMessage;Ljava/lang/String;ZLkotlin/jvm/functions/Function1;)Lnet/kyori/adventure/text/Component;
	public static synthetic fun parse$default (Lnet/kyori/adventure/text/minimessage/MiniMessage;Ljava/lang/String;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lnet/kyori/adventure/text/Component;
	public static final fun template (Lnet/kyori/adventure/text/minimessage/MiniMessage;Ljava/lang/String;[Lkotlin/Pair;Lkotlin/jvm/functions/Function1;)Lnet/kyori/adventure/text/Component;
	public static synthetic fun template$default (Lnet/kyori/adventure/text/minimessage/MiniMessage;Ljava/lang/String;[Lkotlin/Pair;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lnet/kyori/adventure/text/Component;
}

public final class dev/racci/minix/api/extensions/ExPermissionKt {
	public static final fun allPermission (Lorg/bukkit/permissions/Permissible;[Ljava/lang/String;)Z
	public static final fun anyPermission (Lorg/bukkit/permissions/Permissible;[Ljava/lang/String;)Z
	public static final fun hasPermissionOrStar (Lorg/bukkit/permissions/Permissible;Ljava/lang/String;)Z
}

public final class dev/racci/minix/api/extensions/ExPersistentDataHolderKt {
	public static final fun getPdc (Lorg/bukkit/persistence/PersistentDataHolder;)Lorg/bukkit/persistence/PersistentDataContainer;
	public static final fun pdc (Lorg/bukkit/persistence/PersistentDataHolder;Lkotlin/jvm/functions/Function1;)Lorg/bukkit/persistence/PersistentDataContainer;
}

public final class dev/racci/minix/api/extensions/ExPlayerKt {
	public static final fun getInEnd (Lorg/bukkit/entity/Player;)Z
	public static final fun getInNether (Lorg/bukkit/entity/Player;)Z
	public static final fun getInOverworld (Lorg/bukkit/entity/Player;)Z
	public static final fun isDay (Lorg/bukkit/entity/Player;)Z
	public static final fun isNight (Lorg/bukkit/entity/Player;)Z
	public static final fun isOwner (Lorg/bukkit/entity/Player;Lorg/bukkit/entity/Entity;)Z
}

public final class dev/racci/minix/api/extensions/ExPluginKt {
	public static final fun async (Ldev/racci/minix/api/extensions/WithPlugin;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static final fun completableAsync (Ldev/racci/minix/api/extensions/WithPlugin;Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public static final fun completableSync (Ldev/racci/minix/api/extensions/WithPlugin;Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public static final fun deferredAsync (Ldev/racci/minix/api/extensions/WithPlugin;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public static final fun deferredSync (Ldev/racci/minix/api/extensions/WithPlugin;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public static final fun getLog (Ldev/racci/minix/api/extensions/WithPlugin;)Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public static final fun registerEvents (Ldev/racci/minix/api/extensions/WithPlugin;[Lorg/bukkit/event/Listener;)V
	public static final fun registerEvents (Lorg/bukkit/plugin/Plugin;[Lorg/bukkit/event/Listener;)V
	public static final fun sync (Ldev/racci/minix/api/extensions/WithPlugin;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/extensions/ExRangeKt {
	public static final fun randomOrMin (Lkotlin/ranges/ClosedFloatingPointRange;)D
	public static final fun randomOrMin (Lkotlin/ranges/ClosedFloatingPointRange;)F
	public static final fun randomOrMin (Lkotlin/ranges/IntRange;)I
	public static final fun randomOrMin (Lkotlin/ranges/LongRange;)J
}

public final class dev/racci/minix/api/extensions/ExSchedulerKt {
	public static final fun scheduler (Lkotlin/jvm/functions/Function2;)Ldev/racci/minix/api/scheduler/CoroutineRunnable;
	public static final fun task-uklvIs0 (Lkotlin/time/Duration;Lkotlin/time/Duration;Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/jvm/functions/Function2;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public static synthetic fun task-uklvIs0$default (Lkotlin/time/Duration;Lkotlin/time/Duration;Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public static final fun task-w8mxNcw (Ldev/racci/minix/api/extensions/WithPlugin;Lkotlin/time/Duration;Lkotlin/time/Duration;Lkotlin/jvm/functions/Function2;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public static final fun task-w8mxNcw (Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/time/Duration;Lkotlin/time/Duration;Lkotlin/jvm/functions/Function2;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public static synthetic fun task-w8mxNcw$default (Ldev/racci/minix/api/extensions/WithPlugin;Lkotlin/time/Duration;Lkotlin/time/Duration;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public static synthetic fun task-w8mxNcw$default (Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/time/Duration;Lkotlin/time/Duration;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public static final fun task-xKcISBE (Lkotlin/time/Duration;Lkotlin/time/Duration;ZLdev/racci/minix/api/plugin/MinixPlugin;Lkotlin/jvm/functions/Function2;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public static synthetic fun task-xKcISBE$default (Lkotlin/time/Duration;Lkotlin/time/Duration;ZLdev/racci/minix/api/plugin/MinixPlugin;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public static final fun taskAsync-uklvIs0 (Lkotlin/time/Duration;Lkotlin/time/Duration;Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/jvm/functions/Function2;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public static synthetic fun taskAsync-uklvIs0$default (Lkotlin/time/Duration;Lkotlin/time/Duration;Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public static final fun taskAsync-w8mxNcw (Ldev/racci/minix/api/extensions/WithPlugin;Lkotlin/time/Duration;Lkotlin/time/Duration;Lkotlin/jvm/functions/Function2;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public static final fun taskAsync-w8mxNcw (Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/time/Duration;Lkotlin/time/Duration;Lkotlin/jvm/functions/Function2;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public static synthetic fun taskAsync-w8mxNcw$default (Ldev/racci/minix/api/extensions/WithPlugin;Lkotlin/time/Duration;Lkotlin/time/Duration;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public static synthetic fun taskAsync-w8mxNcw$default (Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/time/Duration;Lkotlin/time/Duration;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ldev/racci/minix/api/scheduler/CoroutineTask;
}

public final class dev/racci/minix/api/extensions/ExSerializerKt {
	public static final fun serializer (Ljava/util/UUID;)Ldev/racci/minix/api/serializables/UUIDSerializer;
}

public final class dev/racci/minix/api/extensions/ExServerKt {
	public static final fun addRecipe (Lorg/bukkit/inventory/Recipe;)Z
	public static final fun create (Lorg/bukkit/WorldCreator;)Lorg/bukkit/World;
	public static final fun getAllowEnd ()Z
	public static final fun getAllowFlight ()Z
	public static final fun getAllowNether ()Z
	public static final fun getAmbientSpawnLimit ()I
	public static final fun getAnimalSpawnLimit ()I
	public static final fun getBannedPlayers ()Ljava/util/Set;
	public static final fun getConnectionThrottle ()J
	public static final fun getDefaultGameMode ()Lorg/bukkit/GameMode;
	public static final fun getGenerateStructures ()Z
	public static final fun getIdleTimeout ()I
	public static final fun getIpBans ()Ljava/util/Set;
	public static final fun getMessenger ()Lorg/bukkit/plugin/messaging/Messenger;
	public static final fun getMonsterSpawnLimit ()I
	public static final fun getOnlineMode ()Z
	public static final fun getOnlinePlayers ()Ljava/util/Collection;
	public static final fun getOperators ()Ljava/util/Set;
	public static final fun getPluginManager ()Lorg/bukkit/plugin/PluginManager;
	public static final fun getRecipes ()Ljava/util/Iterator;
	public static final fun getScheduler ()Lorg/bukkit/scheduler/BukkitScheduler;
	public static final fun getScoreboardManager ()Lorg/bukkit/scoreboard/ScoreboardManager;
	public static final fun getServicesManager ()Lorg/bukkit/plugin/ServicesManager;
	public static final fun getSpawnRadius ()I
	public static final fun getTicksPerAnimalSpawns ()I
	public static final fun getTicksPerMonsterSpawns ()I
	public static final fun getUpdateFolder ()Ljava/lang/String;
	public static final fun getUpdateFolderFile ()Ljava/io/File;
	public static final fun getWhitelist ()Z
	public static final fun getWhitelistedPlayers ()Ljava/util/Set;
	public static final fun getWorldContainer ()Ljava/io/File;
	public static final fun getWorldType ()Ljava/lang/String;
	public static final fun getWorlds ()Ljava/util/List;
	public static final fun isHardcore ()Z
	public static final fun isPrimaryThread ()Z
	public static final fun matchPlayer (Ljava/lang/String;)Ljava/util/List;
	public static final fun offlinePlayer (Ljava/lang/String;)Lorg/bukkit/OfflinePlayer;
	public static final fun offlinePlayer (Ljava/util/UUID;)Lorg/bukkit/OfflinePlayer;
	public static final fun onlinePlayer (Ljava/lang/String;)Lorg/bukkit/entity/Player;
	public static final fun onlinePlayer (Ljava/util/UUID;)Lorg/bukkit/entity/Player;
	public static final fun player (Ljava/lang/String;)Lorg/bukkit/entity/Player;
	public static final fun player (Ljava/util/UUID;)Lorg/bukkit/entity/Player;
	public static final fun playerExact (Ljava/lang/String;)Lorg/bukkit/entity/Player;
	public static final fun recipesFor (Lorg/bukkit/inventory/ItemStack;)Ljava/util/List;
	public static final fun reloadWhitelist ()V
	public static final fun setDefaultGameMode (Lorg/bukkit/GameMode;)V
	public static final fun setIdleTimeout (I)V
	public static final fun setSpawnRadius (I)V
	public static final fun setWhitelist (Z)V
	public static final fun world (Ljava/lang/String;)Lorg/bukkit/World;
}

public final class dev/racci/minix/api/extensions/ExStringKt {
	public static final fun toNamespacedKey (Ljava/lang/String;)Lorg/bukkit/NamespacedKey;
}

public final class dev/racci/minix/api/extensions/ExTextKt {
	public static final fun message (Ljava/lang/String;Lorg/bukkit/command/CommandSender;)V
	public static final fun message (Lnet/kyori/adventure/text/Component;Lnet/kyori/adventure/audience/Audience;)V
	public static final fun message (Lnet/kyori/adventure/text/Component;Lorg/bukkit/command/CommandSender;)V
	public static final fun msg (Lorg/bukkit/command/CommandSender;Ljava/lang/String;)V
	public static final fun msg (Lorg/bukkit/command/CommandSender;Ljava/util/Collection;)V
	public static final fun msg (Lorg/bukkit/command/CommandSender;Lnet/kyori/adventure/text/ComponentLike;)V
	public static final fun msg (Lorg/bukkit/command/CommandSender;[Lnet/kyori/adventure/text/ComponentLike;)V
	public static final fun msg (Lorg/bukkit/entity/Player;Ljava/lang/String;)V
	public static final fun msg (Lorg/bukkit/entity/Player;Ljava/util/Collection;)V
	public static final fun msg (Lorg/bukkit/entity/Player;Lnet/kyori/adventure/text/ComponentLike;)V
	public static final fun msg (Lorg/bukkit/entity/Player;[Lnet/kyori/adventure/text/ComponentLike;)V
	public static final fun parse (Ljava/lang/String;)Lnet/kyori/adventure/text/Component;
	public static final fun parse (Ljava/util/Collection;)Ljava/util/List;
	public static final fun parse ([Ljava/lang/String;)[Lnet/kyori/adventure/text/Component;
}

public final class dev/racci/minix/api/extensions/ExTimeKt {
	public static final fun getInWholeTicks-LRDsOJo (J)J
	public static final fun getTicks (Ljava/lang/Number;)J
}

public final class dev/racci/minix/api/extensions/ExWorldKt {
	public static final fun isEnd (Lorg/bukkit/World;)Z
	public static final fun isNether (Lorg/bukkit/World;)Z
	public static final fun isNight (Lorg/bukkit/World;)Z
	public static final fun isOverworld (Lorg/bukkit/World;)Z
}

public abstract interface class dev/racci/minix/api/extensions/KListener : dev/racci/minix/api/extensions/WithPlugin, org/bukkit/event/Listener {
}

public final class dev/racci/minix/api/extensions/KListener$DefaultImpls {
	public static fun async (Ldev/racci/minix/api/extensions/KListener;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static fun completableAsync (Ldev/racci/minix/api/extensions/KListener;Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public static fun completableSync (Ldev/racci/minix/api/extensions/KListener;Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public static fun deferredAsync (Ldev/racci/minix/api/extensions/KListener;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public static fun deferredSync (Ldev/racci/minix/api/extensions/KListener;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public static fun deleteProperty (Ldev/racci/minix/api/extensions/KListener;Ljava/lang/String;)V
	public static fun getKoin (Ldev/racci/minix/api/extensions/KListener;)Lorg/koin/core/Koin;
	public static fun getLogger (Ldev/racci/minix/api/extensions/KListener;)Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public static fun getProperty (Ldev/racci/minix/api/extensions/KListener;Ljava/lang/String;)Ljava/lang/Object;
	public static fun getProperty (Ldev/racci/minix/api/extensions/KListener;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun launch (Ldev/racci/minix/api/extensions/KListener;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static fun registerEvents (Ldev/racci/minix/api/extensions/KListener;[Lorg/bukkit/event/Listener;)V
	public static fun setProperty (Ldev/racci/minix/api/extensions/KListener;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun sync (Ldev/racci/minix/api/extensions/KListener;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public abstract interface class dev/racci/minix/api/extensions/KotlinListener : org/bukkit/event/Listener {
}

public final class dev/racci/minix/api/extensions/SimpleKListener : dev/racci/minix/api/extensions/KListener {
	public fun <init> (Ldev/racci/minix/api/plugin/MinixPlugin;)V
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public final fun component1 ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public final fun copy (Ldev/racci/minix/api/plugin/MinixPlugin;)Ldev/racci/minix/api/extensions/SimpleKListener;
	public static synthetic fun copy$default (Ldev/racci/minix/api/extensions/SimpleKListener;Ldev/racci/minix/api/plugin/MinixPlugin;ILjava/lang/Object;)Ldev/racci/minix/api/extensions/SimpleKListener;
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun hashCode ()I
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/racci/minix/api/extensions/WithPlugin : org/koin/core/component/KoinComponent {
	public abstract fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public abstract fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public abstract fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public abstract fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public abstract fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public abstract fun deleteProperty (Ljava/lang/String;)V
	public abstract fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public abstract fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public abstract fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public abstract fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public abstract fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public abstract fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/extensions/WithPlugin$DefaultImpls {
	public static fun async (Ldev/racci/minix/api/extensions/WithPlugin;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static fun completableAsync (Ldev/racci/minix/api/extensions/WithPlugin;Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public static fun completableSync (Ldev/racci/minix/api/extensions/WithPlugin;Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public static fun deferredAsync (Ldev/racci/minix/api/extensions/WithPlugin;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public static fun deferredSync (Ldev/racci/minix/api/extensions/WithPlugin;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public static fun deleteProperty (Ldev/racci/minix/api/extensions/WithPlugin;Ljava/lang/String;)V
	public static fun getKoin (Ldev/racci/minix/api/extensions/WithPlugin;)Lorg/koin/core/Koin;
	public static fun getLogger (Ldev/racci/minix/api/extensions/WithPlugin;)Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public static fun getProperty (Ldev/racci/minix/api/extensions/WithPlugin;Ljava/lang/String;)Ljava/lang/Object;
	public static fun getProperty (Ldev/racci/minix/api/extensions/WithPlugin;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun launch (Ldev/racci/minix/api/extensions/WithPlugin;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static fun registerEvents (Ldev/racci/minix/api/extensions/WithPlugin;[Lorg/bukkit/event/Listener;)V
	public static fun setProperty (Ldev/racci/minix/api/extensions/WithPlugin;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun sync (Ldev/racci/minix/api/extensions/WithPlugin;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/extensions/collections/ExArrayKt {
	public static final fun contains ([Ljava/lang/String;Ljava/lang/String;Z)Z
	public static synthetic fun contains$default ([Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z
	public static final fun findKCallable ([Lkotlin/reflect/KCallable;Ljava/lang/String;Z)Larrow/core/Option;
	public static synthetic fun findKCallable$default ([Lkotlin/reflect/KCallable;Ljava/lang/String;ZILjava/lang/Object;)Larrow/core/Option;
	public static final fun getCast ([Ljava/lang/Object;I)Larrow/core/Validated;
	public static final fun ifEmpty ([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun ifNotEmpty ([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/extensions/collections/ExCollectionKt {
	public static final fun clear (Ljava/util/Collection;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun contains (Ljava/util/Collection;Ljava/lang/String;Z)Z
	public static synthetic fun contains$default (Ljava/util/Collection;Ljava/lang/String;ZILjava/lang/Object;)Z
	public static final fun findKCallable (Ljava/util/Collection;Ljava/lang/String;Z)Larrow/core/Option;
	public static synthetic fun findKCallable$default (Ljava/util/Collection;Ljava/lang/String;ZILjava/lang/Object;)Larrow/core/Option;
	public static final fun getCast (Ljava/util/Collection;I)Larrow/core/Validated;
	public static final fun ifEmpty (Ljava/util/Collection;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun ifNotEmpty (Ljava/util/Collection;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun toMultiMap (Lcom/google/common/collect/Multimap;)Ldev/racci/minix/api/utils/collections/muiltimap/MutableMultiMap;
}

public final class dev/racci/minix/api/extensions/collections/ExMapKt {
	public static final fun clear (Ljava/util/Map;Lkotlin/jvm/functions/Function3;)V
	public static final fun computeAndRemove (Ljava/util/Map;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Z
	public static final fun contains (Ljava/util/Map;Ljava/lang/String;Z)Z
	public static synthetic fun contains$default (Ljava/util/Map;Ljava/lang/String;ZILjava/lang/Object;)Z
	public static final fun get (Ljava/util/Map;Ljava/lang/String;Z)Larrow/core/Option;
	public static synthetic fun get$default (Ljava/util/Map;Ljava/lang/String;ZILjava/lang/Object;)Larrow/core/Option;
}

public final class dev/racci/minix/api/extensions/reflection/ExAnyKt {
	public static final fun castOr (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun castOrElse (Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public static final fun castOrThrow (Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun safeCast (Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun withCast (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/extensions/reflection/ExKCallableKt {
	public static final fun accessWith (Lkotlin/reflect/KCallable;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/extensions/reflection/ExKFunctionKt {
	public static final fun accessInvoke (Lkotlin/reflect/KFunction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun accessInvoke (Lkotlin/reflect/KFunction;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun callIfOverriddenKFunction0 (Lkotlin/reflect/KFunction;Lkotlin/reflect/KClass;)Ljava/lang/Object;
	public static final fun callIfOverriddenKSuspendFunction0 (Lkotlin/reflect/KFunction;Lkotlin/reflect/KClass;)Ljava/lang/Object;
	public static final fun ifOverriddenIn (Lkotlin/reflect/KFunction;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun isOverriddenIn (Lkotlin/reflect/KFunction;Ljava/lang/Object;)Z
}

public final class dev/racci/minix/api/extensions/reflection/ExKProperty0Kt {
	public static final fun accessGet (Lkotlin/reflect/KProperty0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun accessSet (Lkotlin/reflect/KProperty0;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun getOrDefault (Lkotlin/reflect/KProperty0;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun getOrElse (Lkotlin/reflect/KProperty0;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun ifInitialised (Lkotlin/reflect/KProperty0;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun isLazy (Lkotlin/reflect/KProperty0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun isLazyInitialised (Lkotlin/reflect/KProperty0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun orNull (Lkotlin/reflect/KProperty0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun orThrow (Lkotlin/reflect/KProperty0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/extensions/reflection/ExKProperty1Kt {
	public static final fun accessGet (Lkotlin/reflect/KProperty1;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun accessSet (Lkotlin/reflect/KProperty1;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun getOrDefault (Lkotlin/reflect/KProperty1;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun getOrElse (Lkotlin/reflect/KProperty1;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun ifInitialised (Lkotlin/reflect/KProperty1;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun isInitialised (Lkotlin/reflect/KProperty1;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun isLazy (Lkotlin/reflect/KProperty1;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun orNull (Lkotlin/reflect/KProperty1;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun orThrow (Lkotlin/reflect/KProperty1;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/flow/ConcurrencyKt {
	public static final fun concurrentMap (Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CoroutineScope;ILkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;
	public static final fun mapInOrder (Lkotlinx/coroutines/flow/Flow;ILkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;
}

public abstract interface class dev/racci/minix/api/integrations/Integration : dev/racci/minix/api/extensions/WithPlugin {
	public abstract fun getPluginName ()Ljava/lang/String;
	public abstract fun handleEnable (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleLoad (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleUnload (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/integrations/Integration$DefaultImpls {
	public static fun async (Ldev/racci/minix/api/integrations/Integration;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static fun completableAsync (Ldev/racci/minix/api/integrations/Integration;Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public static fun completableSync (Ldev/racci/minix/api/integrations/Integration;Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public static fun deferredAsync (Ldev/racci/minix/api/integrations/Integration;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public static fun deferredSync (Ldev/racci/minix/api/integrations/Integration;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public static fun deleteProperty (Ldev/racci/minix/api/integrations/Integration;Ljava/lang/String;)V
	public static fun getKoin (Ldev/racci/minix/api/integrations/Integration;)Lorg/koin/core/Koin;
	public static fun getLogger (Ldev/racci/minix/api/integrations/Integration;)Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public static fun getPluginName (Ldev/racci/minix/api/integrations/Integration;)Ljava/lang/String;
	public static fun getProperty (Ldev/racci/minix/api/integrations/Integration;Ljava/lang/String;)Ljava/lang/Object;
	public static fun getProperty (Ldev/racci/minix/api/integrations/Integration;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun handleEnable (Ldev/racci/minix/api/integrations/Integration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun handleLoad (Ldev/racci/minix/api/integrations/Integration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun handleUnload (Ldev/racci/minix/api/integrations/Integration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun launch (Ldev/racci/minix/api/integrations/Integration;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static fun registerEvents (Ldev/racci/minix/api/integrations/Integration;[Lorg/bukkit/event/Listener;)V
	public static fun setProperty (Ldev/racci/minix/api/integrations/Integration;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun sync (Ldev/racci/minix/api/integrations/Integration;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public class dev/racci/minix/api/integrations/IntegrationManager {
	public static final field Companion Ldev/racci/minix/api/integrations/IntegrationManager$Companion;
	public fun <init> ()V
	public final fun getFirstRegistered (Lkotlin/jvm/functions/Function1;)Ljava/util/Optional;
	public final fun getREGISTERED ()Ljava/util/Set;
	public final fun getUNREGISTERED ()Ljava/util/Set;
	public final fun onFirstRegistered (Lkotlin/jvm/functions/Function1;)V
	public final fun register (Ldev/racci/minix/api/integrations/Integration;)V
}

public final class dev/racci/minix/api/integrations/IntegrationManager$Companion : dev/racci/minix/api/integrations/IntegrationManager {
}

public abstract class dev/racci/minix/api/integrations/placeholders/PlaceholderIntegration : me/clip/placeholderapi/expansion/PlaceholderExpansion, dev/racci/minix/api/integrations/Integration {
	public fun <init> ()V
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public final fun getAuthor ()Ljava/lang/String;
	public final fun getIdentifier ()Ljava/lang/String;
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public fun getPluginName ()Ljava/lang/String;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun getVersion ()Ljava/lang/String;
	public fun handleEnable (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun handleLoad (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun handleUnload (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public final fun onPlaceholderRequest (Lorg/bukkit/entity/Player;Ljava/lang/String;)Ljava/lang/String;
	public final fun onRequest (Lorg/bukkit/OfflinePlayer;Ljava/lang/String;)Ljava/lang/String;
	public final fun persist ()Z
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public final fun registerOfflinePlaceholder (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lkotlin/Triple;
	public final fun registerOnlinePlaceholder (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lkotlin/Triple;
	public final fun registerPlaceholder (Ljava/lang/String;Lkotlin/jvm/functions/Function0;)Lkotlin/Triple;
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/integrations/placeholders/PlaceholderManager : dev/racci/minix/api/integrations/IntegrationManager {
	public static final field INSTANCE Ldev/racci/minix/api/integrations/placeholders/PlaceholderManager;
}

public abstract interface class dev/racci/minix/api/integrations/regions/Region {
	public abstract fun canAttack (Lorg/bukkit/entity/Player;Lorg/bukkit/entity/Entity;)Z
	public abstract fun canBreak (Lorg/bukkit/entity/Player;)Z
	public abstract fun canBuild (Lorg/bukkit/entity/Player;)Z
	public abstract fun canInteract (Lorg/bukkit/entity/Player;)Z
	public abstract fun getId ()I
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getOwner ()Ljava/util/UUID;
	public abstract fun getWorld ()Lorg/bukkit/World;
}

public abstract interface class dev/racci/minix/api/integrations/regions/RegionIntegration : dev/racci/minix/api/integrations/Integration {
	public abstract fun canAttack (Ldev/racci/minix/api/utils/minecraft/BlockPos;Lorg/bukkit/World;Lorg/bukkit/entity/Player;Lorg/bukkit/entity/Entity;)Z
	public abstract fun canBreak (Ldev/racci/minix/api/utils/minecraft/BlockPos;Lorg/bukkit/World;Lorg/bukkit/entity/Player;)Z
	public abstract fun canBuild (Ldev/racci/minix/api/utils/minecraft/BlockPos;Lorg/bukkit/World;Lorg/bukkit/entity/Player;)Z
	public abstract fun canInteract (Ldev/racci/minix/api/utils/minecraft/BlockPos;Lorg/bukkit/World;Lorg/bukkit/entity/Player;)Z
	public abstract fun getRegion (Ldev/racci/minix/api/utils/minecraft/BlockPos;Lorg/bukkit/World;)Ljava/util/Optional;
	public abstract fun ifTrustedInRegion (Ldev/racci/minix/api/utils/minecraft/BlockPos;Lorg/bukkit/entity/Player;Lkotlin/jvm/functions/Function0;)Z
	public abstract fun ifWilderness (Ldev/racci/minix/api/utils/minecraft/BlockPos;Lorg/bukkit/World;Lkotlin/jvm/functions/Function0;)Z
	public abstract fun ifWildernessOrTrusted (Ldev/racci/minix/api/utils/minecraft/BlockPos;Lorg/bukkit/entity/Player;Lkotlin/jvm/functions/Function0;)Z
	public abstract fun insideRegion (Ldev/racci/minix/api/utils/minecraft/BlockPos;Lorg/bukkit/World;)Z
}

public final class dev/racci/minix/api/integrations/regions/RegionIntegration$DefaultImpls {
	public static fun async (Ldev/racci/minix/api/integrations/regions/RegionIntegration;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static fun completableAsync (Ldev/racci/minix/api/integrations/regions/RegionIntegration;Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public static fun completableSync (Ldev/racci/minix/api/integrations/regions/RegionIntegration;Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public static fun deferredAsync (Ldev/racci/minix/api/integrations/regions/RegionIntegration;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public static fun deferredSync (Ldev/racci/minix/api/integrations/regions/RegionIntegration;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public static fun deleteProperty (Ldev/racci/minix/api/integrations/regions/RegionIntegration;Ljava/lang/String;)V
	public static fun getKoin (Ldev/racci/minix/api/integrations/regions/RegionIntegration;)Lorg/koin/core/Koin;
	public static fun getLogger (Ldev/racci/minix/api/integrations/regions/RegionIntegration;)Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public static fun getPluginName (Ldev/racci/minix/api/integrations/regions/RegionIntegration;)Ljava/lang/String;
	public static fun getProperty (Ldev/racci/minix/api/integrations/regions/RegionIntegration;Ljava/lang/String;)Ljava/lang/Object;
	public static fun getProperty (Ldev/racci/minix/api/integrations/regions/RegionIntegration;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun handleEnable (Ldev/racci/minix/api/integrations/regions/RegionIntegration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun handleLoad (Ldev/racci/minix/api/integrations/regions/RegionIntegration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun handleUnload (Ldev/racci/minix/api/integrations/regions/RegionIntegration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun launch (Ldev/racci/minix/api/integrations/regions/RegionIntegration;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static fun registerEvents (Ldev/racci/minix/api/integrations/regions/RegionIntegration;[Lorg/bukkit/event/Listener;)V
	public static fun setProperty (Ldev/racci/minix/api/integrations/regions/RegionIntegration;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun sync (Ldev/racci/minix/api/integrations/regions/RegionIntegration;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/integrations/regions/RegionManager : dev/racci/minix/api/integrations/IntegrationManager {
	public static final field INSTANCE Ldev/racci/minix/api/integrations/regions/RegionManager;
	public final fun canAttack (Ldev/racci/minix/api/utils/minecraft/BlockPos;Lorg/bukkit/World;Lorg/bukkit/entity/Player;Lorg/bukkit/entity/Entity;)Z
	public final fun canBreak (Ldev/racci/minix/api/utils/minecraft/BlockPos;Lorg/bukkit/World;Lorg/bukkit/entity/Player;)Z
	public final fun canBuild (Ldev/racci/minix/api/utils/minecraft/BlockPos;Lorg/bukkit/World;Lorg/bukkit/entity/Player;)Z
	public final fun canInteract (Ldev/racci/minix/api/utils/minecraft/BlockPos;Lorg/bukkit/World;Lorg/bukkit/entity/Player;)Z
	public final fun getRegion (Ldev/racci/minix/api/utils/minecraft/BlockPos;Lorg/bukkit/World;)Ljava/util/Optional;
	public final fun ifTrustedInRegion (Ldev/racci/minix/api/utils/minecraft/BlockPos;Lorg/bukkit/entity/Player;Lkotlin/jvm/functions/Function0;)Z
	public final fun ifWilderness (Ldev/racci/minix/api/utils/minecraft/BlockPos;Lorg/bukkit/World;Lkotlin/jvm/functions/Function0;)Z
	public final fun ifWildernessOrTrusted (Ldev/racci/minix/api/utils/minecraft/BlockPos;Lorg/bukkit/entity/Player;Lkotlin/jvm/functions/Function0;)Z
	public final fun insideRegion (Ldev/racci/minix/api/utils/minecraft/BlockPos;Lorg/bukkit/World;)Z
}

public abstract class dev/racci/minix/api/plugin/Minix : dev/racci/minix/api/plugin/MinixPlugin {
	public fun <init> ()V
}

public abstract class dev/racci/minix/api/plugin/MinixPlugin : org/bukkit/plugin/java/JavaPlugin, dev/racci/minix/api/plugin/SusPlugin, org/koin/core/qualifier/Qualifier {
	public fun <init> ()V
	public final fun getBStatsId ()Ljava/lang/Integer;
	public fun getKoin ()Lorg/koin/core/Koin;
	public synthetic fun getLog ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public final fun getLog ()Ldev/racci/minix/api/plugin/logger/PluginDependentMinixLogger;
	public final fun getMetrics ()Lorg/bstats/bukkit/Metrics;
	public fun getUpdater ()Ldev/racci/minix/api/data/PluginUpdater;
	public final fun getValue ()Ljava/lang/String;
	public final fun getVersion ()Ldev/racci/minix/api/updater/Version;
	public fun handleAfterEnable (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun handleAfterLoad (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun handleDisable (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun handleEnable (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun handleLoad (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun handleUnload (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onDisable ()V
	public fun onEnable ()V
	public fun onLoad ()V
}

public final class dev/racci/minix/api/plugin/PluginData {
	public field classLoader Lorg/bukkit/plugin/java/PluginClassLoader;
	public fun <init> (Ldev/racci/minix/api/plugin/MinixPlugin;)V
	public final fun getClassLoader ()Lorg/bukkit/plugin/java/PluginClassLoader;
	public final fun getClassLoader (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getConfigurations ()Ljava/util/List;
	public final fun getExtensionEvents ()Lkotlinx/coroutines/flow/MutableSharedFlow;
	public final fun getLog ()Ldev/racci/minix/api/plugin/logger/PluginDependentMinixLogger;
	public final fun getMetrics ()Lorg/bstats/bukkit/Metrics;
	public final fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public final fun getWantsFullUnload ()Z
	public final fun setClassLoader (Lorg/bukkit/plugin/java/PluginClassLoader;)V
	public final fun setMetrics (Lorg/bstats/bukkit/Metrics;)V
	public final fun setWantsFullUnload (Z)V
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/racci/minix/api/plugin/SusPlugin : org/bukkit/plugin/Plugin, org/koin/core/component/KoinComponent {
	public abstract fun getBStatsId ()Ljava/lang/Integer;
	public abstract fun getLog ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public abstract fun getMetrics ()Lorg/bstats/bukkit/Metrics;
	public abstract fun getUpdater ()Ldev/racci/minix/api/data/PluginUpdater;
	public abstract fun getVersion ()Ldev/racci/minix/api/updater/Version;
	public abstract fun handleAfterEnable (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleAfterLoad (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleDisable (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleEnable (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleLoad (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun handleUnload (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/plugin/SusPlugin$DefaultImpls {
	public static fun getKoin (Ldev/racci/minix/api/plugin/SusPlugin;)Lorg/koin/core/Koin;
	public static fun handleAfterEnable (Ldev/racci/minix/api/plugin/SusPlugin;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun handleAfterLoad (Ldev/racci/minix/api/plugin/SusPlugin;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun handleDisable (Ldev/racci/minix/api/plugin/SusPlugin;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun handleEnable (Ldev/racci/minix/api/plugin/SusPlugin;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun handleLoad (Ldev/racci/minix/api/plugin/SusPlugin;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun handleUnload (Ldev/racci/minix/api/plugin/SusPlugin;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class dev/racci/minix/api/plugin/logger/MinixLogger {
	protected static final field Companion Ldev/racci/minix/api/plugin/logger/MinixLogger$Companion;
	public fun <init> (Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;)V
	public fun <init> (Ljava/util/logging/Level;)V
	public fun <init> (Lorg/apache/logging/log4j/Level;)V
	public fun <init> (Lorg/slf4j/event/Level;)V
	public fun debug (Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;)V
	public fun debug (Ljava/lang/Throwable;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
	public static synthetic fun debug$default (Ldev/racci/minix/api/plugin/logger/MinixLogger;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
	public static synthetic fun debug$default (Ldev/racci/minix/api/plugin/logger/MinixLogger;Ljava/lang/Throwable;Ljava/lang/String;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)V
	public fun error (Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;)V
	public fun error (Ljava/lang/Throwable;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
	public static synthetic fun error$default (Ldev/racci/minix/api/plugin/logger/MinixLogger;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
	public static synthetic fun error$default (Ldev/racci/minix/api/plugin/logger/MinixLogger;Ljava/lang/Throwable;Ljava/lang/String;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)V
	public fun fatal (Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/RuntimeException;
	public fun fatal (Ljava/lang/Throwable;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)Ljava/lang/RuntimeException;
	public static synthetic fun fatal$default (Ldev/racci/minix/api/plugin/logger/MinixLogger;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/RuntimeException;
	public static synthetic fun fatal$default (Ldev/racci/minix/api/plugin/logger/MinixLogger;Ljava/lang/Throwable;Ljava/lang/String;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)Ljava/lang/RuntimeException;
	protected fun format (Ljava/lang/String;Ljava/lang/String;Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;Ljava/lang/Throwable;Lcom/github/ajalt/mordant/rendering/TextColors;)Ljava/lang/String;
	protected final fun getCallerScope ()Ljava/lang/String;
	public final fun getLevel ()Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;
	public fun info (Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;)V
	public fun info (Ljava/lang/Throwable;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
	public static synthetic fun info$default (Ldev/racci/minix/api/plugin/logger/MinixLogger;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
	public static synthetic fun info$default (Ldev/racci/minix/api/plugin/logger/MinixLogger;Ljava/lang/Throwable;Ljava/lang/String;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)V
	public final fun isEnabled (Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;)Z
	public final fun lockLevel ()V
	public fun log (Lkotlin/jvm/functions/Function0;)V
	public final fun setLevel (Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;)Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;
	public fun trace (Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;)V
	public fun trace (Ljava/lang/Throwable;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
	public static synthetic fun trace$default (Ldev/racci/minix/api/plugin/logger/MinixLogger;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
	public static synthetic fun trace$default (Ldev/racci/minix/api/plugin/logger/MinixLogger;Ljava/lang/Throwable;Ljava/lang/String;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)V
	public final fun unlockLevel ()V
	public fun warn (Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;)V
	public fun warn (Ljava/lang/Throwable;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
	public static synthetic fun warn$default (Ldev/racci/minix/api/plugin/logger/MinixLogger;Ljava/lang/Throwable;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
	public static synthetic fun warn$default (Ldev/racci/minix/api/plugin/logger/MinixLogger;Ljava/lang/Throwable;Ljava/lang/String;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)V
}

protected final class dev/racci/minix/api/plugin/logger/MinixLogger$Companion {
	public final fun getDispatcher ()Ldev/racci/minix/api/utils/Loadable;
	public final fun getRawPrintln ()Lkotlin/reflect/KFunction;
	public final fun getTerminal ()Lcom/github/ajalt/mordant/terminal/Terminal;
}

public final class dev/racci/minix/api/plugin/logger/MinixLogger$FormattedMessage {
	public fun <init> (Ldev/racci/minix/api/plugin/logger/MinixLogger;Ljava/lang/String;Ljava/lang/String;Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;Ljava/lang/Throwable;Lcom/github/ajalt/mordant/rendering/TextColors;Lcom/github/ajalt/mordant/rendering/Whitespace;Lcom/github/ajalt/mordant/rendering/TextAlign;Lcom/github/ajalt/mordant/rendering/OverflowWrap;I)V
	public synthetic fun <init> (Ldev/racci/minix/api/plugin/logger/MinixLogger;Ljava/lang/String;Ljava/lang/String;Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;Ljava/lang/Throwable;Lcom/github/ajalt/mordant/rendering/TextColors;Lcom/github/ajalt/mordant/rendering/Whitespace;Lcom/github/ajalt/mordant/rendering/TextAlign;Lcom/github/ajalt/mordant/rendering/OverflowWrap;IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Ldev/racci/minix/api/plugin/logger/MinixLogger;Lkotlin/jvm/functions/Function0;Ljava/lang/String;Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;Ljava/lang/Throwable;Lcom/github/ajalt/mordant/rendering/TextColors;Lcom/github/ajalt/mordant/rendering/Whitespace;Lcom/github/ajalt/mordant/rendering/TextAlign;Lcom/github/ajalt/mordant/rendering/OverflowWrap;I)V
	public synthetic fun <init> (Ldev/racci/minix/api/plugin/logger/MinixLogger;Lkotlin/jvm/functions/Function0;Ljava/lang/String;Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;Ljava/lang/Throwable;Lcom/github/ajalt/mordant/rendering/TextColors;Lcom/github/ajalt/mordant/rendering/Whitespace;Lcom/github/ajalt/mordant/rendering/TextAlign;Lcom/github/ajalt/mordant/rendering/OverflowWrap;IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getFormatted ()Ljava/lang/String;
	public final fun getLevel ()Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;
	public final fun getRaw ()Ljava/lang/String;
	public final fun getRendered ()Ljava/lang/String;
	public final fun getScope ()Ljava/lang/String;
	public final fun getThrowable ()Ljava/lang/Throwable;
}

public final class dev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel : java/lang/Enum {
	public static final field Companion Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel$Companion;
	public static final field DEBUG Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;
	public static final field ERROR Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;
	public static final field FATAL Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;
	public static final field INFO Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;
	public static final field TRACE Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;
	public static final field WARN Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;
	public final fun getLevel ()I
	public final fun toJava ()Ljava/util/logging/Level;
	public final fun toKoin ()Lorg/koin/core/logger/Level;
	public final fun toLog4J ()Lorg/apache/logging/log4j/Level;
	public final fun toSlF4 ()Lorg/slf4j/event/Level;
	public static fun valueOf (Ljava/lang/String;)Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;
	public static fun values ()[Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;
}

public final class dev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel$Companion {
	public final fun fromJava (Ljava/util/logging/Level;)Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;
	public final fun fromLog4J (Lorg/apache/logging/log4j/Level;)Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;
	public final fun fromSlF4 (Lorg/slf4j/event/Level;)Ldev/racci/minix/api/plugin/logger/MinixLogger$LoggingLevel;
}

public final class dev/racci/minix/api/plugin/logger/PluginDependentMinixLogger : dev/racci/minix/api/plugin/logger/MinixLogger, dev/racci/minix/api/extensions/WithPlugin {
	public static final field Companion Ldev/racci/minix/api/plugin/logger/PluginDependentMinixLogger$Companion;
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun log (Lkotlin/jvm/functions/Function0;)V
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/plugin/logger/PluginDependentMinixLogger$Companion {
	public final fun getEXISTING ()Ljava/util/Map;
	public final fun getLogger (Ldev/racci/minix/api/plugin/MinixPlugin;)Ldev/racci/minix/api/plugin/logger/PluginDependentMinixLogger;
}

public abstract class dev/racci/minix/api/scheduler/CoroutineRunnable {
	public fun <init> ()V
	public final fun cancel ()V
	public final fun getCancelled ()Z
	public final fun getName ()Ljava/lang/String;
	public final fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public final fun getTaskID ()I
	public final fun named (Ljava/lang/String;)Ldev/racci/minix/api/scheduler/CoroutineRunnable;
	public abstract fun run (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun runAsyncTask (Ldev/racci/minix/api/plugin/MinixPlugin;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public final fun runAsyncTaskLater-HG0u8IE (Ldev/racci/minix/api/plugin/MinixPlugin;J)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public final fun runAsyncTaskTimer-5qebJ5I (Ldev/racci/minix/api/plugin/MinixPlugin;JJ)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public final fun runTask (Ldev/racci/minix/api/plugin/MinixPlugin;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public final fun runTaskLater-HG0u8IE (Ldev/racci/minix/api/plugin/MinixPlugin;J)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public final fun runTaskTimer-5qebJ5I (Ldev/racci/minix/api/plugin/MinixPlugin;JJ)Ldev/racci/minix/api/scheduler/CoroutineTask;
}

public abstract interface class dev/racci/minix/api/scheduler/CoroutineScheduler {
	public static final field Companion Ldev/racci/minix/api/scheduler/CoroutineScheduler$Companion;
	public abstract fun activateTasks (Ldev/racci/minix/api/plugin/MinixPlugin;)[I
	public abstract fun cancelTask (I)Z
	public abstract fun getParentJob ()Lkotlinx/coroutines/CompletableJob;
	public abstract fun isCurrentlyRunning (I)Z
	public abstract fun runAsyncTask (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineTask;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public abstract fun runAsyncTask (Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Ldev/racci/minix/api/scheduler/CoroutineRunnable;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public abstract fun runAsyncTask (Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Lkotlin/jvm/functions/Function3;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public abstract fun runAsyncTaskLater-SxA4cEA (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineRunnable;J)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public abstract fun runAsyncTaskLater-SxA4cEA (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineTask;J)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public abstract fun runAsyncTaskLater-Wn2Vu4Y (Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Lkotlin/jvm/functions/Function3;J)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public abstract fun runAsyncTaskTimer-J7AnP2E (Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Lkotlin/jvm/functions/Function3;JJ)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public abstract fun runAsyncTaskTimer-VTINZ0E (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineRunnable;JJ)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public abstract fun runAsyncTaskTimer-VTINZ0E (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineTask;JJ)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public abstract fun runTask (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineRunnable;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public abstract fun runTask (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineTask;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public abstract fun runTask (Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Lkotlin/jvm/functions/Function3;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public abstract fun runTaskLater-SxA4cEA (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineRunnable;J)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public abstract fun runTaskLater-SxA4cEA (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineTask;J)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public abstract fun runTaskLater-Wn2Vu4Y (Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Lkotlin/jvm/functions/Function3;J)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public abstract fun runTaskTimer-J7AnP2E (Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Lkotlin/jvm/functions/Function3;JJ)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public abstract fun runTaskTimer-VTINZ0E (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineRunnable;JJ)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public abstract fun runTaskTimer-VTINZ0E (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineTask;JJ)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public abstract fun shutdownTask (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/scheduler/CoroutineScheduler$Companion : dev/racci/minix/api/scheduler/CoroutineScheduler {
	public fun activateTasks (Ldev/racci/minix/api/plugin/MinixPlugin;)[I
	public fun cancelTask (I)Z
	public fun getParentJob ()Lkotlinx/coroutines/CompletableJob;
	public fun isCurrentlyRunning (I)Z
	public fun runAsyncTask (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineTask;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public fun runAsyncTask (Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Ldev/racci/minix/api/scheduler/CoroutineRunnable;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public fun runAsyncTask (Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Lkotlin/jvm/functions/Function3;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public fun runAsyncTaskLater-SxA4cEA (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineRunnable;J)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public fun runAsyncTaskLater-SxA4cEA (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineTask;J)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public fun runAsyncTaskLater-Wn2Vu4Y (Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Lkotlin/jvm/functions/Function3;J)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public fun runAsyncTaskTimer-J7AnP2E (Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Lkotlin/jvm/functions/Function3;JJ)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public fun runAsyncTaskTimer-VTINZ0E (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineRunnable;JJ)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public fun runAsyncTaskTimer-VTINZ0E (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineTask;JJ)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public fun runTask (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineRunnable;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public fun runTask (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineTask;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public fun runTask (Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Lkotlin/jvm/functions/Function3;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public fun runTaskLater-SxA4cEA (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineRunnable;J)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public fun runTaskLater-SxA4cEA (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineTask;J)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public fun runTaskLater-Wn2Vu4Y (Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Lkotlin/jvm/functions/Function3;J)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public fun runTaskTimer-J7AnP2E (Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Lkotlin/jvm/functions/Function3;JJ)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public fun runTaskTimer-VTINZ0E (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineRunnable;JJ)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public fun runTaskTimer-VTINZ0E (Ldev/racci/minix/api/plugin/MinixPlugin;Ldev/racci/minix/api/scheduler/CoroutineTask;JJ)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public fun shutdownTask (ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/scheduler/CoroutineScheduler$DefaultImpls {
	public static synthetic fun runAsyncTask$default (Ldev/racci/minix/api/scheduler/CoroutineScheduler;Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Ldev/racci/minix/api/scheduler/CoroutineRunnable;ILjava/lang/Object;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public static synthetic fun runAsyncTask$default (Ldev/racci/minix/api/scheduler/CoroutineScheduler;Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Lkotlin/jvm/functions/Function3;ILjava/lang/Object;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public static synthetic fun runAsyncTaskLater-Wn2Vu4Y$default (Ldev/racci/minix/api/scheduler/CoroutineScheduler;Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Lkotlin/jvm/functions/Function3;JILjava/lang/Object;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public static synthetic fun runAsyncTaskTimer-J7AnP2E$default (Ldev/racci/minix/api/scheduler/CoroutineScheduler;Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Lkotlin/jvm/functions/Function3;JJILjava/lang/Object;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public static synthetic fun runTask$default (Ldev/racci/minix/api/scheduler/CoroutineScheduler;Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Lkotlin/jvm/functions/Function3;ILjava/lang/Object;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public static synthetic fun runTaskLater-Wn2Vu4Y$default (Ldev/racci/minix/api/scheduler/CoroutineScheduler;Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Lkotlin/jvm/functions/Function3;JILjava/lang/Object;)Ldev/racci/minix/api/scheduler/CoroutineTask;
	public static synthetic fun runTaskTimer-J7AnP2E$default (Ldev/racci/minix/api/scheduler/CoroutineScheduler;Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/lang/String;Lkotlin/jvm/functions/Function3;JJILjava/lang/Object;)Ldev/racci/minix/api/scheduler/CoroutineTask;
}

public abstract interface class dev/racci/minix/api/scheduler/CoroutineTask {
	public abstract fun async ()Ldev/racci/minix/api/scheduler/CoroutineTask;
	public abstract fun cancel ()Z
	public abstract fun getAsync ()Z
	public abstract fun getJob ()Lkotlinx/coroutines/Job;
	public abstract fun getKeepRunning ()Lkotlinx/atomicfu/AtomicBoolean;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getOwner ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public abstract fun getPeriod-FghU774 ()Lkotlin/time/Duration;
	public abstract fun getRunnable ()Ldev/racci/minix/api/scheduler/CoroutineRunnable;
	public abstract fun getTask ()Lkotlin/jvm/functions/Function3;
	public abstract fun getTaskID ()I
	public abstract fun setName (Ljava/lang/String;)V
	public abstract fun shutdown ()Z
	public abstract fun sync ()Ldev/racci/minix/api/scheduler/CoroutineTask;
}

public final class dev/racci/minix/api/serializables/AttributeModifierSerializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/AttributeModifierSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/bukkit/attribute/AttributeModifier;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/bukkit/attribute/AttributeModifier;)V
}

public final class dev/racci/minix/api/serializables/AttributeModifierSerializer$Configurate : org/spongepowered/configurate/serialize/TypeSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/AttributeModifierSerializer$Configurate;
	public synthetic fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/lang/Object;
	public fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Lorg/bukkit/attribute/AttributeModifier;
	public synthetic fun serialize (Ljava/lang/reflect/Type;Ljava/lang/Object;Lorg/spongepowered/configurate/ConfigurationNode;)V
	public fun serialize (Ljava/lang/reflect/Type;Lorg/bukkit/attribute/AttributeModifier;Lorg/spongepowered/configurate/ConfigurationNode;)V
}

public final class dev/racci/minix/api/serializables/BlockPosSerializer : org/spongepowered/configurate/serialize/TypeSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/BlockPosSerializer;
	public fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ldev/racci/minix/api/utils/minecraft/BlockPos;
	public synthetic fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/lang/Object;
	public fun serialize (Ljava/lang/reflect/Type;Ldev/racci/minix/api/utils/minecraft/BlockPos;Lorg/spongepowered/configurate/ConfigurationNode;)V
	public synthetic fun serialize (Ljava/lang/reflect/Type;Ljava/lang/Object;Lorg/spongepowered/configurate/ConfigurationNode;)V
}

public final class dev/racci/minix/api/serializables/CharRangeSerializer : dev/racci/minix/api/serializables/RangeSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/CharRangeSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lkotlin/ranges/CharRange;
}

public final class dev/racci/minix/api/serializables/CharRangeSerializer$Configurate : dev/racci/minix/api/serializables/RangeSerializer$Configurate {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/CharRangeSerializer$Configurate;
	public synthetic fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/lang/Object;
	public fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Lkotlin/ranges/CharRange;
}

public final class dev/racci/minix/api/serializables/DoubleRangeSerializer : dev/racci/minix/api/serializables/RangeSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/DoubleRangeSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lkotlin/ranges/ClosedFloatingPointRange;
}

public final class dev/racci/minix/api/serializables/DoubleRangeSerializer$Configurate : dev/racci/minix/api/serializables/RangeSerializer$Configurate {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/DoubleRangeSerializer$Configurate;
	public synthetic fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/lang/Object;
	public fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Lkotlin/ranges/ClosedFloatingPointRange;
}

public final class dev/racci/minix/api/serializables/DurationSerializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/DurationSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize-5sfh64U (Lkotlinx/serialization/encoding/Decoder;)J
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize-HG0u8IE (Lkotlinx/serialization/encoding/Encoder;J)V
}

public final class dev/racci/minix/api/serializables/DurationSerializer$Configurate : org/spongepowered/configurate/serialize/TypeSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/DurationSerializer$Configurate;
	public synthetic fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/lang/Object;
	public fun deserialize-3nIYWDw (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)J
	public synthetic fun serialize (Ljava/lang/reflect/Type;Ljava/lang/Object;Lorg/spongepowered/configurate/ConfigurationNode;)V
	public fun serialize-Kx4hsE0 (Ljava/lang/reflect/Type;Lkotlin/time/Duration;Lorg/spongepowered/configurate/ConfigurationNode;)V
}

public final class dev/racci/minix/api/serializables/EnchantSerializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/EnchantSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/bukkit/enchantments/Enchantment;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/bukkit/enchantments/Enchantment;)V
}

public final class dev/racci/minix/api/serializables/EnchantSerializer$Configurate : org/spongepowered/configurate/serialize/TypeSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/EnchantSerializer$Configurate;
	public synthetic fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/lang/Object;
	public fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Lorg/bukkit/enchantments/Enchantment;
	public synthetic fun serialize (Ljava/lang/reflect/Type;Ljava/lang/Object;Lorg/spongepowered/configurate/ConfigurationNode;)V
	public fun serialize (Ljava/lang/reflect/Type;Lorg/bukkit/enchantments/Enchantment;Lorg/spongepowered/configurate/ConfigurationNode;)V
}

public final class dev/racci/minix/api/serializables/FloatRangeSerializer : dev/racci/minix/api/serializables/RangeSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/FloatRangeSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lkotlin/ranges/ClosedFloatingPointRange;
}

public final class dev/racci/minix/api/serializables/FloatRangeSerializer$Configurate : dev/racci/minix/api/serializables/RangeSerializer$Configurate {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/FloatRangeSerializer$Configurate;
	public synthetic fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/lang/Object;
	public fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Lkotlin/ranges/ClosedFloatingPointRange;
}

public final class dev/racci/minix/api/serializables/IntRangeSerializer : dev/racci/minix/api/serializables/RangeSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/IntRangeSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lkotlin/ranges/IntRange;
}

public final class dev/racci/minix/api/serializables/IntRangeSerializer$Configurate : dev/racci/minix/api/serializables/RangeSerializer$Configurate {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/IntRangeSerializer$Configurate;
	public synthetic fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/lang/Object;
	public fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Lkotlin/ranges/IntRange;
}

public final class dev/racci/minix/api/serializables/LocationSerializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/LocationSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/bukkit/Location;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/bukkit/Location;)V
}

public final class dev/racci/minix/api/serializables/LocationSerializer$Configurate : org/spongepowered/configurate/serialize/TypeSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/LocationSerializer$Configurate;
	public synthetic fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/lang/Object;
	public fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Lorg/bukkit/Location;
	public synthetic fun serialize (Ljava/lang/reflect/Type;Ljava/lang/Object;Lorg/spongepowered/configurate/ConfigurationNode;)V
	public fun serialize (Ljava/lang/reflect/Type;Lorg/bukkit/Location;Lorg/spongepowered/configurate/ConfigurationNode;)V
}

public final class dev/racci/minix/api/serializables/LoggingLevelSerializer : org/spongepowered/configurate/serialize/TypeSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/LoggingLevelSerializer;
	public synthetic fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/lang/Object;
	public fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/util/logging/Level;
	public synthetic fun serialize (Ljava/lang/reflect/Type;Ljava/lang/Object;Lorg/spongepowered/configurate/ConfigurationNode;)V
	public fun serialize (Ljava/lang/reflect/Type;Ljava/util/logging/Level;Lorg/spongepowered/configurate/ConfigurationNode;)V
}

public final class dev/racci/minix/api/serializables/LongRangeSerializer : dev/racci/minix/api/serializables/RangeSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/LongRangeSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lkotlin/ranges/LongRange;
}

public final class dev/racci/minix/api/serializables/LongRangeSerializer$Configurate : dev/racci/minix/api/serializables/RangeSerializer$Configurate {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/LongRangeSerializer$Configurate;
	public synthetic fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/lang/Object;
	public fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Lkotlin/ranges/LongRange;
}

public final class dev/racci/minix/api/serializables/MiniMessageSerializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/MiniMessageSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lnet/kyori/adventure/text/Component;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lnet/kyori/adventure/text/Component;)V
}

public final class dev/racci/minix/api/serializables/NamespacedKeySerializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/NamespacedKeySerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/bukkit/NamespacedKey;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/bukkit/NamespacedKey;)V
}

public final class dev/racci/minix/api/serializables/NamespacedKeySerializer$Configurate : org/spongepowered/configurate/serialize/TypeSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/NamespacedKeySerializer$Configurate;
	public synthetic fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/lang/Object;
	public fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Lorg/bukkit/NamespacedKey;
	public synthetic fun serialize (Ljava/lang/reflect/Type;Ljava/lang/Object;Lorg/spongepowered/configurate/ConfigurationNode;)V
	public fun serialize (Ljava/lang/reflect/Type;Lorg/bukkit/NamespacedKey;Lorg/spongepowered/configurate/ConfigurationNode;)V
}

public final class dev/racci/minix/api/serializables/PairSerializer : org/spongepowered/configurate/serialize/TypeSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/PairSerializer;
	public synthetic fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/lang/Object;
	public fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Lkotlin/Pair;
	public synthetic fun serialize (Ljava/lang/reflect/Type;Ljava/lang/Object;Lorg/spongepowered/configurate/ConfigurationNode;)V
	public fun serialize (Ljava/lang/reflect/Type;Lkotlin/Pair;Lorg/spongepowered/configurate/ConfigurationNode;)V
}

public final class dev/racci/minix/api/serializables/PatternSerializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/PatternSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/bukkit/block/banner/Pattern;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/bukkit/block/banner/Pattern;)V
}

public final class dev/racci/minix/api/serializables/PatternSerializer$Configurate : org/spongepowered/configurate/serialize/TypeSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/PatternSerializer$Configurate;
	public synthetic fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/lang/Object;
	public fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Lorg/bukkit/block/banner/Pattern;
	public synthetic fun serialize (Ljava/lang/reflect/Type;Ljava/lang/Object;Lorg/spongepowered/configurate/ConfigurationNode;)V
	public fun serialize (Ljava/lang/reflect/Type;Lorg/bukkit/block/banner/Pattern;Lorg/spongepowered/configurate/ConfigurationNode;)V
}

public final class dev/racci/minix/api/serializables/PotionEffectSerializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/PotionEffectSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/bukkit/potion/PotionEffect;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/bukkit/potion/PotionEffect;)V
}

public final class dev/racci/minix/api/serializables/PotionEffectSerializer$Configurate : org/spongepowered/configurate/serialize/TypeSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/PotionEffectSerializer$Configurate;
	public synthetic fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/lang/Object;
	public fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Lorg/bukkit/potion/PotionEffect;
	public synthetic fun serialize (Ljava/lang/reflect/Type;Ljava/lang/Object;Lorg/spongepowered/configurate/ConfigurationNode;)V
	public fun serialize (Ljava/lang/reflect/Type;Lorg/bukkit/potion/PotionEffect;Lorg/spongepowered/configurate/ConfigurationNode;)V
}

public abstract class dev/racci/minix/api/serializables/RangeSerializer : kotlinx/serialization/KSerializer {
	public fun <init> ()V
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lkotlin/ranges/ClosedRange;)V
}

public abstract class dev/racci/minix/api/serializables/RangeSerializer$Configurate : org/spongepowered/configurate/serialize/TypeSerializer {
	public fun <init> ()V
	public synthetic fun serialize (Ljava/lang/reflect/Type;Ljava/lang/Object;Lorg/spongepowered/configurate/ConfigurationNode;)V
	public fun serialize (Ljava/lang/reflect/Type;Lkotlin/ranges/ClosedRange;Lorg/spongepowered/configurate/ConfigurationNode;)V
}

public final class dev/racci/minix/api/serializables/SerializableAttributeModifier {
	public static final field Companion Ldev/racci/minix/api/serializables/SerializableAttributeModifier$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILjava/util/UUID;Ljava/lang/String;DLorg/bukkit/attribute/AttributeModifier$Operation;Lorg/bukkit/inventory/EquipmentSlot;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public final fun getAmount ()D
	public final fun getName ()Ljava/lang/String;
	public final fun getOperation ()Lorg/bukkit/attribute/AttributeModifier$Operation;
	public final fun getSlot ()Lorg/bukkit/inventory/EquipmentSlot;
	public final fun getUuid ()Ljava/util/UUID;
	public final fun setAmount (D)V
	public final fun setName (Ljava/lang/String;)V
	public final fun setOperation (Lorg/bukkit/attribute/AttributeModifier$Operation;)V
	public final fun setSlot (Lorg/bukkit/inventory/EquipmentSlot;)V
	public final fun setUuid (Ljava/util/UUID;)V
	public final fun toAttributeModifier ()Lorg/bukkit/attribute/AttributeModifier;
	public static final fun write$Self (Ldev/racci/minix/api/serializables/SerializableAttributeModifier;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/racci/minix/api/serializables/SerializableAttributeModifier$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/SerializableAttributeModifier$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/racci/minix/api/serializables/SerializableAttributeModifier;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/racci/minix/api/serializables/SerializableAttributeModifier;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/SerializableAttributeModifier$Companion {
	public final fun fromAttributeModifier (Lorg/bukkit/attribute/AttributeModifier;)Ldev/racci/minix/api/serializables/SerializableAttributeModifier;
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/SerializableItemMeta {
	public static final field Companion Ldev/racci/minix/api/serializables/SerializableItemMeta$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILnet/kyori/adventure/text/Component;Ljava/lang/String;Lkotlinx/collections/immutable/ImmutableList;Ljava/lang/Integer;Lkotlinx/collections/immutable/ImmutableMap;Lkotlinx/collections/immutable/ImmutableSet;ZLdev/racci/minix/api/utils/collections/muiltimap/MutableMultiMap;Ljava/lang/Integer;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Lnet/kyori/adventure/text/Component;Ljava/lang/String;Lkotlinx/collections/immutable/ImmutableList;Ljava/lang/Integer;Lkotlinx/collections/immutable/ImmutableMap;Lkotlinx/collections/immutable/ImmutableSet;ZLdev/racci/minix/api/utils/collections/muiltimap/MutableMultiMap;Ljava/lang/Integer;)V
	public synthetic fun <init> (Lnet/kyori/adventure/text/Component;Ljava/lang/String;Lkotlinx/collections/immutable/ImmutableList;Ljava/lang/Integer;Lkotlinx/collections/immutable/ImmutableMap;Lkotlinx/collections/immutable/ImmutableSet;ZLdev/racci/minix/api/utils/collections/muiltimap/MutableMultiMap;Ljava/lang/Integer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAttributeModifiers ()Ldev/racci/minix/api/utils/collections/muiltimap/MutableMultiMap;
	public final fun getCustomModelData ()Ljava/lang/Integer;
	public final fun getDamage ()Ljava/lang/Integer;
	public final fun getDisplayName ()Lnet/kyori/adventure/text/Component;
	public final fun getEnchants ()Lkotlinx/collections/immutable/ImmutableMap;
	public final fun getItemFlags ()Lkotlinx/collections/immutable/ImmutableSet;
	public final fun getLocalizedName ()Ljava/lang/String;
	public final fun getLore ()Lkotlinx/collections/immutable/ImmutableList;
	public final fun getUnbreakable ()Z
	public final fun setAttributeModifiers (Ldev/racci/minix/api/utils/collections/muiltimap/MutableMultiMap;)V
	public final fun setCustomModelData (Ljava/lang/Integer;)V
	public final fun setDamage (Ljava/lang/Integer;)V
	public final fun setDisplayName (Lnet/kyori/adventure/text/Component;)V
	public final fun setEnchants (Lkotlinx/collections/immutable/ImmutableMap;)V
	public final fun setItemFlags (Lkotlinx/collections/immutable/ImmutableSet;)V
	public final fun setLocalizedName (Ljava/lang/String;)V
	public final fun setLore (Lkotlinx/collections/immutable/ImmutableList;)V
	public final fun setUnbreakable (Z)V
	public static final fun write$Self (Ldev/racci/minix/api/serializables/SerializableItemMeta;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/racci/minix/api/serializables/SerializableItemMeta$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/SerializableItemMeta$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/racci/minix/api/serializables/SerializableItemMeta;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/racci/minix/api/serializables/SerializableItemMeta;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/SerializableItemMeta$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/SerializableItemStack {
	public static final field Companion Ldev/racci/minix/api/serializables/SerializableItemStack$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILorg/bukkit/Material;ILdev/racci/minix/api/serializables/SerializableItemMeta;Ldev/racci/minix/api/serializables/SerializableSkullMeta;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Lorg/bukkit/Material;ILdev/racci/minix/api/serializables/SerializableItemMeta;Ldev/racci/minix/api/serializables/SerializableSkullMeta;Ljava/lang/String;)V
	public synthetic fun <init> (Lorg/bukkit/Material;ILdev/racci/minix/api/serializables/SerializableItemMeta;Ldev/racci/minix/api/serializables/SerializableSkullMeta;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAmount ()I
	public final fun getMeta ()Ldev/racci/minix/api/serializables/SerializableItemMeta;
	public final fun getSkullMeta ()Ldev/racci/minix/api/serializables/SerializableSkullMeta;
	public final fun getTag ()Ljava/lang/String;
	public final fun getType ()Lorg/bukkit/Material;
	public final fun setAmount (I)V
	public final fun setMeta (Ldev/racci/minix/api/serializables/SerializableItemMeta;)V
	public final fun setSkullMeta (Ldev/racci/minix/api/serializables/SerializableSkullMeta;)V
	public final fun setTag (Ljava/lang/String;)V
	public final fun setType (Lorg/bukkit/Material;)V
	public final fun toItemStack (Lorg/bukkit/inventory/ItemStack;)Lorg/bukkit/inventory/ItemStack;
	public static synthetic fun toItemStack$default (Ldev/racci/minix/api/serializables/SerializableItemStack;Lorg/bukkit/inventory/ItemStack;ILjava/lang/Object;)Lorg/bukkit/inventory/ItemStack;
	public static final fun write$Self (Ldev/racci/minix/api/serializables/SerializableItemStack;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/racci/minix/api/serializables/SerializableItemStack$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/SerializableItemStack$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/racci/minix/api/serializables/SerializableItemStack;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/racci/minix/api/serializables/SerializableItemStack;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/SerializableItemStack$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/SerializableItemStackKt {
	public static final fun dsl (Ldev/racci/minix/api/serializables/SerializableItemMeta$Companion;Lkotlin/jvm/functions/Function1;)Ldev/racci/minix/api/serializables/SerializableItemMeta;
	public static final fun dsl (Ldev/racci/minix/api/serializables/SerializableItemStack$Companion;Lkotlin/jvm/functions/Function1;)Ldev/racci/minix/api/serializables/SerializableItemStack;
	public static final fun dsl (Ldev/racci/minix/api/serializables/SerializableSkullMeta$Companion;Lkotlin/jvm/functions/Function1;)Ldev/racci/minix/api/serializables/SerializableSkullMeta;
	public static final fun toSerializable (Lorg/bukkit/inventory/ItemStack;)Ldev/racci/minix/api/serializables/SerializableItemStack;
}

public final class dev/racci/minix/api/serializables/SerializableSkullMeta {
	public static final field Companion Ldev/racci/minix/api/serializables/SerializableSkullMeta$Companion;
	public fun <init> ()V
	public synthetic fun <init> (ILjava/util/UUID;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public final fun applyTo (Lorg/bukkit/inventory/meta/ItemMeta;)V
	public final fun getOwner ()Ljava/util/UUID;
	public final fun getTexture ()Ljava/lang/String;
	public final fun setOwner (Ljava/util/UUID;)V
	public final fun setTexture (Ljava/lang/String;)V
	public static final fun write$Self (Ldev/racci/minix/api/serializables/SerializableSkullMeta;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/racci/minix/api/serializables/SerializableSkullMeta$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/SerializableSkullMeta$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/racci/minix/api/serializables/SerializableSkullMeta;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/racci/minix/api/serializables/SerializableSkullMeta;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/SerializableSkullMeta$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/Serializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/Serializer;
	public final fun getSerializers ()Lorg/spongepowered/configurate/serialize/TypeSerializerCollection;
}

public final class dev/racci/minix/api/serializables/UUIDSerializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/UUIDSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/util/UUID;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/util/UUID;)V
}

public final class dev/racci/minix/api/serializables/VectorSerializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/VectorSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/bukkit/util/Vector;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/bukkit/util/Vector;)V
}

public final class dev/racci/minix/api/serializables/VectorSerializer$Configurate : org/spongepowered/configurate/serialize/TypeSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/VectorSerializer$Configurate;
	public synthetic fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/lang/Object;
	public fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Lorg/bukkit/util/Vector;
	public synthetic fun serialize (Ljava/lang/reflect/Type;Ljava/lang/Object;Lorg/spongepowered/configurate/ConfigurationNode;)V
	public fun serialize (Ljava/lang/reflect/Type;Lorg/bukkit/util/Vector;Lorg/spongepowered/configurate/ConfigurationNode;)V
}

public final class dev/racci/minix/api/serializables/WorldSerializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/WorldSerializer;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lorg/bukkit/World;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lorg/bukkit/World;)V
}

public final class dev/racci/minix/api/serializables/WorldSerializer$Configurate : org/spongepowered/configurate/serialize/TypeSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/WorldSerializer$Configurate;
	public synthetic fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/lang/Object;
	public fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Lorg/bukkit/World;
	public synthetic fun serialize (Ljava/lang/reflect/Type;Ljava/lang/Object;Lorg/spongepowered/configurate/ConfigurationNode;)V
	public fun serialize (Ljava/lang/reflect/Type;Lorg/bukkit/World;Lorg/spongepowered/configurate/ConfigurationNode;)V
}

public final class dev/racci/minix/api/serializables/recipes/BlastingRecipeIngredients : dev/racci/minix/api/serializables/recipes/SerializableRecipeIngredients {
	public static final field Companion Ldev/racci/minix/api/serializables/recipes/BlastingRecipeIngredients$Companion;
	public synthetic fun <init> (ILdev/racci/minix/api/serializables/SerializableItemStack;FILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/racci/minix/api/serializables/SerializableItemStack;FI)V
	public final fun getCookingTime ()I
	public final fun getExperience ()F
	public final fun getInput ()Ldev/racci/minix/api/serializables/SerializableItemStack;
	public fun toRecipe (Lorg/bukkit/NamespacedKey;Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;)Lorg/bukkit/inventory/Recipe;
	public static final fun write$Self (Ldev/racci/minix/api/serializables/recipes/BlastingRecipeIngredients;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/racci/minix/api/serializables/recipes/BlastingRecipeIngredients$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/recipes/BlastingRecipeIngredients$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/racci/minix/api/serializables/recipes/BlastingRecipeIngredients;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/racci/minix/api/serializables/recipes/BlastingRecipeIngredients;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/recipes/BlastingRecipeIngredients$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/recipes/CampfireRecipeIngredients : dev/racci/minix/api/serializables/recipes/SerializableRecipeIngredients {
	public static final field Companion Ldev/racci/minix/api/serializables/recipes/CampfireRecipeIngredients$Companion;
	public synthetic fun <init> (ILdev/racci/minix/api/serializables/SerializableItemStack;FILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/racci/minix/api/serializables/SerializableItemStack;FI)V
	public final fun getCookingTime ()I
	public final fun getExperience ()F
	public final fun getInput ()Ldev/racci/minix/api/serializables/SerializableItemStack;
	public fun toRecipe (Lorg/bukkit/NamespacedKey;Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;)Lorg/bukkit/inventory/Recipe;
	public static final fun write$Self (Ldev/racci/minix/api/serializables/recipes/CampfireRecipeIngredients;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/racci/minix/api/serializables/recipes/CampfireRecipeIngredients$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/recipes/CampfireRecipeIngredients$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/racci/minix/api/serializables/recipes/CampfireRecipeIngredients;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/racci/minix/api/serializables/recipes/CampfireRecipeIngredients;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/recipes/CampfireRecipeIngredients$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/recipes/FurnaceRecipeIngredients : dev/racci/minix/api/serializables/recipes/SerializableRecipeIngredients {
	public static final field Companion Ldev/racci/minix/api/serializables/recipes/FurnaceRecipeIngredients$Companion;
	public synthetic fun <init> (ILdev/racci/minix/api/serializables/SerializableItemStack;FILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/racci/minix/api/serializables/SerializableItemStack;FI)V
	public final fun getCookingTime ()I
	public final fun getExperience ()F
	public final fun getInput ()Ldev/racci/minix/api/serializables/SerializableItemStack;
	public fun toRecipe (Lorg/bukkit/NamespacedKey;Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;)Lorg/bukkit/inventory/Recipe;
	public static final fun write$Self (Ldev/racci/minix/api/serializables/recipes/FurnaceRecipeIngredients;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/racci/minix/api/serializables/recipes/FurnaceRecipeIngredients$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/recipes/FurnaceRecipeIngredients$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/racci/minix/api/serializables/recipes/FurnaceRecipeIngredients;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/racci/minix/api/serializables/recipes/FurnaceRecipeIngredients;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/recipes/FurnaceRecipeIngredients$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/recipes/SerializableRecipe {
	public static final field Companion Ldev/racci/minix/api/serializables/recipes/SerializableRecipe$Companion;
	public synthetic fun <init> (ILjava/lang/String;Ldev/racci/minix/api/serializables/recipes/SerializableRecipeIngredients;Ldev/racci/minix/api/serializables/SerializableItemStack;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ldev/racci/minix/api/serializables/recipes/SerializableRecipeIngredients;Ldev/racci/minix/api/serializables/SerializableItemStack;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ldev/racci/minix/api/serializables/recipes/SerializableRecipeIngredients;Ldev/racci/minix/api/serializables/SerializableItemStack;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getGroup ()Ljava/lang/String;
	public final fun getIngredients ()Ldev/racci/minix/api/serializables/recipes/SerializableRecipeIngredients;
	public final fun getKey ()Ljava/lang/String;
	public final fun getResult ()Ldev/racci/minix/api/serializables/SerializableItemStack;
	public final fun toCraftingRecipe ()Lorg/bukkit/inventory/Recipe;
	public static final fun write$Self (Ldev/racci/minix/api/serializables/recipes/SerializableRecipe;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/racci/minix/api/serializables/recipes/SerializableRecipe$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/recipes/SerializableRecipe$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/racci/minix/api/serializables/recipes/SerializableRecipe;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/racci/minix/api/serializables/recipes/SerializableRecipe;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/recipes/SerializableRecipe$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/racci/minix/api/serializables/recipes/SerializableRecipeIngredients {
	public static final field Companion Ldev/racci/minix/api/serializables/recipes/SerializableRecipeIngredients$Companion;
	public synthetic fun <init> (ILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public abstract fun toRecipe (Lorg/bukkit/NamespacedKey;Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;)Lorg/bukkit/inventory/Recipe;
	public static synthetic fun toRecipe$default (Ldev/racci/minix/api/serializables/recipes/SerializableRecipeIngredients;Lorg/bukkit/NamespacedKey;Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;ILjava/lang/Object;)Lorg/bukkit/inventory/Recipe;
	public static final fun write$Self (Ldev/racci/minix/api/serializables/recipes/SerializableRecipeIngredients;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/racci/minix/api/serializables/recipes/SerializableRecipeIngredients$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/recipes/ShapedRecipeIngredients : dev/racci/minix/api/serializables/recipes/SerializableRecipeIngredients {
	public static final field Companion Ldev/racci/minix/api/serializables/recipes/ShapedRecipeIngredients$Companion;
	public synthetic fun <init> (ILjava/util/Map;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/util/Map;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/util/Map;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getConfiguration ()Ljava/lang/String;
	public final fun getItems ()Ljava/util/Map;
	public fun toRecipe (Lorg/bukkit/NamespacedKey;Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;)Lorg/bukkit/inventory/Recipe;
	public static final fun write$Self (Ldev/racci/minix/api/serializables/recipes/ShapedRecipeIngredients;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/racci/minix/api/serializables/recipes/ShapedRecipeIngredients$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/recipes/ShapedRecipeIngredients$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/racci/minix/api/serializables/recipes/ShapedRecipeIngredients;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/racci/minix/api/serializables/recipes/ShapedRecipeIngredients;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/recipes/ShapedRecipeIngredients$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/recipes/ShapelessRecipeIngredients : dev/racci/minix/api/serializables/recipes/SerializableRecipeIngredients {
	public static final field Companion Ldev/racci/minix/api/serializables/recipes/ShapelessRecipeIngredients$Companion;
	public synthetic fun <init> (ILjava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ljava/util/List;)V
	public final fun getItems ()Ljava/util/List;
	public fun toRecipe (Lorg/bukkit/NamespacedKey;Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;)Lorg/bukkit/inventory/Recipe;
	public static final fun write$Self (Ldev/racci/minix/api/serializables/recipes/ShapelessRecipeIngredients;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/racci/minix/api/serializables/recipes/ShapelessRecipeIngredients$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/recipes/ShapelessRecipeIngredients$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/racci/minix/api/serializables/recipes/ShapelessRecipeIngredients;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/racci/minix/api/serializables/recipes/ShapelessRecipeIngredients;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/recipes/ShapelessRecipeIngredients$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/recipes/SmithingRecipeIngredients : dev/racci/minix/api/serializables/recipes/SerializableRecipeIngredients {
	public static final field Companion Ldev/racci/minix/api/serializables/recipes/SmithingRecipeIngredients$Companion;
	public synthetic fun <init> (ILdev/racci/minix/api/serializables/SerializableItemStack;Ldev/racci/minix/api/serializables/SerializableItemStack;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/racci/minix/api/serializables/SerializableItemStack;Ldev/racci/minix/api/serializables/SerializableItemStack;)V
	public final fun getAddition ()Ldev/racci/minix/api/serializables/SerializableItemStack;
	public final fun getInput ()Ldev/racci/minix/api/serializables/SerializableItemStack;
	public fun toRecipe (Lorg/bukkit/NamespacedKey;Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;)Lorg/bukkit/inventory/Recipe;
	public static final fun write$Self (Ldev/racci/minix/api/serializables/recipes/SmithingRecipeIngredients;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/racci/minix/api/serializables/recipes/SmithingRecipeIngredients$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/recipes/SmithingRecipeIngredients$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/racci/minix/api/serializables/recipes/SmithingRecipeIngredients;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/racci/minix/api/serializables/recipes/SmithingRecipeIngredients;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/recipes/SmithingRecipeIngredients$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/recipes/SmokingRecipeIngredients : dev/racci/minix/api/serializables/recipes/SerializableRecipeIngredients {
	public static final field Companion Ldev/racci/minix/api/serializables/recipes/SmokingRecipeIngredients$Companion;
	public synthetic fun <init> (ILdev/racci/minix/api/serializables/SerializableItemStack;FILkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/racci/minix/api/serializables/SerializableItemStack;FI)V
	public final fun getCookingTime ()I
	public final fun getExperience ()F
	public final fun getInput ()Ldev/racci/minix/api/serializables/SerializableItemStack;
	public fun toRecipe (Lorg/bukkit/NamespacedKey;Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;)Lorg/bukkit/inventory/Recipe;
	public static final fun write$Self (Ldev/racci/minix/api/serializables/recipes/SmokingRecipeIngredients;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/racci/minix/api/serializables/recipes/SmokingRecipeIngredients$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/recipes/SmokingRecipeIngredients$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/racci/minix/api/serializables/recipes/SmokingRecipeIngredients;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/racci/minix/api/serializables/recipes/SmokingRecipeIngredients;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/recipes/SmokingRecipeIngredients$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/recipes/StoneCuttingRecipeIngredients : dev/racci/minix/api/serializables/recipes/SerializableRecipeIngredients {
	public static final field Companion Ldev/racci/minix/api/serializables/recipes/StoneCuttingRecipeIngredients$Companion;
	public synthetic fun <init> (ILdev/racci/minix/api/serializables/SerializableItemStack;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public fun <init> (Ldev/racci/minix/api/serializables/SerializableItemStack;)V
	public final fun getInput ()Ldev/racci/minix/api/serializables/SerializableItemStack;
	public fun toRecipe (Lorg/bukkit/NamespacedKey;Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;)Lorg/bukkit/inventory/Recipe;
	public static final fun write$Self (Ldev/racci/minix/api/serializables/recipes/StoneCuttingRecipeIngredients;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;)V
}

public final class dev/racci/minix/api/serializables/recipes/StoneCuttingRecipeIngredients$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/serializables/recipes/StoneCuttingRecipeIngredients$$serializer;
	public static final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/racci/minix/api/serializables/recipes/StoneCuttingRecipeIngredients;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/racci/minix/api/serializables/recipes/StoneCuttingRecipeIngredients;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/serializables/recipes/StoneCuttingRecipeIngredients$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public abstract class dev/racci/minix/api/services/DataService : dev/racci/minix/api/extension/Extension, dev/racci/minix/api/services/StorageService {
	public static final field Companion Ldev/racci/minix/api/services/DataService$Companion;
	public fun <init> ()V
	public abstract fun getConfig (Lkotlin/reflect/KClass;)Ldev/racci/minix/api/data/MinixConfig;
	public fun getDataSourceProperties ()Ljava/util/Map;
	public fun getDatabase (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getStorageDirectory ()Ljava/nio/file/Path;
	public fun handleUnload (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun withDatabase (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/services/DataService$Companion : dev/racci/minix/api/extension/Extension$ExtensionCompanion {
}

public abstract interface class dev/racci/minix/api/services/PlayerService {
	public static final field Companion Ldev/racci/minix/api/services/PlayerService$Companion;
	public abstract fun get (Lorg/bukkit/entity/Player;)Ldev/racci/minix/api/data/PlayerData;
	public abstract fun getFunctionsMove ()Ldev/racci/minix/api/utils/collections/OnlinePlayerMap;
	public abstract fun getFunctionsQuit ()Ldev/racci/minix/api/utils/collections/OnlinePlayerMap;
	public abstract fun getInputCallbacks ()Ldev/racci/minix/api/utils/collections/OnlinePlayerMap;
	public abstract fun minusAssign (Ljava/util/UUID;)V
	public abstract fun remove (Ljava/util/UUID;)Z
}

public final class dev/racci/minix/api/services/PlayerService$Companion : dev/racci/minix/api/services/PlayerService {
	public fun get (Lorg/bukkit/entity/Player;)Ldev/racci/minix/api/data/PlayerData;
	public fun getFunctionsMove ()Ldev/racci/minix/api/utils/collections/OnlinePlayerMap;
	public fun getFunctionsQuit ()Ldev/racci/minix/api/utils/collections/OnlinePlayerMap;
	public fun getInputCallbacks ()Ldev/racci/minix/api/utils/collections/OnlinePlayerMap;
	public fun minusAssign (Ljava/util/UUID;)V
	public fun remove (Ljava/util/UUID;)Z
}

public abstract interface class dev/racci/minix/api/services/PluginService {
	public static final field Companion Ldev/racci/minix/api/services/PluginService$Companion;
	public abstract fun firstNonMinixPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public abstract fun fromClassloader (Ljava/lang/ClassLoader;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun get (Ldev/racci/minix/api/plugin/MinixPlugin;)Ldev/racci/minix/api/plugin/PluginData;
	public abstract fun getCoroutineSession ()Lcom/github/benmanes/caffeine/cache/LoadingCache;
	public abstract fun getLoadedPlugins ()Ljava/util/Map;
	public abstract fun getPluginCache ()Lcom/github/benmanes/caffeine/cache/LoadingCache;
	public abstract fun loadPlugin (Ldev/racci/minix/api/plugin/MinixPlugin;)V
	public abstract fun reloadPlugin (Ldev/racci/minix/api/plugin/MinixPlugin;)V
	public abstract fun startPlugin (Ldev/racci/minix/api/plugin/MinixPlugin;)V
	public abstract fun unloadPlugin (Ldev/racci/minix/api/plugin/MinixPlugin;)V
}

public final class dev/racci/minix/api/services/PluginService$Companion : dev/racci/minix/api/services/PluginService {
	public fun firstNonMinixPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun fromClassloader (Ljava/lang/ClassLoader;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun get (Ldev/racci/minix/api/plugin/MinixPlugin;)Ldev/racci/minix/api/plugin/PluginData;
	public fun getCoroutineSession ()Lcom/github/benmanes/caffeine/cache/LoadingCache;
	public fun getLoadedPlugins ()Ljava/util/Map;
	public fun getPluginCache ()Lcom/github/benmanes/caffeine/cache/LoadingCache;
	public fun loadPlugin (Ldev/racci/minix/api/plugin/MinixPlugin;)V
	public fun reloadPlugin (Ldev/racci/minix/api/plugin/MinixPlugin;)V
	public fun startPlugin (Ldev/racci/minix/api/plugin/MinixPlugin;)V
	public fun unloadPlugin (Ldev/racci/minix/api/plugin/MinixPlugin;)V
}

public abstract interface class dev/racci/minix/api/services/StorageService : dev/racci/minix/api/extension/ExtensionSkeleton {
	public abstract fun getDataSourceProperties ()Ljava/util/Map;
	public abstract fun getDatabase (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun getManagedTable ()Lorg/jetbrains/exposed/sql/Table;
	public abstract fun getStorageDirectory ()Ljava/nio/file/Path;
	public abstract fun handleUnload (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun withDatabase (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/services/StorageService$DefaultImpls {
	public static fun async (Ldev/racci/minix/api/services/StorageService;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static fun completableAsync (Ldev/racci/minix/api/services/StorageService;Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public static fun completableSync (Ldev/racci/minix/api/services/StorageService;Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public static fun deferredAsync (Ldev/racci/minix/api/services/StorageService;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public static fun deferredSync (Ldev/racci/minix/api/services/StorageService;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public static fun deleteProperty (Ldev/racci/minix/api/services/StorageService;Ljava/lang/String;)V
	public static fun getDataSourceProperties (Ldev/racci/minix/api/services/StorageService;)Ljava/util/Map;
	public static fun getDatabase (Ldev/racci/minix/api/services/StorageService;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun getKoin (Ldev/racci/minix/api/services/StorageService;)Lorg/koin/core/Koin;
	public static fun getLogger (Ldev/racci/minix/api/services/StorageService;)Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public static fun getProperty (Ldev/racci/minix/api/services/StorageService;Ljava/lang/String;)Ljava/lang/Object;
	public static fun getProperty (Ldev/racci/minix/api/services/StorageService;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun getStorageDirectory (Ldev/racci/minix/api/services/StorageService;)Ljava/nio/file/Path;
	public static fun handleDisable (Ldev/racci/minix/api/services/StorageService;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun handleEnable (Ldev/racci/minix/api/services/StorageService;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun handleLoad (Ldev/racci/minix/api/services/StorageService;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun handleUnload (Ldev/racci/minix/api/services/StorageService;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun launch (Ldev/racci/minix/api/services/StorageService;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static fun registerEvents (Ldev/racci/minix/api/services/StorageService;[Lorg/bukkit/event/Listener;)V
	public static fun setProperty (Ldev/racci/minix/api/services/StorageService;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun sync (Ldev/racci/minix/api/services/StorageService;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static fun withDatabase (Ldev/racci/minix/api/services/StorageService;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class dev/racci/minix/api/services/UpdaterService {
	public static final field Companion Ldev/racci/minix/api/services/UpdaterService$Companion;
	public abstract fun checkForUpdate (Ldev/racci/minix/api/data/PluginUpdater;)Z
	public abstract fun getDisabledUpdaters ()Ljava/util/List;
	public abstract fun getEnabledUpdaters ()Ljava/util/List;
	public abstract fun tryUpdate (Ldev/racci/minix/api/data/PluginUpdater;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/services/UpdaterService$Companion : dev/racci/minix/api/services/UpdaterService {
	public fun checkForUpdate (Ldev/racci/minix/api/data/PluginUpdater;)Z
	public fun getDisabledUpdaters ()Ljava/util/List;
	public fun getEnabledUpdaters ()Ljava/util/List;
	public fun tryUpdate (Ldev/racci/minix/api/data/PluginUpdater;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/updater/ChecksumType : java/lang/Enum {
	public static final field MD5 Ldev/racci/minix/api/updater/ChecksumType;
	public static final field NONE Ldev/racci/minix/api/updater/ChecksumType;
	public static final field SHA1 Ldev/racci/minix/api/updater/ChecksumType;
	public static final field SHA224 Ldev/racci/minix/api/updater/ChecksumType;
	public static final field SHA256 Ldev/racci/minix/api/updater/ChecksumType;
	public static final field SHA384 Ldev/racci/minix/api/updater/ChecksumType;
	public static final field SHA512 Ldev/racci/minix/api/updater/ChecksumType;
	public final fun getAlgorithm ()Ljava/lang/String;
	public final fun getInstance ()Ljava/security/MessageDigest;
	public final fun getInstanceOrNull ()Ljava/security/MessageDigest;
	public final fun isSupported ()Z
	public final fun setSupported (Z)V
	public static fun valueOf (Ljava/lang/String;)Ldev/racci/minix/api/updater/ChecksumType;
	public static fun values ()[Ldev/racci/minix/api/updater/ChecksumType;
}

public final class dev/racci/minix/api/updater/ReleaseType : java/lang/Enum {
	public static final field ALPHA Ldev/racci/minix/api/updater/ReleaseType;
	public static final field BETA Ldev/racci/minix/api/updater/ReleaseType;
	public static final field RC Ldev/racci/minix/api/updater/ReleaseType;
	public static final field RELEASE Ldev/racci/minix/api/updater/ReleaseType;
	public static final field SNAPSHOT Ldev/racci/minix/api/updater/ReleaseType;
	public static final field UNKNOWN Ldev/racci/minix/api/updater/ReleaseType;
	public static fun valueOf (Ljava/lang/String;)Ldev/racci/minix/api/updater/ReleaseType;
	public static fun values ()[Ldev/racci/minix/api/updater/ReleaseType;
}

public final class dev/racci/minix/api/updater/UpdateMode : java/lang/Enum {
	public static final field CHECK Ldev/racci/minix/api/updater/UpdateMode;
	public static final field DISABLED Ldev/racci/minix/api/updater/UpdateMode;
	public static final field UPDATE Ldev/racci/minix/api/updater/UpdateMode;
	public static fun valueOf (Ljava/lang/String;)Ldev/racci/minix/api/updater/UpdateMode;
	public static fun values ()[Ldev/racci/minix/api/updater/UpdateMode;
}

public final class dev/racci/minix/api/updater/UpdateResult : java/lang/Enum {
	public static final field DISABLED Ldev/racci/minix/api/updater/UpdateResult;
	public static final field FAILED_ALREADY_STARTED Ldev/racci/minix/api/updater/UpdateResult;
	public static final field FAILED_BACKUP Ldev/racci/minix/api/updater/UpdateResult;
	public static final field FAILED_CHECKSUM Ldev/racci/minix/api/updater/UpdateResult;
	public static final field FAILED_CONNECTION Ldev/racci/minix/api/updater/UpdateResult;
	public static final field FAILED_DOWNLOAD Ldev/racci/minix/api/updater/UpdateResult;
	public static final field FAILED_DOWNLOAD_DEPENDENCIES Ldev/racci/minix/api/updater/UpdateResult;
	public static final field FAILED_DOWNLOAD_DISALLOWED Ldev/racci/minix/api/updater/UpdateResult;
	public static final field FAILED_EXTRACTION Ldev/racci/minix/api/updater/UpdateResult;
	public static final field FAILED_KEY Ldev/racci/minix/api/updater/UpdateResult;
	public static final field FAILED_NO_FILE Ldev/racci/minix/api/updater/UpdateResult;
	public static final field FAILED_NO_VERSION Ldev/racci/minix/api/updater/UpdateResult;
	public static final field FAILED_VERSION Ldev/racci/minix/api/updater/UpdateResult;
	public static final field FAILED_VERSION_INCOMPATIBLE Ldev/racci/minix/api/updater/UpdateResult;
	public static final field NO_UPDATE Ldev/racci/minix/api/updater/UpdateResult;
	public static final field SUCCESS Ldev/racci/minix/api/updater/UpdateResult;
	public static final field UPDATE_FOUND Ldev/racci/minix/api/updater/UpdateResult;
	public final fun isSuccessful ()Z
	public static fun valueOf (Ljava/lang/String;)Ldev/racci/minix/api/updater/UpdateResult;
	public static fun values ()[Ldev/racci/minix/api/updater/UpdateResult;
}

public final class dev/racci/minix/api/updater/Version : java/lang/Comparable {
	public static final field Companion Ldev/racci/minix/api/updater/Version$Companion;
	public fun <init> (I)V
	public fun <init> (II)V
	public fun <init> (III)V
	public fun <init> (Ljava/lang/String;Z)V
	public synthetic fun <init> (Ljava/lang/String;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/racci/minix/api/updater/Version;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun compareTo (Ljava/lang/String;)I
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBuildNumber ()J
	public final fun getMajor ()I
	public final fun getMinor ()I
	public final fun getPatch ()I
	public final fun getRawVersion ()Ljava/lang/String;
	public final fun getTimestamp ()J
	public fun hashCode ()I
	public final fun isPreRelease ()Z
	public final fun setPreRelease (Z)V
	public final fun toInt ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/racci/minix/api/updater/Version$Companion {
	public final fun getBuildParameter (Ljava/util/List;Ljava/lang/String;)J
	public final fun getERROR ()Ldev/racci/minix/api/updater/Version;
	public final fun getGroupTagRegex ()Lkotlin/text/Regex;
	public final fun getPreReleaseTagRegex ()Lkotlin/text/Regex;
	public final fun getPreReleaseTagResolution ()Ljava/util/Map;
	public final fun getPreReleaseTags ()[Ljava/lang/String;
	public final fun getTagRegex ()Lkotlin/text/Regex;
	public final fun getVersionStringRegex ()Lkotlin/text/Regex;
}

public final class dev/racci/minix/api/updater/Version$InvalidVersionStringException : java/lang/IllegalArgumentException {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class dev/racci/minix/api/updater/providers/AlwaysUpdateProvider : dev/racci/minix/api/updater/providers/BaseOnlineProvider {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/racci/minix/api/updater/ReleaseType;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ldev/racci/minix/api/updater/ReleaseType;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Ljava/net/URL;Ljava/lang/String;Ldev/racci/minix/api/updater/ReleaseType;)V
	public synthetic fun <init> (Ljava/net/URL;Ljava/lang/String;Ldev/racci/minix/api/updater/ReleaseType;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getLatestFileName ()Ljava/lang/String;
	public fun getLatestFileURL ()Ljava/net/URL;
	public fun getLatestReleaseType ()Ldev/racci/minix/api/updater/ReleaseType;
	public fun getLatestVersion ()Ldev/racci/minix/api/updater/Version;
	public fun getName ()Ljava/lang/String;
	public fun getProvidesDownloadURL ()Z
	public fun query (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class dev/racci/minix/api/updater/providers/BaseOnlineProvider : dev/racci/minix/api/updater/providers/UpdateProvider {
	public static final field Companion Ldev/racci/minix/api/updater/providers/BaseOnlineProvider$Companion;
	protected fun <init> ()V
	protected fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun connect (Ljava/net/URL;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected static final fun getClient ()Lio/ktor/client/HttpClient;
	protected static final fun getGSON ()Lcom/google/gson/Gson;
	public fun getLatestReleaseType ()Ldev/racci/minix/api/updater/ReleaseType;
	public fun getProvidesDownloadURL ()Z
	protected final fun logErrorOffline (Ljava/lang/String;Ljava/lang/String;)V
	protected fun requestBuilder (Lio/ktor/client/request/HttpRequestBuilder;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/updater/providers/BaseOnlineProvider$Companion {
}

public abstract class dev/racci/minix/api/updater/providers/BaseOnlineProviderWithDownload : dev/racci/minix/api/updater/providers/BaseOnlineProvider {
	protected fun <init> ()V
	protected fun <init> (Ljava/lang/String;)V
	protected final fun getLastResult ()Ldev/racci/minix/api/updater/providers/UpdateProvider$UpdateFile;
	public fun getLatestFileName ()Ljava/lang/String;
	public fun getLatestFileURL ()Ljava/net/URL;
	public fun getLatestName ()Ljava/lang/String;
	public fun getLatestVersion ()Ldev/racci/minix/api/updater/Version;
	protected final fun setLastResult (Ldev/racci/minix/api/updater/providers/UpdateProvider$UpdateFile;)V
}

public final class dev/racci/minix/api/updater/providers/BukkitUpdateProvider : dev/racci/minix/api/updater/providers/BaseOnlineProviderWithDownload {
	public static final field Companion Ldev/racci/minix/api/updater/providers/BukkitUpdateProvider$Companion;
	public fun <init> (ILjava/lang/String;)V
	public synthetic fun <init> (ILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getLatestChecksum ()Ljava/lang/String;
	public fun getLatestMinecraftVersion ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getProvidesChecksum ()Ldev/racci/minix/api/updater/ChecksumType;
	public fun getProvidesMinecraftVersion ()Z
	public fun getProvidesUpdateHistory ()Z
	public fun getUpdateHistory ()[Ldev/racci/minix/api/updater/providers/UpdateProvider$UpdateFile;
	public fun query (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/updater/providers/BukkitUpdateProvider$Companion {
}

public final class dev/racci/minix/api/updater/providers/GithubUpdateProvider : dev/racci/minix/api/updater/providers/BaseOnlineProviderWithDownload {
	public static final field Companion Ldev/racci/minix/api/updater/providers/GithubUpdateProvider$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getLatestChecksum ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getProvidesChangelog ()Z
	public fun getProvidesChecksum ()Ldev/racci/minix/api/updater/ChecksumType;
	public fun getProvidesDependencies ()Z
	public fun getProvidesMinecraftVersion ()Z
	public fun getProvidesMinecraftVersions ()Z
	public fun getProvidesUpdateHistory ()Z
	public fun query (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/updater/providers/GithubUpdateProvider$Companion {
}

public final class dev/racci/minix/api/updater/providers/JenkinsUpdateProvider : dev/racci/minix/api/updater/providers/BaseOnlineProviderWithDownload {
	public static final field Companion Ldev/racci/minix/api/updater/providers/JenkinsUpdateProvider$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getLatestChangelog ()Ljava/lang/String;
	public fun getLatestChecksum ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getProvidesChangelog ()Z
	public fun getProvidesChecksum ()Ldev/racci/minix/api/updater/ChecksumType;
	public fun getProvidesUpdateHistory ()Z
	public fun query (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/updater/providers/JenkinsUpdateProvider$Companion {
}

public final class dev/racci/minix/api/updater/providers/NotSuccessfullyQueriedException : java/lang/Exception {
	public fun <init> ()V
}

public final class dev/racci/minix/api/updater/providers/NullUpdateProvider : dev/racci/minix/api/updater/providers/UpdateProvider {
	public fun <init> ()V
	public fun connect (Ljava/net/URL;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getLatestFileName ()Ljava/lang/String;
	public fun getLatestReleaseType ()Ldev/racci/minix/api/updater/ReleaseType;
	public fun getLatestVersion ()Ldev/racci/minix/api/updater/Version;
	public fun getName ()Ljava/lang/String;
	public fun getProvidesChangelog ()Z
	public fun getProvidesChecksum ()Ldev/racci/minix/api/updater/ChecksumType;
	public fun getProvidesDependencies ()Z
	public fun getProvidesDownloadURL ()Z
	public fun getProvidesMinecraftVersion ()Z
	public fun getProvidesMinecraftVersions ()Z
	public fun getProvidesUpdateHistory ()Z
	public fun query (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/updater/providers/RequestTypeNotAvailableException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public final class dev/racci/minix/api/updater/providers/SpigotUpdateProvider : dev/racci/minix/api/updater/providers/BaseOnlineProvider {
	public fun <init> (ILjava/lang/String;)V
	public synthetic fun <init> (ILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getLatestFileName ()Ljava/lang/String;
	public fun getLatestFileURL ()Ljava/net/URL;
	public fun getLatestMinecraftVersion ()Ljava/lang/String;
	public fun getLatestMinecraftVersions ()[Ljava/lang/String;
	public fun getLatestName ()Ljava/lang/String;
	public fun getLatestVersion ()Ldev/racci/minix/api/updater/Version;
	public fun getName ()Ljava/lang/String;
	public fun getProvidesChangelog ()Z
	public fun getProvidesChecksum ()Ldev/racci/minix/api/updater/ChecksumType;
	public fun getProvidesDependencies ()Z
	public fun getProvidesDownloadURL ()Z
	public fun getProvidesMinecraftVersion ()Z
	public fun getProvidesMinecraftVersions ()Z
	public fun getProvidesUpdateHistory ()Z
	public fun query (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class dev/racci/minix/api/updater/providers/UpdateProvider : org/koin/core/component/KoinComponent {
	public fun <init> ()V
	public abstract fun connect (Ljava/net/URL;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLatestChangelog ()Ljava/lang/String;
	public fun getLatestChecksum ()Ljava/lang/String;
	public fun getLatestDependencies ()[Ldev/racci/minix/api/updater/providers/UpdateProvider$UpdateFile;
	public abstract fun getLatestFileName ()Ljava/lang/String;
	public fun getLatestFileURL ()Ljava/net/URL;
	public fun getLatestMinecraftVersion ()Ljava/lang/String;
	public fun getLatestMinecraftVersions ()[Ljava/lang/String;
	public fun getLatestName ()Ljava/lang/String;
	public abstract fun getLatestReleaseType ()Ldev/racci/minix/api/updater/ReleaseType;
	public abstract fun getLatestVersion ()Ldev/racci/minix/api/updater/Version;
	public final fun getLogger ()Ldev/racci/minix/api/plugin/logger/PluginDependentMinixLogger;
	public fun getName ()Ljava/lang/String;
	public fun getProvidesChangelog ()Z
	public fun getProvidesChecksum ()Ldev/racci/minix/api/updater/ChecksumType;
	public fun getProvidesDependencies ()Z
	public fun getProvidesDownloadURL ()Z
	public fun getProvidesMinecraftVersion ()Z
	public fun getProvidesMinecraftVersions ()Z
	public fun getProvidesUpdateHistory ()Z
	public fun getUpdateHistory ()[Ldev/racci/minix/api/updater/providers/UpdateProvider$UpdateFile;
	public abstract fun query (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/updater/providers/UpdateProvider$InvalidUpdateProviderException : java/lang/Exception {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class dev/racci/minix/api/updater/providers/UpdateProvider$UpdateFile {
	public fun <init> ()V
	public fun <init> (Ljava/net/URL;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/racci/minix/api/updater/Version;[Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/net/URL;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/racci/minix/api/updater/Version;[Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/net/URL;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ldev/racci/minix/api/updater/Version;
	public final fun component8 ()[Ljava/lang/String;
	public final fun copy (Ljava/net/URL;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/racci/minix/api/updater/Version;[Ljava/lang/String;)Ldev/racci/minix/api/updater/providers/UpdateProvider$UpdateFile;
	public static synthetic fun copy$default (Ldev/racci/minix/api/updater/providers/UpdateProvider$UpdateFile;Ljava/net/URL;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldev/racci/minix/api/updater/Version;[Ljava/lang/String;ILjava/lang/Object;)Ldev/racci/minix/api/updater/providers/UpdateProvider$UpdateFile;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChangelog ()Ljava/lang/String;
	public final fun getChecksum ()Ljava/lang/String;
	public final fun getDownloadURL ()Ljava/net/URL;
	public final fun getFileName ()Ljava/lang/String;
	public final fun getGameVersion ()Ljava/lang/String;
	public final fun getGameVersions ()[Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public final fun getVersion ()Ldev/racci/minix/api/updater/Version;
	public fun hashCode ()I
	public final fun setChangelog (Ljava/lang/String;)V
	public final fun setChecksum (Ljava/lang/String;)V
	public final fun setDownloadURL (Ljava/net/URL;)V
	public final fun setFileName (Ljava/lang/String;)V
	public final fun setGameVersion (Ljava/lang/String;)V
	public final fun setGameVersions ([Ljava/lang/String;)V
	public final fun setName (Ljava/lang/String;)V
	public final fun setVersion (Ldev/racci/minix/api/updater/Version;)V
	public fun toString ()Ljava/lang/String;
}

public final class dev/racci/minix/api/updater/providers/UpdateProvider$UpdateProviderSerializer : org/spongepowered/configurate/serialize/TypeSerializer {
	public static final field Companion Ldev/racci/minix/api/updater/providers/UpdateProvider$UpdateProviderSerializer$Companion;
	public fun <init> ()V
	public fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ldev/racci/minix/api/updater/providers/UpdateProvider;
	public synthetic fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/lang/Object;
	public fun serialize (Ljava/lang/reflect/Type;Ldev/racci/minix/api/updater/providers/UpdateProvider;Lorg/spongepowered/configurate/ConfigurationNode;)V
	public synthetic fun serialize (Ljava/lang/reflect/Type;Ljava/lang/Object;Lorg/spongepowered/configurate/ConfigurationNode;)V
}

public final class dev/racci/minix/api/updater/providers/UpdateProvider$UpdateProviderSerializer$Companion {
	public final fun getBuffered (Lio/ktor/client/statement/HttpResponse;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getSerializers ()Lorg/spongepowered/configurate/serialize/TypeSerializerCollection;
	public final fun nonVirtualNode-gIAlu-s (Lorg/spongepowered/configurate/ConfigurationNode;[Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract class dev/racci/minix/api/utils/Closeable {
	public fun <init> ()V
	public fun close ()Ljava/lang/Object;
	public abstract fun create ()Ljava/lang/Object;
	public final fun get ()Ljava/lang/Object;
	protected final fun getValue ()Lkotlinx/atomicfu/AtomicRef;
	public final fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun onClose ()V
}

public final class dev/racci/minix/api/utils/FileSystemUtils : dev/racci/minix/api/utils/UtilObject {
	public static final field INSTANCE Ldev/racci/minix/api/utils/FileSystemUtils;
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/Minix;
	public synthetic fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun size (Ljava/io/File;I)J
	public static synthetic fun size$default (Ldev/racci/minix/api/utils/FileSystemUtils;Ljava/io/File;IILjava/lang/Object;)J
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/utils/FileSystemUtilsKt {
	public static final fun size (Ljava/io/File;)J
	public static final fun size (Ljava/nio/file/Path;)J
}

public final class dev/racci/minix/api/utils/KoinKt {
	public static final fun getKoin ()Lorg/koin/core/Koin;
	public static final fun loadModule (ZLkotlin/jvm/functions/Function1;)Lorg/koin/core/module/Module;
	public static synthetic fun loadModule$default (ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lorg/koin/core/module/Module;
}

public final class dev/racci/minix/api/utils/KoinUtils {
	public static final field INSTANCE Ldev/racci/minix/api/utils/KoinUtils;
	public final fun clearBinds (Ljava/lang/Object;)V
	public final fun createBindArray (Ljava/lang/Object;)[Lkotlin/reflect/KClass;
	public final fun getBinds (Ljava/lang/Object;)[Lkotlin/reflect/KClass;
	public final fun getReference ()Ljava/util/concurrent/ConcurrentHashMap;
}

public final class dev/racci/minix/api/utils/KoinUtils$sam$i$java_util_function_BiFunction$0 : java/util/function/BiFunction {
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final synthetic fun apply (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract class dev/racci/minix/api/utils/Loadable {
	public static final field Companion Ldev/racci/minix/api/utils/Loadable$Companion;
	public fun <init> ()V
	public final fun equals (Ljava/lang/Object;)Z
	public final fun get-IoAF18A (Z)Ljava/lang/Object;
	public static synthetic fun get-IoAF18A$default (Ldev/racci/minix/api/utils/Loadable;ZILjava/lang/Object;)Ljava/lang/Object;
	protected final fun getError ()Lkotlinx/atomicfu/AtomicRef;
	public final fun getFailed ()Z
	protected final fun getInitialized ()Lkotlinx/atomicfu/AtomicBoolean;
	public final fun getLoaded ()Z
	public final fun getState ()Ldev/racci/minix/api/utils/Loadable$State;
	public final fun getUnloaded ()Z
	protected final fun getValue ()Lkotlinx/atomicfu/AtomicRef;
	public final fun hashCode ()I
	public final fun load-gIAlu-s (ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun load-gIAlu-s$default (Ldev/racci/minix/api/utils/Loadable;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public abstract fun onLoad (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun onUnload (Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected fun predicateLoadable ()Z
	public final fun toString ()Ljava/lang/String;
	public final fun unload (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/utils/Loadable$Companion {
}

public final class dev/racci/minix/api/utils/Loadable$State : java/lang/Enum {
	public static final field FAILED Ldev/racci/minix/api/utils/Loadable$State;
	public static final field LOADABLE Ldev/racci/minix/api/utils/Loadable$State;
	public static final field LOADED Ldev/racci/minix/api/utils/Loadable$State;
	public static final field UNLOADED Ldev/racci/minix/api/utils/Loadable$State;
	public static fun valueOf (Ljava/lang/String;)Ldev/racci/minix/api/utils/Loadable$State;
	public static fun values ()[Ldev/racci/minix/api/utils/Loadable$State;
}

public abstract class dev/racci/minix/api/utils/PropertyFinder {
	public static final field Companion Ldev/racci/minix/api/utils/PropertyFinder$Companion;
	public fun <init> ()V
	public fun get (Ljava/lang/String;)Ljava/lang/Object;
	public final fun getPropertyMap ()Lkotlinx/collections/immutable/PersistentMap;
}

public final class dev/racci/minix/api/utils/PropertyFinder$Companion {
	public final fun formatString (Ljava/lang/String;)Ljava/lang/String;
}

public final class dev/racci/minix/api/utils/RecursionUtils : dev/racci/minix/api/utils/UtilObject {
	public static final field INSTANCE Ldev/racci/minix/api/utils/RecursionUtils;
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/Minix;
	public synthetic fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public final fun recursiveFinder (Ljava/lang/Object;IILkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Ljava/util/HashSet;)Ljava/util/HashSet;
	public static synthetic fun recursiveFinder$default (Ldev/racci/minix/api/utils/RecursionUtils;Ljava/lang/Object;IILkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Ljava/util/HashSet;ILjava/lang/Object;)Ljava/util/HashSet;
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/utils/ReflectionUtilsKt {
	public static final fun accessReturn (Lkotlin/reflect/KProperty1;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun accessReturn (Lkotlin/reflect/KProperty;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun accessWith (Lkotlin/reflect/KProperty1;Lkotlin/jvm/functions/Function1;)V
	public static final fun accessWith (Lkotlin/reflect/KProperty;Lkotlin/jvm/functions/Function1;)V
	public static final fun classConstructor (Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun clone (Ljava/lang/Object;Ljava/util/Map;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun clone$default (Ljava/lang/Object;Ljava/util/Map;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun exists (Ljava/lang/String;)Z
	public static final fun readInstanceProperty (Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/Object;
	public static synthetic fun readInstanceProperty$default (Ljava/lang/Object;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/Object;
	public static final fun safeCast (Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
	public static final fun unsafeCast (Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun unsafeCast (Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/utils/TakeMaxTimePerTickUtilsKt {
	public static final fun takeMaxPerTick-8Mi8wO0 (Ldev/racci/minix/api/extensions/WithPlugin;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun takeMaxPerTick-8Mi8wO0 (Ldev/racci/minix/api/plugin/MinixPlugin;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/utils/TimeUtils : dev/racci/minix/api/utils/UtilObject {
	public static final field INSTANCE Ldev/racci/minix/api/utils/TimeUtils;
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/Minix;
	public synthetic fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public final fun processTimed-5sfh64U (Lkotlin/jvm/functions/Function0;)J
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/utils/TimeUtilsKt {
	public static final fun getTicks (D)J
	public static final fun getTicks (I)J
	public static final fun getTicks (J)J
	public static final fun getTicks-LRDsOJo (J)J
	public static final fun now ()Lkotlinx/datetime/Instant;
}

public final class dev/racci/minix/api/utils/UnsafeUtil {
	public static final field Companion Ldev/racci/minix/api/utils/UnsafeUtil$Companion;
	public fun <init> ()V
	public final fun catch ([Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)V
	public final fun danger (Lkotlin/jvm/functions/Function1;)V
	public final fun finally (Lkotlin/jvm/functions/Function1;)V
}

public final class dev/racci/minix/api/utils/UnsafeUtil$Companion {
	public final fun unsafe (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V
}

public final class dev/racci/minix/api/utils/adventure/LazyComponentReplacement : net/kyori/adventure/text/minimessage/tag/Inserting, net/kyori/adventure/text/minimessage/tag/Tag {
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public fun allowsChildren ()Z
	public fun value ()Lnet/kyori/adventure/text/Component;
}

public final class dev/racci/minix/api/utils/adventure/LazyStringReplacement : net/kyori/adventure/text/minimessage/tag/PreProcess, net/kyori/adventure/text/minimessage/tag/Tag {
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public fun value ()Ljava/lang/String;
}

public final class dev/racci/minix/api/utils/adventure/PartialComponent {
	public static final field Companion Ldev/racci/minix/api/utils/adventure/PartialComponent$Companion;
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun formatRaw (Ljava/util/Map;)V
	public final fun get ([Lkotlin/Pair;)Lnet/kyori/adventure/text/Component;
	public final fun getValue ()Lnet/kyori/adventure/text/Component;
	public fun toString ()Ljava/lang/String;
}

public final class dev/racci/minix/api/utils/adventure/PartialComponent$Companion {
	public final fun message (Ldev/racci/minix/api/utils/adventure/PartialComponent;Lorg/bukkit/command/CommandSender;)V
	public final fun of (Ljava/lang/String;)Ldev/racci/minix/api/utils/adventure/PartialComponent;
}

public final class dev/racci/minix/api/utils/adventure/PartialComponent$Serializer : org/spongepowered/configurate/serialize/TypeSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/utils/adventure/PartialComponent$Serializer;
	public fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ldev/racci/minix/api/utils/adventure/PartialComponent;
	public synthetic fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/lang/Object;
	public fun serialize (Ljava/lang/reflect/Type;Ldev/racci/minix/api/utils/adventure/PartialComponent;Lorg/spongepowered/configurate/ConfigurationNode;)V
	public synthetic fun serialize (Ljava/lang/reflect/Type;Ljava/lang/Object;Lorg/spongepowered/configurate/ConfigurationNode;)V
}

public final class dev/racci/minix/api/utils/collections/CollectionUtils : dev/racci/minix/api/utils/UtilObject {
	public static final field INSTANCE Ldev/racci/minix/api/utils/collections/CollectionUtils;
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public final fun cacheOf (Lkotlin/jvm/functions/Function1;)Lcom/github/benmanes/caffeine/cache/LoadingCache;
	public final fun cacheOf (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lcom/github/benmanes/caffeine/cache/LoadingCache;
	public final fun clear (Ljava/util/Collection;Lkotlin/jvm/functions/Function1;)V
	public final fun clear (Ljava/util/Map;Lkotlin/jvm/functions/Function1;)V
	public final fun clear (Ljava/util/Map;Lkotlin/jvm/functions/Function2;)V
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public final fun computeAndRemove (Ljava/util/Map;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Z
	public final fun computeAndRemove (Ljava/util/Map;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Z
	public final fun containsIgnoreCase (Ljava/util/Collection;Ljava/lang/String;)Z
	public final fun containsIgnoreCase ([Ljava/lang/String;Ljava/lang/String;)Z
	public final fun containsKeyIgnoreCase (Ljava/util/Map;Ljava/lang/String;)Z
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public final fun find (Ljava/util/Collection;Ljava/lang/String;Z)Ljava/lang/String;
	public final fun find (Ljava/util/Collection;Ljava/lang/String;Z)Lkotlin/reflect/KFunction;
	public final fun find (Ljava/util/Collection;Ljava/lang/String;Z)Lkotlin/reflect/KProperty;
	public final fun find (Ljava/util/Collection;Ljava/lang/String;ZLkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun find ([Ljava/lang/Object;Ljava/lang/String;ZLkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun find ([Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
	public final fun find ([Lkotlin/reflect/KFunction;Ljava/lang/String;Z)Lkotlin/reflect/KFunction;
	public final fun find ([Lkotlin/reflect/KProperty;Ljava/lang/String;Z)Lkotlin/reflect/KProperty;
	public static synthetic fun find$default (Ldev/racci/minix/api/utils/collections/CollectionUtils;Ljava/util/Collection;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;
	public static synthetic fun find$default (Ldev/racci/minix/api/utils/collections/CollectionUtils;Ljava/util/Collection;Ljava/lang/String;ZILjava/lang/Object;)Lkotlin/reflect/KFunction;
	public static synthetic fun find$default (Ldev/racci/minix/api/utils/collections/CollectionUtils;Ljava/util/Collection;Ljava/lang/String;ZILjava/lang/Object;)Lkotlin/reflect/KProperty;
	public static synthetic fun find$default (Ldev/racci/minix/api/utils/collections/CollectionUtils;Ljava/util/Collection;Ljava/lang/String;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun find$default (Ldev/racci/minix/api/utils/collections/CollectionUtils;[Ljava/lang/Object;Ljava/lang/String;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun find$default (Ldev/racci/minix/api/utils/collections/CollectionUtils;[Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;
	public static synthetic fun find$default (Ldev/racci/minix/api/utils/collections/CollectionUtils;[Lkotlin/reflect/KFunction;Ljava/lang/String;ZILjava/lang/Object;)Lkotlin/reflect/KFunction;
	public static synthetic fun find$default (Ldev/racci/minix/api/utils/collections/CollectionUtils;[Lkotlin/reflect/KProperty;Ljava/lang/String;ZILjava/lang/Object;)Lkotlin/reflect/KProperty;
	public final fun first (Ljava/util/Collection;Ljava/lang/String;Z)Ljava/lang/String;
	public final fun first (Ljava/util/Collection;Ljava/lang/String;Z)Lkotlin/reflect/KFunction;
	public final fun first (Ljava/util/Collection;Ljava/lang/String;Z)Lkotlin/reflect/KProperty1;
	public final fun first (Ljava/util/Collection;Ljava/lang/String;Z)Lkotlin/reflect/KProperty;
	public final fun first (Ljava/util/Collection;Ljava/lang/String;ZLkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static synthetic fun first$default (Ldev/racci/minix/api/utils/collections/CollectionUtils;Ljava/util/Collection;Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;
	public static synthetic fun first$default (Ldev/racci/minix/api/utils/collections/CollectionUtils;Ljava/util/Collection;Ljava/lang/String;ZILjava/lang/Object;)Lkotlin/reflect/KFunction;
	public static synthetic fun first$default (Ldev/racci/minix/api/utils/collections/CollectionUtils;Ljava/util/Collection;Ljava/lang/String;ZILjava/lang/Object;)Lkotlin/reflect/KProperty1;
	public static synthetic fun first$default (Ldev/racci/minix/api/utils/collections/CollectionUtils;Ljava/util/Collection;Ljava/lang/String;ZILjava/lang/Object;)Lkotlin/reflect/KProperty;
	public static synthetic fun first$default (Ldev/racci/minix/api/utils/collections/CollectionUtils;Ljava/util/Collection;Ljava/lang/String;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun get (Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun getCast (Ljava/util/Collection;I)Ljava/lang/Object;
	public final fun getCast ([Ljava/lang/Object;I)Ljava/lang/Object;
	public final fun getIgnoreCase (Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object;
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/Minix;
	public synthetic fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/utils/collections/CollectionUtils$Contains {
	public static final field INSTANCE Ldev/racci/minix/api/utils/collections/CollectionUtils$Contains;
	public final fun containsStringArray ([Ljava/lang/String;Ljava/lang/String;Z)Z
	public final fun containsStringCollection (Ljava/util/Collection;Ljava/lang/String;Z)Z
}

public final class dev/racci/minix/api/utils/collections/CollectionUtils$Find {
	public static final field INSTANCE Ldev/racci/minix/api/utils/collections/CollectionUtils$Find;
	public final fun findKCallableArray ([Lkotlin/reflect/KCallable;Ljava/lang/String;Z)Larrow/core/Option;
	public final fun findKCallableCollection (Ljava/util/Collection;Ljava/lang/String;Z)Larrow/core/Option;
}

public final class dev/racci/minix/api/utils/collections/CollectionUtils$Get {
	public static final field INSTANCE Ldev/racci/minix/api/utils/collections/CollectionUtils$Get;
	public final fun getCastArray ([Ljava/lang/Object;I)Larrow/core/Validated;
	public final fun getCastCollection (Ljava/util/Collection;I)Larrow/core/Validated;
}

public final class dev/racci/minix/api/utils/collections/CollectionUtils$If {
	public static final field INSTANCE Ldev/racci/minix/api/utils/collections/CollectionUtils$If;
	public final fun ifEmptyArray ([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun ifEmptyCollection (Ljava/util/Collection;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun ifNotEmptyArray ([Ljava/lang/Object;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun ifNotEmptyCollection (Ljava/util/Collection;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/utils/collections/CollectionUtils$Mutate {
	public static final field INSTANCE Ldev/racci/minix/api/utils/collections/CollectionUtils$Mutate;
	public final fun clearCollection (Ljava/util/Collection;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/utils/collections/CollectionUtils$sam$i$com_github_benmanes_caffeine_cache_CacheLoader$0 : com/github/benmanes/caffeine/cache/CacheLoader {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final synthetic fun load (Ljava/lang/Object;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/utils/collections/CollectionUtils$sam$i$com_github_benmanes_caffeine_cache_RemovalListener$0 : com/github/benmanes/caffeine/cache/RemovalListener {
	public fun <init> (Lkotlin/jvm/functions/Function3;)V
	public final synthetic fun onRemoval (Ljava/lang/Object;Ljava/lang/Object;Lcom/github/benmanes/caffeine/cache/RemovalCause;)V
}

public abstract interface class dev/racci/minix/api/utils/collections/ExpirationList : java/lang/Iterable, kotlin/jvm/internal/markers/KMutableIterable {
	public abstract fun add (Ljava/lang/Object;ILkotlin/jvm/functions/Function1;)V
	public abstract fun addFirst (Ljava/lang/Object;ILkotlin/jvm/functions/Function1;)V
	public abstract fun clear ()V
	public abstract fun contains (Ljava/lang/Object;)Z
	public abstract fun first ()Ljava/lang/Object;
	public abstract fun get (I)Ljava/lang/Object;
	public abstract fun getSize ()I
	public abstract fun indexOf (Ljava/lang/Object;)I
	public abstract fun isEmpty ()Z
	public abstract fun last ()Ljava/lang/Object;
	public abstract fun missingTime (Ljava/lang/Object;)Ljava/lang/Integer;
	public abstract fun remove (Ljava/lang/Object;)Z
	public abstract fun removeAt (I)Ljava/lang/Object;
	public abstract fun removeFirst ()Ljava/lang/Object;
	public abstract fun removeLast ()Ljava/lang/Object;
}

public final class dev/racci/minix/api/utils/collections/ExpirationList$DefaultImpls {
	public static synthetic fun add$default (Ldev/racci/minix/api/utils/collections/ExpirationList;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static synthetic fun addFirst$default (Ldev/racci/minix/api/utils/collections/ExpirationList;Ljava/lang/Object;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
}

public final class dev/racci/minix/api/utils/collections/ExpirationListImpl : dev/racci/minix/api/utils/collections/ExpirationList {
	public fun <init> (Ldev/racci/minix/api/plugin/MinixPlugin;)V
	public fun add (Ljava/lang/Object;ILkotlin/jvm/functions/Function1;)V
	public fun addFirst (Ljava/lang/Object;ILkotlin/jvm/functions/Function1;)V
	public fun clear ()V
	public fun contains (Ljava/lang/Object;)Z
	public fun first ()Ljava/lang/Object;
	public fun get (I)Ljava/lang/Object;
	public fun getSize ()I
	public fun indexOf (Ljava/lang/Object;)I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun last ()Ljava/lang/Object;
	public fun missingTime (Ljava/lang/Object;)Ljava/lang/Integer;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAt (I)Ljava/lang/Object;
	public fun removeFirst ()Ljava/lang/Object;
	public fun removeLast ()Ljava/lang/Object;
}

public final class dev/racci/minix/api/utils/collections/ExpirationListKt {
	public static final fun expirationListOf (ILdev/racci/minix/api/plugin/MinixPlugin;[Lkotlin/Pair;)Ldev/racci/minix/api/utils/collections/ExpirationList;
	public static final fun expirationListOf (Ldev/racci/minix/api/extensions/WithPlugin;)Ldev/racci/minix/api/utils/collections/ExpirationList;
	public static final fun expirationListOf (Ldev/racci/minix/api/extensions/WithPlugin;I[Lkotlin/Pair;)Ldev/racci/minix/api/utils/collections/ExpirationList;
	public static final fun expirationListOf (Ldev/racci/minix/api/plugin/MinixPlugin;)Ldev/racci/minix/api/utils/collections/ExpirationList;
	public static final fun expirationListOf (Ldev/racci/minix/api/plugin/MinixPlugin;I[Lkotlin/Pair;)Ldev/racci/minix/api/utils/collections/ExpirationList;
}

public abstract interface class dev/racci/minix/api/utils/collections/ExpirationMap : dev/racci/minix/api/extensions/WithPlugin, java/util/Map, kotlin/jvm/internal/markers/KMutableMap {
	public abstract fun expire (Ljava/lang/Object;J)Z
	public abstract fun expire (Ljava/lang/Object;JLkotlin/jvm/functions/Function2;)Z
	public abstract fun missingTime (Ljava/lang/Object;)Ljava/lang/Long;
	public abstract fun put (Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;
	public abstract fun put (Ljava/lang/Object;Ljava/lang/Object;JLkotlin/jvm/functions/Function2;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/utils/collections/ExpirationMap$DefaultImpls {
	public static fun async (Ldev/racci/minix/api/utils/collections/ExpirationMap;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static fun completableAsync (Ldev/racci/minix/api/utils/collections/ExpirationMap;Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public static fun completableSync (Ldev/racci/minix/api/utils/collections/ExpirationMap;Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public static fun deferredAsync (Ldev/racci/minix/api/utils/collections/ExpirationMap;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public static fun deferredSync (Ldev/racci/minix/api/utils/collections/ExpirationMap;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public static fun deleteProperty (Ldev/racci/minix/api/utils/collections/ExpirationMap;Ljava/lang/String;)V
	public static fun getKoin (Ldev/racci/minix/api/utils/collections/ExpirationMap;)Lorg/koin/core/Koin;
	public static fun getLogger (Ldev/racci/minix/api/utils/collections/ExpirationMap;)Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public static fun getProperty (Ldev/racci/minix/api/utils/collections/ExpirationMap;Ljava/lang/String;)Ljava/lang/Object;
	public static fun getProperty (Ldev/racci/minix/api/utils/collections/ExpirationMap;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun launch (Ldev/racci/minix/api/utils/collections/ExpirationMap;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static fun registerEvents (Ldev/racci/minix/api/utils/collections/ExpirationMap;[Lorg/bukkit/event/Listener;)V
	public static fun setProperty (Ldev/racci/minix/api/utils/collections/ExpirationMap;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun sync (Ldev/racci/minix/api/utils/collections/ExpirationMap;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/utils/collections/ExpirationMapImpl : dev/racci/minix/api/utils/collections/ExpirationMap, java/util/Map, kotlin/jvm/internal/markers/KMutableMap {
	public fun <init> (Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/util/Map;)V
	public synthetic fun <init> (Ldev/racci/minix/api/plugin/MinixPlugin;Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun clear ()V
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun containsKey (Ljava/lang/Object;)Z
	public fun containsValue (Ljava/lang/Object;)Z
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public final fun entrySet ()Ljava/util/Set;
	public fun expire (Ljava/lang/Object;J)Z
	public fun expire (Ljava/lang/Object;JLkotlin/jvm/functions/Function2;)Z
	public fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun getEntries ()Ljava/util/Set;
	public final fun getInitialMap ()Ljava/util/Map;
	public fun getKeys ()Ljava/util/Set;
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getSize ()I
	public fun getValues ()Ljava/util/Collection;
	public fun isEmpty ()Z
	public final fun keySet ()Ljava/util/Set;
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun missingTime (Ljava/lang/Object;)Ljava/lang/Long;
	public fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun put (Ljava/lang/Object;Ljava/lang/Object;J)Ljava/lang/Object;
	public fun put (Ljava/lang/Object;Ljava/lang/Object;JLkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public fun putAll (Ljava/util/Map;)V
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun size ()I
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public final fun values ()Ljava/util/Collection;
}

public final class dev/racci/minix/api/utils/collections/ExpirationMapKt {
	public static final fun expirationMapOf (JLdev/racci/minix/api/plugin/MinixPlugin;[Lkotlin/Pair;)Ldev/racci/minix/api/utils/collections/ExpirationMap;
	public static final fun expirationMapOf (JLdev/racci/minix/api/plugin/MinixPlugin;[Lkotlin/Triple;)Ldev/racci/minix/api/utils/collections/ExpirationMap;
	public static final fun expirationMapOf (Ldev/racci/minix/api/extensions/WithPlugin;)Ldev/racci/minix/api/utils/collections/ExpirationMap;
	public static final fun expirationMapOf (Ldev/racci/minix/api/extensions/WithPlugin;J[Lkotlin/Pair;)Ldev/racci/minix/api/utils/collections/ExpirationMap;
	public static final fun expirationMapOf (Ldev/racci/minix/api/extensions/WithPlugin;J[Lkotlin/Triple;)Ldev/racci/minix/api/utils/collections/ExpirationMap;
	public static final fun expirationMapOf (Ldev/racci/minix/api/plugin/MinixPlugin;)Ldev/racci/minix/api/utils/collections/ExpirationMap;
	public static final fun expirationMapOf (Ldev/racci/minix/api/plugin/MinixPlugin;J[Lkotlin/Pair;)Ldev/racci/minix/api/utils/collections/ExpirationMap;
	public static final fun expirationMapOf (Ldev/racci/minix/api/plugin/MinixPlugin;J[Lkotlin/Triple;)Ldev/racci/minix/api/utils/collections/ExpirationMap;
}

public final class dev/racci/minix/api/utils/collections/MapUtils {
	public static final field INSTANCE Ldev/racci/minix/api/utils/collections/MapUtils;
	public final fun clear (Ljava/util/Map;Lkotlin/jvm/functions/Function3;)V
	public final fun computeAndRemove (Ljava/util/Map;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Z
	public final fun containsKeyIgnoreCase (Ljava/util/Map;Ljava/lang/String;Z)Z
	public final fun getValueIgnoreCase (Ljava/util/Map;Ljava/lang/String;Z)Larrow/core/Option;
}

public final class dev/racci/minix/api/utils/collections/MapUtils$sam$i$java_util_function_BiFunction$0 : java/util/function/BiFunction {
	public fun <init> (Lkotlin/jvm/functions/Function2;)V
	public final synthetic fun apply (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/utils/collections/MultiMapKt {
	public static final fun emptyMultiMap ()Ldev/racci/minix/api/utils/collections/muiltimap/MultiMap;
	public static final fun multiMapOf ([Lkotlin/Pair;)Ldev/racci/minix/api/utils/collections/muiltimap/MutableMultiMap;
}

public final class dev/racci/minix/api/utils/collections/ObservableAction : java/lang/Enum {
	public static final field ADD Ldev/racci/minix/api/utils/collections/ObservableAction;
	public static final field ADD_ALL Ldev/racci/minix/api/utils/collections/ObservableAction;
	public static final field CLEAR Ldev/racci/minix/api/utils/collections/ObservableAction;
	public static final field REMOVE Ldev/racci/minix/api/utils/collections/ObservableAction;
	public static final field REMOVE_ALL Ldev/racci/minix/api/utils/collections/ObservableAction;
	public static final field REPLACE Ldev/racci/minix/api/utils/collections/ObservableAction;
	public static final field SET Ldev/racci/minix/api/utils/collections/ObservableAction;
	public static fun valueOf (Ljava/lang/String;)Ldev/racci/minix/api/utils/collections/ObservableAction;
	public static fun values ()[Ldev/racci/minix/api/utils/collections/ObservableAction;
}

public abstract class dev/racci/minix/api/utils/collections/ObservableCollection : dev/racci/minix/api/utils/collections/ObservableHolder, java/util/Collection, kotlin/jvm/internal/markers/KMutableCollection {
	public fun <init> ()V
	public abstract fun getSize ()I
	public final fun size ()I
	public fun toArray ()[Ljava/lang/Object;
	public fun toArray ([Ljava/lang/Object;)[Ljava/lang/Object;
}

public final class dev/racci/minix/api/utils/collections/ObservableCollectionsKt {
	public static final fun asObservable (Ljava/util/List;)Ldev/racci/minix/api/utils/collections/ObservableList;
	public static final fun asObservable (Ljava/util/Map;)Ldev/racci/minix/api/utils/collections/ObservableMap;
	public static final fun asObservable (Ljava/util/Set;)Ldev/racci/minix/api/utils/collections/ObservableSet;
	public static final fun observableListOf (Ljava/util/List;)Ldev/racci/minix/api/utils/collections/ObservableList;
	public static final fun observableListOf ([Ljava/lang/Object;)Ldev/racci/minix/api/utils/collections/ObservableList;
	public static final fun observableMapOf (Ljava/util/Map;)Ldev/racci/minix/api/utils/collections/ObservableMap;
	public static final fun observableMapOf ([Lkotlin/Pair;)Ldev/racci/minix/api/utils/collections/ObservableMap;
	public static final fun observableSetOf (Ljava/util/Set;)Ldev/racci/minix/api/utils/collections/ObservableSet;
	public static final fun observableSetOf ([Ljava/lang/Object;)Ldev/racci/minix/api/utils/collections/ObservableSet;
}

public abstract class dev/racci/minix/api/utils/collections/ObservableHolder {
	public fun <init> ()V
	public abstract fun getListeners ()Ldev/racci/minix/api/utils/collections/muiltimap/MutableMultiMap;
}

public final class dev/racci/minix/api/utils/collections/ObservableList : dev/racci/minix/api/utils/collections/ObservableCollection, java/util/List, kotlin/jvm/internal/markers/KMutableList {
	public fun add (ILjava/lang/Object;)V
	public fun add (Ljava/lang/Object;)Z
	public fun addAll (ILjava/util/Collection;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public final fun addAll ([Ljava/lang/Object;)Z
	public fun clear ()V
	public fun contains (Ljava/lang/Object;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public fun get (I)Ljava/lang/Object;
	public fun getListeners ()Ldev/racci/minix/api/utils/collections/muiltimap/MutableMultiMap;
	public fun getSize ()I
	public fun indexOf (Ljava/lang/Object;)I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun lastIndexOf (Ljava/lang/Object;)I
	public fun listIterator ()Ljava/util/ListIterator;
	public fun listIterator (I)Ljava/util/ListIterator;
	public final fun remove (I)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun removeAt (I)Ljava/lang/Object;
	public fun retainAll (Ljava/util/Collection;)Z
	public fun set (ILjava/lang/Object;)Ljava/lang/Object;
	public fun subList (II)Ljava/util/List;
}

public final class dev/racci/minix/api/utils/collections/ObservableMap : dev/racci/minix/api/utils/collections/ObservableHolder, java/util/Map, kotlin/jvm/internal/markers/KMutableMap {
	public fun clear ()V
	public fun containsKey (Ljava/lang/Object;)Z
	public fun containsValue (Ljava/lang/Object;)Z
	public final fun entrySet ()Ljava/util/Set;
	public fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun getEntries ()Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public fun getListeners ()Ldev/racci/minix/api/utils/collections/muiltimap/MutableMultiMap;
	public fun getSize ()I
	public fun getValues ()Ljava/util/Collection;
	public fun isEmpty ()Z
	public final fun keySet ()Ljava/util/Set;
	public fun put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun putAll (Ljava/util/Map;)V
	public fun putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public fun remove (Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun replace (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun replace (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
	public final fun size ()I
	public final fun values ()Ljava/util/Collection;
}

public final class dev/racci/minix/api/utils/collections/ObservableMutableIterator : java/util/Iterator, kotlin/jvm/internal/markers/KMutableIterator {
	public fun <init> (Ljava/util/Iterator;Lkotlin/jvm/functions/Function2;)V
	public fun hasNext ()Z
	public fun next ()Ljava/lang/Object;
	public fun remove ()V
}

public final class dev/racci/minix/api/utils/collections/ObservableMutableListIterator : java/util/ListIterator, kotlin/jvm/internal/markers/KMutableListIterator {
	public fun <init> (Ljava/util/ListIterator;Lkotlin/jvm/functions/Function2;)V
	public fun add (Ljava/lang/Object;)V
	public fun hasNext ()Z
	public fun hasPrevious ()Z
	public fun next ()Ljava/lang/Object;
	public fun nextIndex ()I
	public fun previous ()Ljava/lang/Object;
	public fun previousIndex ()I
	public fun remove ()V
	public fun set (Ljava/lang/Object;)V
}

public final class dev/racci/minix/api/utils/collections/ObservableSet : dev/racci/minix/api/utils/collections/ObservableCollection, java/util/Set, kotlin/jvm/internal/markers/KMutableSet {
	public fun add (Ljava/lang/Object;)Z
	public fun addAll (Ljava/util/Collection;)Z
	public fun clear ()V
	public fun contains (Ljava/lang/Object;)Z
	public fun containsAll (Ljava/util/Collection;)Z
	public fun getListeners ()Ldev/racci/minix/api/utils/collections/muiltimap/MutableMultiMap;
	public fun getSize ()I
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
	public fun remove (Ljava/lang/Object;)Z
	public fun removeAll (Ljava/util/Collection;)Z
	public fun retainAll (Ljava/util/Collection;)Z
}

public abstract interface class dev/racci/minix/api/utils/collections/OnlinePlayerCollection : dev/racci/minix/api/extensions/KListener, java/util/Collection, kotlin/jvm/internal/markers/KMutableCollection {
	public abstract fun add (Lorg/bukkit/entity/Player;Lkotlin/jvm/functions/Function1;)Z
	public abstract fun checkRegistration ()V
	public abstract fun clearQuiting ()V
	public abstract fun quit (Lorg/bukkit/entity/Player;)Z
}

public final class dev/racci/minix/api/utils/collections/OnlinePlayerCollection$DefaultImpls {
	public static fun add (Ldev/racci/minix/api/utils/collections/OnlinePlayerCollection;Lorg/bukkit/entity/Player;Lkotlin/jvm/functions/Function1;)Z
	public static fun async (Ldev/racci/minix/api/utils/collections/OnlinePlayerCollection;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static fun checkRegistration (Ldev/racci/minix/api/utils/collections/OnlinePlayerCollection;)V
	public static fun clearQuiting (Ldev/racci/minix/api/utils/collections/OnlinePlayerCollection;)V
	public static fun completableAsync (Ldev/racci/minix/api/utils/collections/OnlinePlayerCollection;Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public static fun completableSync (Ldev/racci/minix/api/utils/collections/OnlinePlayerCollection;Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public static fun deferredAsync (Ldev/racci/minix/api/utils/collections/OnlinePlayerCollection;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public static fun deferredSync (Ldev/racci/minix/api/utils/collections/OnlinePlayerCollection;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public static fun deleteProperty (Ldev/racci/minix/api/utils/collections/OnlinePlayerCollection;Ljava/lang/String;)V
	public static fun getKoin (Ldev/racci/minix/api/utils/collections/OnlinePlayerCollection;)Lorg/koin/core/Koin;
	public static fun getLogger (Ldev/racci/minix/api/utils/collections/OnlinePlayerCollection;)Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public static fun getProperty (Ldev/racci/minix/api/utils/collections/OnlinePlayerCollection;Ljava/lang/String;)Ljava/lang/Object;
	public static fun getProperty (Ldev/racci/minix/api/utils/collections/OnlinePlayerCollection;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun launch (Ldev/racci/minix/api/utils/collections/OnlinePlayerCollection;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public static fun quit (Ldev/racci/minix/api/utils/collections/OnlinePlayerCollection;Lorg/bukkit/entity/Player;)Z
	public static fun registerEvents (Ldev/racci/minix/api/utils/collections/OnlinePlayerCollection;[Lorg/bukkit/event/Listener;)V
	public static fun setProperty (Ldev/racci/minix/api/utils/collections/OnlinePlayerCollection;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun sync (Ldev/racci/minix/api/utils/collections/OnlinePlayerCollection;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/utils/collections/OnlinePlayerCollectionsKt {
	public static final fun onlinePlayerListOf (Ldev/racci/minix/api/extensions/WithPlugin;)Ldev/racci/minix/api/utils/collections/OnlinePlayerList;
	public static final fun onlinePlayerListOf (Ldev/racci/minix/api/extensions/WithPlugin;[Lkotlin/Pair;)Ldev/racci/minix/api/utils/collections/OnlinePlayerList;
	public static final fun onlinePlayerListOf (Ldev/racci/minix/api/extensions/WithPlugin;[Lorg/bukkit/entity/Player;)Ldev/racci/minix/api/utils/collections/OnlinePlayerList;
	public static final fun onlinePlayerListOf (Ldev/racci/minix/api/plugin/MinixPlugin;)Ldev/racci/minix/api/utils/collections/OnlinePlayerList;
	public static final fun onlinePlayerListOf (Ldev/racci/minix/api/plugin/MinixPlugin;[Lkotlin/Pair;)Ldev/racci/minix/api/utils/collections/OnlinePlayerList;
	public static final fun onlinePlayerListOf (Ldev/racci/minix/api/plugin/MinixPlugin;[Lorg/bukkit/entity/Player;)Ldev/racci/minix/api/utils/collections/OnlinePlayerList;
	public static final fun onlinePlayerListOf ([Lkotlin/Pair;Ldev/racci/minix/api/plugin/MinixPlugin;)Ldev/racci/minix/api/utils/collections/OnlinePlayerList;
	public static final fun onlinePlayerListOf ([Lorg/bukkit/entity/Player;Ldev/racci/minix/api/plugin/MinixPlugin;)Ldev/racci/minix/api/utils/collections/OnlinePlayerList;
	public static final fun onlinePlayerMapOf (Ldev/racci/minix/api/extensions/WithPlugin;)Ldev/racci/minix/api/utils/collections/OnlinePlayerMap;
	public static final fun onlinePlayerMapOf (Ldev/racci/minix/api/extensions/WithPlugin;[Lkotlin/Pair;)Ldev/racci/minix/api/utils/collections/OnlinePlayerMap;
	public static final fun onlinePlayerMapOf (Ldev/racci/minix/api/extensions/WithPlugin;[Lkotlin/Triple;)Ldev/racci/minix/api/utils/collections/OnlinePlayerMap;
	public static final fun onlinePlayerMapOf (Ldev/racci/minix/api/plugin/MinixPlugin;)Ldev/racci/minix/api/utils/collections/OnlinePlayerMap;
	public static final fun onlinePlayerMapOf (Ldev/racci/minix/api/plugin/MinixPlugin;[Lkotlin/Pair;)Ldev/racci/minix/api/utils/collections/OnlinePlayerMap;
	public static final fun onlinePlayerMapOf (Ldev/racci/minix/api/plugin/MinixPlugin;[Lkotlin/Triple;)Ldev/racci/minix/api/utils/collections/OnlinePlayerMap;
	public static final fun onlinePlayerMapOf ([Lkotlin/Pair;Ldev/racci/minix/api/plugin/MinixPlugin;)Ldev/racci/minix/api/utils/collections/OnlinePlayerMap;
	public static final fun onlinePlayerMapOf ([Lkotlin/Triple;Ldev/racci/minix/api/plugin/MinixPlugin;)Ldev/racci/minix/api/utils/collections/OnlinePlayerMap;
	public static final fun onlinePlayerSetOf (Ldev/racci/minix/api/extensions/WithPlugin;)Ldev/racci/minix/api/utils/collections/OnlinePlayerSet;
	public static final fun onlinePlayerSetOf (Ldev/racci/minix/api/extensions/WithPlugin;[Lkotlin/Pair;)Ldev/racci/minix/api/utils/collections/OnlinePlayerSet;
	public static final fun onlinePlayerSetOf (Ldev/racci/minix/api/extensions/WithPlugin;[Lorg/bukkit/entity/Player;)Ldev/racci/minix/api/utils/collections/OnlinePlayerSet;
	public static final fun onlinePlayerSetOf (Ldev/racci/minix/api/plugin/MinixPlugin;)Ldev/racci/minix/api/utils/collections/OnlinePlayerSet;
	public static final fun onlinePlayerSetOf (Ldev/racci/minix/api/plugin/MinixPlugin;[Lkotlin/Pair;)Ldev/racci/minix/api/utils/collections/OnlinePlayerSet;
	public static final fun onlinePlayerSetOf (Ldev/racci/minix/api/plugin/MinixPlugin;[Lorg/bukkit/entity/Player;)Ldev/racci/minix/api/utils/collections/OnlinePlayerSet;
	public static final fun onlinePlayerSetOf ([Lkotlin/Pair;Ldev/racci/minix/api/plugin/MinixPlugin;)Ldev/racci/minix/api/utils/collections/OnlinePlayerSet;
	public static final fun onlinePlayerSetOf ([Lorg/bukkit/entity/Player;Ldev/racci/minix/api/plugin/MinixPlugin;)Ldev/racci/minix/api/utils/collections/OnlinePlayerSet;
}

public final class dev/racci/minix/api/utils/collections/OnlinePlayerList : java/util/LinkedList, dev/racci/minix/api/utils/collections/OnlinePlayerCollection {
	public fun <init> (Ldev/racci/minix/api/plugin/MinixPlugin;)V
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun add (Lorg/bukkit/entity/Player;)Z
	public fun add (Lorg/bukkit/entity/Player;Lkotlin/jvm/functions/Function1;)Z
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun checkRegistration ()V
	public fun clearQuiting ()V
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public final fun contains (Ljava/lang/Object;)Z
	public fun contains (Lorg/bukkit/entity/Player;)Z
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getSize ()I
	public final fun indexOf (Ljava/lang/Object;)I
	public fun indexOf (Lorg/bukkit/entity/Player;)I
	public final fun lastIndexOf (Ljava/lang/Object;)I
	public fun lastIndexOf (Lorg/bukkit/entity/Player;)I
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun quit (Lorg/bukkit/entity/Player;)Z
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public synthetic fun remove (I)Ljava/lang/Object;
	public final fun remove (I)Lorg/bukkit/entity/Player;
	public final fun remove (Ljava/lang/Object;)Z
	public fun remove (Lorg/bukkit/entity/Player;)Z
	public fun removeAt (I)Lorg/bukkit/entity/Player;
	public synthetic fun removeFirst ()Ljava/lang/Object;
	public fun removeFirst ()Lorg/bukkit/entity/Player;
	public synthetic fun removeLast ()Ljava/lang/Object;
	public fun removeLast ()Lorg/bukkit/entity/Player;
	public fun removeLastOccurrence (Ljava/lang/Object;)Z
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun size ()I
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/utils/collections/OnlinePlayerMap : java/util/HashMap, dev/racci/minix/api/extensions/KListener {
	public fun <init> (Ldev/racci/minix/api/plugin/MinixPlugin;)V
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public final fun clearQuiting ()V
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public final fun containsKey (Ljava/lang/Object;)Z
	public fun containsKey (Lorg/bukkit/entity/Player;)Z
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public final fun entrySet ()Ljava/util/Set;
	public final fun get (Ljava/lang/Object;)Ljava/lang/Object;
	public fun get (Lorg/bukkit/entity/Player;)Ljava/lang/Object;
	public fun getEntries ()Ljava/util/Set;
	public fun getKeys ()Ljava/util/Set;
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public final fun getOrDefault (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getOrDefault (Lorg/bukkit/entity/Player;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getSize ()I
	public fun getValues ()Ljava/util/Collection;
	public final fun keySet ()Ljava/util/Set;
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public final fun put (Lorg/bukkit/entity/Player;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public final fun quit (Lorg/bukkit/entity/Player;)V
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public final fun remove (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun remove (Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun remove (Lorg/bukkit/entity/Player;)Ljava/lang/Object;
	public fun remove (Lorg/bukkit/entity/Player;Ljava/lang/Object;)Z
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun size ()I
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public final fun values ()Ljava/util/Collection;
}

public final class dev/racci/minix/api/utils/collections/OnlinePlayerSet : java/util/HashSet, dev/racci/minix/api/utils/collections/OnlinePlayerCollection {
	public fun <init> (Ldev/racci/minix/api/plugin/MinixPlugin;)V
	public synthetic fun add (Ljava/lang/Object;)Z
	public fun add (Lorg/bukkit/entity/Player;)Z
	public fun add (Lorg/bukkit/entity/Player;Lkotlin/jvm/functions/Function1;)Z
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun checkRegistration ()V
	public fun clearQuiting ()V
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public final fun contains (Ljava/lang/Object;)Z
	public fun contains (Lorg/bukkit/entity/Player;)Z
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun getSize ()I
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun quit (Lorg/bukkit/entity/Player;)Z
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public final fun remove (Ljava/lang/Object;)Z
	public fun remove (Lorg/bukkit/entity/Player;)Z
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun size ()I
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/utils/collections/muiltimap/EmptyMultiMap : dev/racci/minix/api/utils/collections/muiltimap/MultiMap {
	public static final field INSTANCE Ldev/racci/minix/api/utils/collections/muiltimap/EmptyMultiMap;
	public fun containsKey (Ljava/lang/Object;)Z
	public fun equals (Ljava/lang/Object;)Z
	public fun forEach (Lkotlin/jvm/functions/Function2;)V
	public fun forEachIndexed (Lkotlin/jvm/functions/Function3;)V
	public fun get (Ljava/lang/Object;)Ljava/util/Collection;
	public fun getEntries ()Lkotlinx/collections/immutable/ImmutableSet;
	public fun getKeys ()Lkotlinx/collections/immutable/ImmutableSet;
	public fun getSize ()I
	public fun getValues ()Lkotlinx/collections/immutable/ImmutableSet;
	public fun hashCode ()I
	public fun isEmpty ()Z
	public fun size ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class dev/racci/minix/api/utils/collections/muiltimap/MultiMap {
	public abstract fun containsKey (Ljava/lang/Object;)Z
	public abstract fun forEach (Lkotlin/jvm/functions/Function2;)V
	public abstract fun forEachIndexed (Lkotlin/jvm/functions/Function3;)V
	public abstract fun get (Ljava/lang/Object;)Ljava/util/Collection;
	public abstract fun getEntries ()Lkotlinx/collections/immutable/ImmutableSet;
	public abstract fun getKeys ()Lkotlinx/collections/immutable/ImmutableSet;
	public abstract fun getSize ()I
	public abstract fun getValues ()Lkotlinx/collections/immutable/ImmutableSet;
	public abstract fun isEmpty ()Z
	public abstract fun size ()I
}

public final class dev/racci/minix/api/utils/collections/muiltimap/MutableMultiMap : dev/racci/minix/api/utils/collections/muiltimap/MultiMap {
	public static final field Companion Ldev/racci/minix/api/utils/collections/muiltimap/MutableMultiMap$Companion;
	public synthetic fun <init> (ILjava/util/Map;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V
	public final fun addAll (Ljava/lang/Object;[Ljava/lang/Object;)V
	public final fun clear ()V
	public final fun clear (Lkotlin/jvm/functions/Function2;)V
	public fun containsKey (Ljava/lang/Object;)Z
	public fun forEach (Lkotlin/jvm/functions/Function2;)V
	public fun forEachIndexed (Lkotlin/jvm/functions/Function3;)V
	public fun get (Ljava/lang/Object;)Ljava/util/Collection;
	public fun getEntries ()Lkotlinx/collections/immutable/ImmutableSet;
	public fun getKeys ()Lkotlinx/collections/immutable/ImmutableSet;
	public fun getSize ()I
	public fun getValues ()Lkotlinx/collections/immutable/ImmutableSet;
	public fun isEmpty ()Z
	public final fun minusAssign (Ljava/lang/Object;)V
	public final fun minusAssign (Lkotlin/Pair;)V
	public final fun plusAssign (Lkotlin/Pair;)V
	public final fun put (Ljava/lang/Object;Ljava/lang/Object;)V
	public final fun putIfAbsent (Ljava/lang/Object;Ljava/lang/Object;)V
	public final fun remove (Ljava/lang/Object;)Lkotlinx/collections/immutable/ImmutableSet;
	public final fun remove (Ljava/lang/Object;Ljava/lang/Object;)Z
	public final fun remove (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Z
	public final fun replace (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun size ()I
	public static final fun write$Self (Ldev/racci/minix/api/utils/collections/muiltimap/MutableMultiMap;Lkotlinx/serialization/encoding/CompositeEncoder;Lkotlinx/serialization/descriptors/SerialDescriptor;Lkotlinx/serialization/KSerializer;Lkotlinx/serialization/KSerializer;)V
}

public final class dev/racci/minix/api/utils/collections/muiltimap/MutableMultiMap$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public final synthetic field descriptor Lkotlinx/serialization/descriptors/SerialDescriptor;
	public synthetic fun <init> (Lkotlinx/serialization/KSerializer;Lkotlinx/serialization/KSerializer;)V
	public fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ldev/racci/minix/api/utils/collections/muiltimap/MutableMultiMap;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Ldev/racci/minix/api/utils/collections/muiltimap/MutableMultiMap;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
	public fun typeParametersSerializers ()[Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/utils/collections/muiltimap/MutableMultiMap$Companion {
	public final fun serializer (Lkotlinx/serialization/KSerializer;Lkotlinx/serialization/KSerializer;)Lkotlinx/serialization/KSerializer;
}

public final class dev/racci/minix/api/utils/data/Data : java/lang/Comparable {
	public static final field Companion Ldev/racci/minix/api/utils/data/Data$Companion;
	public fun <init> (J)V
	public fun compareTo (Ldev/racci/minix/api/utils/data/Data;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()J
	public final fun copy (J)Ldev/racci/minix/api/utils/data/Data;
	public static synthetic fun copy$default (Ldev/racci/minix/api/utils/data/Data;JILjava/lang/Object;)Ldev/racci/minix/api/utils/data/Data;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBytes ()J
	public final fun getGigabytes ()D
	public final fun getGigabytesRounded ()J
	public final fun getKilobytes ()D
	public final fun getKilobytesRounded ()J
	public final fun getMegabytes ()D
	public final fun getMegabytesRounded ()J
	public fun hashCode ()I
	public final fun humanReadableSize ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class dev/racci/minix/api/utils/data/Data$Companion : org/koin/core/component/KoinComponent {
	public final fun fromGigabytes (J)Ldev/racci/minix/api/utils/data/Data;
	public final fun fromKilobytes (J)Ldev/racci/minix/api/utils/data/Data;
	public final fun fromMegabytes (J)Ldev/racci/minix/api/utils/data/Data;
	public fun getKoin ()Lorg/koin/core/Koin;
}

public final class dev/racci/minix/api/utils/data/Data$Serializer : org/spongepowered/configurate/serialize/TypeSerializer {
	public static final field INSTANCE Ldev/racci/minix/api/utils/data/Data$Serializer;
	public fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ldev/racci/minix/api/utils/data/Data;
	public synthetic fun deserialize (Ljava/lang/reflect/Type;Lorg/spongepowered/configurate/ConfigurationNode;)Ljava/lang/Object;
	public fun serialize (Ljava/lang/reflect/Type;Ldev/racci/minix/api/utils/data/Data;Lorg/spongepowered/configurate/ConfigurationNode;)V
	public synthetic fun serialize (Ljava/lang/reflect/Type;Ljava/lang/Object;Lorg/spongepowered/configurate/ConfigurationNode;)V
}

public final class dev/racci/minix/api/utils/data/DataKt {
	public static final fun gigabytes (J)Ldev/racci/minix/api/utils/data/Data;
	public static final fun kilobytes (J)Ldev/racci/minix/api/utils/data/Data;
	public static final fun megabytes (J)Ldev/racci/minix/api/utils/data/Data;
}

public final class dev/racci/minix/api/utils/exposed/BlockExposedDelegate : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/bukkit/block/Block;
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/bukkit/block/Block;)V
}

public final class dev/racci/minix/api/utils/exposed/BlockExposedDelegateNullable : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/bukkit/block/Block;
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/bukkit/block/Block;)V
}

public final class dev/racci/minix/api/utils/exposed/BlockKt {
	public static final fun block (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/BlockExposedDelegate;
	public static final fun block (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/BlockExposedDelegateNullable;
	public static final fun block (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/BlockMultiColumnExposedDelegate;
	public static final fun nullableBlock (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/BlockMultiColumnExposedDelegateNullable;
}

public final class dev/racci/minix/api/utils/exposed/BlockMultiColumnExposedDelegate : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)V
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/bukkit/block/Block;
	public final fun getWorldColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getXColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getYColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getZColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/bukkit/block/Block;)V
}

public final class dev/racci/minix/api/utils/exposed/BlockMultiColumnExposedDelegateNullable : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)V
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/bukkit/block/Block;
	public final fun getWorldColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getXColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getYColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getZColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/bukkit/block/Block;)V
}

public final class dev/racci/minix/api/utils/exposed/BlockPosExposedDelegate : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getColumn ()Lorg/jetbrains/exposed/sql/Column;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ldev/racci/minix/api/utils/minecraft/BlockPos;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ldev/racci/minix/api/utils/minecraft/BlockPos;)V
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public final class dev/racci/minix/api/utils/exposed/BlockPosExposedDelegateNullable : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getColumn ()Lorg/jetbrains/exposed/sql/Column;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ldev/racci/minix/api/utils/minecraft/BlockPos;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ldev/racci/minix/api/utils/minecraft/BlockPos;)V
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public final class dev/racci/minix/api/utils/exposed/BlockPosKt {
	public static final fun blockPos (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/BlockPosExposedDelegate;
	public static final fun blockPos (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/BlockPosExposedDelegateNullable;
	public static final fun blockPos (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/BlockPosMultiColumnExposedDelegate;
	public static final fun nullableBlockPos (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/BlockPosMultiColumnExposedDelegateNullable;
}

public final class dev/racci/minix/api/utils/exposed/BlockPosMultiColumnExposedDelegate : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)V
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ldev/racci/minix/api/utils/minecraft/BlockPos;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public final fun getXColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getYColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getZColumn ()Lorg/jetbrains/exposed/sql/Column;
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ldev/racci/minix/api/utils/minecraft/BlockPos;)V
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public final class dev/racci/minix/api/utils/exposed/BlockPosMultiColumnExposedDelegateNullable : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)V
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ldev/racci/minix/api/utils/minecraft/BlockPos;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public final fun getXColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getYColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getZColumn ()Lorg/jetbrains/exposed/sql/Column;
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ldev/racci/minix/api/utils/minecraft/BlockPos;)V
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public final class dev/racci/minix/api/utils/exposed/CachedExposedDelegate : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Ldev/racci/minix/api/utils/exposed/ExposedDelegate;)V
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public final class dev/racci/minix/api/utils/exposed/CachedKt {
	public static final fun cached (Ldev/racci/minix/api/utils/exposed/ExposedDelegate;)Ldev/racci/minix/api/utils/exposed/CachedExposedDelegate;
}

public final class dev/racci/minix/api/utils/exposed/ChunkExposedDelegate : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/bukkit/Chunk;
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/bukkit/Chunk;)V
}

public final class dev/racci/minix/api/utils/exposed/ChunkExposedDelegateNullable : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/bukkit/Chunk;
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/bukkit/Chunk;)V
}

public final class dev/racci/minix/api/utils/exposed/ChunkKt {
	public static final fun chunk (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/ChunkExposedDelegate;
	public static final fun chunk (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/ChunkMultiColumnExposedDelegate;
	public static final fun chunk (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/ChunkMultiColumnExposedDelegateNullable;
	public static final fun nullableChunk (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/ChunkExposedDelegateNullable;
}

public final class dev/racci/minix/api/utils/exposed/ChunkMultiColumnExposedDelegate : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)V
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/bukkit/Chunk;
	public final fun getWorldColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getXColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getZColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/bukkit/Chunk;)V
}

public final class dev/racci/minix/api/utils/exposed/ChunkMultiColumnExposedDelegateNullable : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)V
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/bukkit/Chunk;
	public final fun getWorldColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getXColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getZColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/bukkit/Chunk;)V
}

public final class dev/racci/minix/api/utils/exposed/ChunkPosExposedDelegate : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getColumn ()Lorg/jetbrains/exposed/sql/Column;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ldev/racci/minix/api/utils/minecraft/ChunkPos;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ldev/racci/minix/api/utils/minecraft/ChunkPos;)V
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public final class dev/racci/minix/api/utils/exposed/ChunkPosExposedDelegateNullable : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getColumn ()Lorg/jetbrains/exposed/sql/Column;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ldev/racci/minix/api/utils/minecraft/ChunkPos;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ldev/racci/minix/api/utils/minecraft/ChunkPos;)V
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public final class dev/racci/minix/api/utils/exposed/ChunkPosKt {
	public static final fun chunkPos (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/ChunkPosExposedDelegate;
	public static final fun chunkPos (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/ChunkPosMultiColumnExposedDelegate;
	public static final fun chunkPos (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/ChunkPosMultiColumnExposedDelegateNullable;
	public static final fun nullableChunkPos (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/ChunkPosExposedDelegateNullable;
}

public final class dev/racci/minix/api/utils/exposed/ChunkPosMultiColumnExposedDelegate : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)V
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ldev/racci/minix/api/utils/minecraft/ChunkPos;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public final fun getXColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getZColumn ()Lorg/jetbrains/exposed/sql/Column;
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ldev/racci/minix/api/utils/minecraft/ChunkPos;)V
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public final class dev/racci/minix/api/utils/exposed/ChunkPosMultiColumnExposedDelegateNullable : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)V
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ldev/racci/minix/api/utils/minecraft/ChunkPos;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public final fun getXColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getZColumn ()Lorg/jetbrains/exposed/sql/Column;
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ldev/racci/minix/api/utils/minecraft/ChunkPos;)V
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public abstract interface class dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public abstract fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public abstract fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public final class dev/racci/minix/api/utils/exposed/ItemKt {
	public static final fun itemStack (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/ItemStackExposedDelegate;
	public static final fun nullableItemStack (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/ItemStackExposedDelegateNullable;
}

public final class dev/racci/minix/api/utils/exposed/ItemStackExposedDelegate : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/bukkit/inventory/ItemStack;
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/bukkit/inventory/ItemStack;)V
}

public final class dev/racci/minix/api/utils/exposed/ItemStackExposedDelegateNullable : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/bukkit/inventory/ItemStack;
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/bukkit/inventory/ItemStack;)V
}

public final class dev/racci/minix/api/utils/exposed/LocationExposedDelegate : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/bukkit/Location;
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/bukkit/Location;)V
}

public final class dev/racci/minix/api/utils/exposed/LocationExposedDelegateNullable : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/bukkit/Location;
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/bukkit/Location;)V
}

public final class dev/racci/minix/api/utils/exposed/LocationKt {
	public static final fun location (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/LocationExposedDelegate;
	public static final fun location (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/LocationExposedDelegateNullable;
	public static final fun location (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/LocationMultiColumnExposedDelegate;
	public static final fun nullableLocation (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/LocationMultiColumnExposedDelegateNullable;
}

public final class dev/racci/minix/api/utils/exposed/LocationMultiColumnExposedDelegate : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getPitchColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/bukkit/Location;
	public final fun getWorldColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getXColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getYColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getYawColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getZColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/bukkit/Location;)V
}

public final class dev/racci/minix/api/utils/exposed/LocationMultiColumnExposedDelegateNullable : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getPitchColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/bukkit/Location;
	public final fun getWorldColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getXColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getYColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getYawColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getZColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/bukkit/Location;)V
}

public final class dev/racci/minix/api/utils/exposed/LocationPosExposedDelegate : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getColumn ()Lorg/jetbrains/exposed/sql/Column;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ldev/racci/minix/api/utils/minecraft/LocationPos;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ldev/racci/minix/api/utils/minecraft/LocationPos;)V
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public final class dev/racci/minix/api/utils/exposed/LocationPosExposedDelegateNullable : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getColumn ()Lorg/jetbrains/exposed/sql/Column;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ldev/racci/minix/api/utils/minecraft/LocationPos;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ldev/racci/minix/api/utils/minecraft/LocationPos;)V
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public final class dev/racci/minix/api/utils/exposed/LocationPosKt {
	public static final fun locationPos (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/LocationPosExposedDelegate;
	public static final fun locationPos (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/LocationPosMultiColumnExposedDelegate;
	public static final fun locationPos (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/LocationPosMultiColumnExposedDelegateNullable;
	public static final fun nullableLocationPos (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/LocationPosExposedDelegateNullable;
}

public final class dev/racci/minix/api/utils/exposed/LocationPosMultiColumnExposedDelegate : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getPitchColumn ()Lorg/jetbrains/exposed/sql/Column;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ldev/racci/minix/api/utils/minecraft/LocationPos;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public final fun getXColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getYColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getYawColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getZColumn ()Lorg/jetbrains/exposed/sql/Column;
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ldev/racci/minix/api/utils/minecraft/LocationPos;)V
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public final class dev/racci/minix/api/utils/exposed/LocationPosMultiColumnExposedDelegateNullable : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getPitchColumn ()Lorg/jetbrains/exposed/sql/Column;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ldev/racci/minix/api/utils/minecraft/LocationPos;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public final fun getXColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getYColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getYawColumn ()Lorg/jetbrains/exposed/sql/Column;
	public final fun getZColumn ()Lorg/jetbrains/exposed/sql/Column;
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ldev/racci/minix/api/utils/minecraft/LocationPos;)V
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
}

public final class dev/racci/minix/api/utils/exposed/OfflinePlayerExposedDelegate : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/bukkit/OfflinePlayer;
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/bukkit/OfflinePlayer;)V
}

public final class dev/racci/minix/api/utils/exposed/OfflinePlayerExposedDelegateNullable : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/bukkit/OfflinePlayer;
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/bukkit/OfflinePlayer;)V
}

public final class dev/racci/minix/api/utils/exposed/OfflinePlayerKt {
	public static final fun nullableOfflinePlayer (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/OfflinePlayerExposedDelegateNullable;
	public static final fun offlinePlayer (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/OfflinePlayerExposedDelegate;
}

public final class dev/racci/minix/api/utils/exposed/WorldExposedDelegate : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/bukkit/World;
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/bukkit/World;)V
}

public final class dev/racci/minix/api/utils/exposed/WorldExposedDelegateNullable : dev/racci/minix/api/utils/exposed/ExposedDelegate {
	public fun <init> (Lorg/jetbrains/exposed/sql/Column;)V
	public final fun getColumn ()Lorg/jetbrains/exposed/sql/Column;
	public synthetic fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
	public fun getValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;)Lorg/bukkit/World;
	public synthetic fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Ljava/lang/Object;)V
	public fun setValue (Lorg/jetbrains/exposed/dao/Entity;Lkotlin/reflect/KProperty;Lorg/bukkit/World;)V
}

public final class dev/racci/minix/api/utils/exposed/WorldKt {
	public static final fun nullableWorld (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/WorldExposedDelegateNullable;
	public static final fun world (Lorg/jetbrains/exposed/dao/Entity;Lorg/jetbrains/exposed/sql/Column;)Ldev/racci/minix/api/utils/exposed/WorldExposedDelegate;
}

public final class dev/racci/minix/api/utils/kotlin/InfixKt {
	public static final fun and (Ljava/lang/Object;Ljava/lang/Object;)Lkotlinx/collections/immutable/PersistentList;
}

public final class dev/racci/minix/api/utils/kotlin/KotlinUtilsKt {
	public static final fun doesOverride (Lkotlin/reflect/KClass;Ljava/lang/String;)Z
	public static final fun doesOverride (Lkotlin/reflect/KClass;Lkotlin/reflect/KFunction;)Z
	public static final fun doesOverride (Lkotlin/reflect/KClass;Lkotlin/reflect/KProperty1;)Z
	public static final fun getCompanionParent (Lkotlin/reflect/KClass;)Lkotlin/reflect/KClass;
	public static final fun ifFalse (Ljava/lang/Boolean;Lkotlin/jvm/functions/Function0;)Z
	public static final fun ifTrue (Ljava/lang/Boolean;Lkotlin/jvm/functions/Function0;)Z
	public static final fun invokeIfNotNull (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Z
	public static final fun invokeIfNull (Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Z
	public static final fun to (Lkotlin/Pair;Ljava/lang/Object;)Lkotlin/Triple;
	public static final fun toSafeString (Lkotlin/jvm/functions/Function0;)Ljava/lang/String;
}

public final class dev/racci/minix/api/utils/kotlin/LazyUtilsKt {
	public static final fun ifInitialized (Lkotlin/Lazy;Lkotlin/jvm/functions/Function1;)V
}

public final class dev/racci/minix/api/utils/minecraft/BlockPos : dev/racci/minix/api/utils/minecraft/VectorComparable {
	public fun <init> (DDD)V
	public fun <init> (III)V
	public final fun asBukkitBlock (Lorg/bukkit/World;)Lorg/bukkit/block/Block;
	public final fun asBukkitLocation (Lorg/bukkit/World;)Lorg/bukkit/Location;
	public final fun asChunkPos ()Ldev/racci/minix/api/utils/minecraft/ChunkPos;
	public final fun asLocationPos ()Ldev/racci/minix/api/utils/minecraft/LocationPos;
	public fun axis ()[D
	public fun compareTo (Ldev/racci/minix/api/utils/minecraft/BlockPos;)I
	public synthetic fun compareTo (Ldev/racci/minix/api/utils/minecraft/VectorComparable;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()D
	public final fun component2 ()D
	public final fun component3 ()D
	public final fun copy (DDD)Ldev/racci/minix/api/utils/minecraft/BlockPos;
	public static synthetic fun copy$default (Ldev/racci/minix/api/utils/minecraft/BlockPos;DDDILjava/lang/Object;)Ldev/racci/minix/api/utils/minecraft/BlockPos;
	public fun equals (Ljava/lang/Object;)Z
	public fun factor ([I)Ldev/racci/minix/api/utils/minecraft/BlockPos;
	public synthetic fun factor ([I)Ldev/racci/minix/api/utils/minecraft/VectorComparable;
	public final fun getX ()D
	public final fun getY ()D
	public final fun getZ ()D
	public fun hashCode ()I
	public fun rangeTo (Ldev/racci/minix/api/utils/minecraft/BlockPos;)Ldev/racci/minix/api/utils/minecraft/PosRange;
	public synthetic fun rangeTo (Ldev/racci/minix/api/utils/minecraft/VectorComparable;)Ldev/racci/minix/api/utils/minecraft/PosRange;
	public fun toString ()Ljava/lang/String;
	public final fun toVec3 ()Lnet/minecraft/world/phys/Vec3;
}

public final class dev/racci/minix/api/utils/minecraft/BlockUtils {
	public static final field INSTANCE Ldev/racci/minix/api/utils/minecraft/BlockUtils;
	public final fun getOpposite (Lorg/bukkit/block/BlockFace;)Lorg/bukkit/block/BlockFace;
	public final fun getPlacedAgainstFace (Lorg/bukkit/block/Block;Lorg/bukkit/block/Block;)Lorg/bukkit/block/BlockFace;
	public final fun getSupportingBlock (Lorg/bukkit/block/Block;)Lorg/bukkit/block/Block;
	public final fun getVein (Lorg/bukkit/block/Block;Ljava/util/List;I)Ljava/util/ArrayList;
	public final fun isLiquid (Lorg/bukkit/block/Block;)I
}

public final class dev/racci/minix/api/utils/minecraft/ChunkPos : dev/racci/minix/api/utils/minecraft/VectorComparable {
	public fun <init> (II)V
	public final fun asBukkitChunk (Lorg/bukkit/World;)Lorg/bukkit/Chunk;
	public fun axis ()[D
	public fun compareTo (Ldev/racci/minix/api/utils/minecraft/ChunkPos;)I
	public synthetic fun compareTo (Ldev/racci/minix/api/utils/minecraft/VectorComparable;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()I
	public final fun component2 ()I
	public final fun copy (II)Ldev/racci/minix/api/utils/minecraft/ChunkPos;
	public static synthetic fun copy$default (Ldev/racci/minix/api/utils/minecraft/ChunkPos;IIILjava/lang/Object;)Ldev/racci/minix/api/utils/minecraft/ChunkPos;
	public fun equals (Ljava/lang/Object;)Z
	public fun factor ([I)Ldev/racci/minix/api/utils/minecraft/ChunkPos;
	public synthetic fun factor ([I)Ldev/racci/minix/api/utils/minecraft/VectorComparable;
	public final fun getX ()I
	public final fun getZ ()I
	public fun hashCode ()I
	public fun rangeTo (Ldev/racci/minix/api/utils/minecraft/ChunkPos;)Ldev/racci/minix/api/utils/minecraft/PosRange;
	public synthetic fun rangeTo (Ldev/racci/minix/api/utils/minecraft/VectorComparable;)Ldev/racci/minix/api/utils/minecraft/PosRange;
	public fun toString ()Ljava/lang/String;
}

public final class dev/racci/minix/api/utils/minecraft/InventoryUtils : dev/racci/minix/api/utils/UtilObject {
	public static final field INSTANCE Ldev/racci/minix/api/utils/minecraft/InventoryUtils;
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public final fun convertRowColumnToSlot (II)I
	public final fun convertRowColumnToSlot (Lkotlin/Pair;)I
	public final fun convertSlotToRowColumn (I)Lkotlin/Pair;
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/Minix;
	public synthetic fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/utils/minecraft/ItemNBT {
	public static final field INSTANCE Ldev/racci/minix/api/utils/minecraft/ItemNBT;
	public final fun getString (Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;)Ljava/lang/String;
	public final fun removeTag (Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;)Lorg/bukkit/inventory/ItemStack;
	public final fun setBoolean (Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;Z)Lorg/bukkit/inventory/ItemStack;
	public final fun setString (Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;Ljava/lang/String;)Lorg/bukkit/inventory/ItemStack;
}

public final class dev/racci/minix/api/utils/minecraft/LocationPos : dev/racci/minix/api/utils/minecraft/VectorComparable {
	public fun <init> (DDDFF)V
	public final fun asBlockPos ()Ldev/racci/minix/api/utils/minecraft/BlockPos;
	public final fun asBukkitBlock (Lorg/bukkit/World;)Lorg/bukkit/block/Block;
	public final fun asBukkitLocation (Lorg/bukkit/World;)Lorg/bukkit/Location;
	public fun axis ()[D
	public fun compareTo (Ldev/racci/minix/api/utils/minecraft/LocationPos;)I
	public synthetic fun compareTo (Ldev/racci/minix/api/utils/minecraft/VectorComparable;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()D
	public final fun component2 ()D
	public final fun component3 ()D
	public final fun component4 ()F
	public final fun component5 ()F
	public final fun copy (DDDFF)Ldev/racci/minix/api/utils/minecraft/LocationPos;
	public static synthetic fun copy$default (Ldev/racci/minix/api/utils/minecraft/LocationPos;DDDFFILjava/lang/Object;)Ldev/racci/minix/api/utils/minecraft/LocationPos;
	public fun equals (Ljava/lang/Object;)Z
	public fun factor ([I)Ldev/racci/minix/api/utils/minecraft/LocationPos;
	public synthetic fun factor ([I)Ldev/racci/minix/api/utils/minecraft/VectorComparable;
	public final fun getPitch ()F
	public final fun getX ()D
	public final fun getY ()D
	public final fun getYaw ()F
	public final fun getZ ()D
	public fun hashCode ()I
	public fun rangeTo (Ldev/racci/minix/api/utils/minecraft/LocationPos;)Ldev/racci/minix/api/utils/minecraft/PosRange;
	public synthetic fun rangeTo (Ldev/racci/minix/api/utils/minecraft/VectorComparable;)Ldev/racci/minix/api/utils/minecraft/PosRange;
	public fun toString ()Ljava/lang/String;
}

public final class dev/racci/minix/api/utils/minecraft/LocationUtilsKt {
	public static final fun asBlockPos (Lorg/bukkit/Location;)Ldev/racci/minix/api/utils/minecraft/BlockPos;
	public static final fun asPos (Lorg/bukkit/Chunk;)Ldev/racci/minix/api/utils/minecraft/ChunkPos;
	public static final fun asPos (Lorg/bukkit/Location;)Ldev/racci/minix/api/utils/minecraft/LocationPos;
	public static final fun asPos (Lorg/bukkit/block/Block;)Ldev/racci/minix/api/utils/minecraft/BlockPos;
	public static final fun blockPosOf (III)Ldev/racci/minix/api/utils/minecraft/BlockPos;
	public static final fun calculatePythagoras ([Lkotlin/Pair;)Lkotlin/Pair;
	public static final fun chunkPosOf (II)Ldev/racci/minix/api/utils/minecraft/ChunkPos;
	public static final fun locationPosOf (DDDFF)Ldev/racci/minix/api/utils/minecraft/LocationPos;
	public static synthetic fun locationPosOf$default (DDDFFILjava/lang/Object;)Ldev/racci/minix/api/utils/minecraft/LocationPos;
	public static final fun toDouble (Lkotlin/Pair;)Lkotlin/Pair;
	public static final fun toInt (Lkotlin/Pair;)Lkotlin/Pair;
}

public final class dev/racci/minix/api/utils/minecraft/MCVersion : java/lang/Comparable {
	public static final field Companion Ldev/racci/minix/api/utils/minecraft/MCVersion$Companion;
	public synthetic fun <init> (Ljava/lang/String;IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun compareTo (Ldev/racci/minix/api/utils/minecraft/MCVersion;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMainVersionString ()Ljava/lang/String;
	public final fun getMajorMinecraftVersion ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getName ()Ljava/lang/String;
	public final fun getOrdinal ()I
	public final fun getProtocolVersion ()I
	public final fun getSupportsDuelWielding ()Z
	public final fun getSupportsRGBColour ()Z
	public final fun getSupportsUUIDs ()Z
	public final fun getVersionID ()I
	public final fun getVersionString ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isSameMajorVersion (Ldev/racci/minix/api/utils/minecraft/MCVersion;)Z
	public fun toString ()Ljava/lang/String;
}

public final class dev/racci/minix/api/utils/minecraft/MCVersion$Companion {
	public final fun fromName (Ljava/lang/String;)Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun fromProtocol (I)Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun get (I)Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun get (Ljava/lang/String;)Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getCurrentVersion ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_10 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_10_1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_10_2 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_11 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_11_1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_11_2 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_12 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_12_1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_12_2 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_13 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_13_1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_13_2 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_14 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_14_1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_14_2 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_14_3 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_14_4 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_15 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_15_1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_15_2 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_16 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_16_1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_16_2 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_16_3 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_16_4 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_16_5 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_17 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_17_1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_18 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_18_1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_18_2 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_19 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_7 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_7_1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_7_10 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_7_2 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_7_3 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_7_4 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_7_5 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_7_6 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_7_7 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_7_8 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_7_9 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_8 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_8_1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_8_2 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_8_3 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_8_4 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_8_5 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_8_6 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_8_7 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_8_8 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_8_9 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_9 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_9_1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_9_2 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_9_3 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_1_9_4 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_10_R1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_11_R1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_12_R1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_13_R1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_13_R2 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_14_R1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_15_R1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_16_R1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_16_R2 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_16_R3 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_17_R1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_18_R1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_18_R2 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_19_R1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_7_R1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_7_R2 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_7_R3 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_7_R4 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_8_R1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_8_R2 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_8_R3 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_9_R1 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getMC_NMS_1_9_R2 ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getProtocolVersions ()Ljava/util/List;
	public final fun getSupportsDuelWielding ()Z
	public final fun getSupportsRGB ()Z
	public final fun getSupportsUUIDs ()Z
	public final fun getUNKNOWN ()Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun getVersions ()Ljava/util/List;
	public final fun sameMajor (Ldev/racci/minix/api/utils/minecraft/MCVersion;Ldev/racci/minix/api/utils/minecraft/MCVersion;)Z
	public final fun valueOf (I)Ldev/racci/minix/api/utils/minecraft/MCVersion;
	public final fun valueOf (Ljava/lang/String;)Ldev/racci/minix/api/utils/minecraft/MCVersion;
}

public final class dev/racci/minix/api/utils/minecraft/MCVersion$MCVersionDelegate {
	public final fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ldev/racci/minix/api/utils/minecraft/MCVersion;
}

public final class dev/racci/minix/api/utils/minecraft/MaterialTagsExtension {
	public static final field INSTANCE Ldev/racci/minix/api/utils/minecraft/MaterialTagsExtension;
	public final fun getCARBS ()Lcom/destroystokyo/paper/MaterialSetTag;
	public final fun getCOOKED_MEATS ()Lcom/destroystokyo/paper/MaterialSetTag;
	public final fun getFRUITS ()Lcom/destroystokyo/paper/MaterialSetTag;
	public final fun getRAW_MEATS ()Lcom/destroystokyo/paper/MaterialSetTag;
	public final fun getVEGETABLES ()Lcom/destroystokyo/paper/MaterialSetTag;
}

public abstract interface class dev/racci/minix/api/utils/minecraft/NbtWrapper {
	public abstract fun getString (Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;)Ljava/lang/String;
	public abstract fun removeTag (Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;)Lorg/bukkit/inventory/ItemStack;
	public abstract fun setBoolean (Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;Z)Lorg/bukkit/inventory/ItemStack;
	public abstract fun setString (Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;Ljava/lang/String;)Lorg/bukkit/inventory/ItemStack;
}

public final class dev/racci/minix/api/utils/minecraft/Pdc : dev/racci/minix/api/utils/minecraft/NbtWrapper {
	public static final field Companion Ldev/racci/minix/api/utils/minecraft/Pdc$Companion;
	public fun <init> ()V
	public fun getString (Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;)Ljava/lang/String;
	public fun removeTag (Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;)Lorg/bukkit/inventory/ItemStack;
	public fun setBoolean (Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;Z)Lorg/bukkit/inventory/ItemStack;
	public fun setString (Lorg/bukkit/inventory/ItemStack;Ljava/lang/String;Ljava/lang/String;)Lorg/bukkit/inventory/ItemStack;
}

public final class dev/racci/minix/api/utils/minecraft/Pdc$Companion {
}

public final class dev/racci/minix/api/utils/minecraft/PlayerUtils {
	public static final field INSTANCE Ldev/racci/minix/api/utils/minecraft/PlayerUtils;
	public final fun chatInput (Lorg/bukkit/entity/Player;Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun chatInput (Lorg/bukkit/entity/Player;Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)V
	public static synthetic fun chatInput$default (Ldev/racci/minix/api/utils/minecraft/PlayerUtils;Lorg/bukkit/entity/Player;Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)V
	public final fun whenMove (Lorg/bukkit/entity/Player;Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/jvm/functions/Function1;)V
	public final fun whenQuit (Lorg/bukkit/entity/Player;Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/jvm/functions/Function1;)V
}

public final class dev/racci/minix/api/utils/minecraft/PlayerUtils$ChatInput {
	public fun <init> (Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;)V
	public final fun component1 ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public final fun component2 ()Lkotlin/jvm/functions/Function2;
	public final fun component3 ()Lkotlin/jvm/functions/Function1;
	public final fun copy (Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;)Ldev/racci/minix/api/utils/minecraft/PlayerUtils$ChatInput;
	public static synthetic fun copy$default (Ldev/racci/minix/api/utils/minecraft/PlayerUtils$ChatInput;Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ldev/racci/minix/api/utils/minecraft/PlayerUtils$ChatInput;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCallback ()Lkotlin/jvm/functions/Function2;
	public final fun getPlayerQuit ()Lkotlin/jvm/functions/Function1;
	public final fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/racci/minix/api/utils/minecraft/PlayerUtils$PlayerCallback {
	public fun <init> (Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/jvm/functions/Function1;)V
	public final fun component1 ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public final fun component2 ()Lkotlin/jvm/functions/Function1;
	public final fun copy (Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/jvm/functions/Function1;)Ldev/racci/minix/api/utils/minecraft/PlayerUtils$PlayerCallback;
	public static synthetic fun copy$default (Ldev/racci/minix/api/utils/minecraft/PlayerUtils$PlayerCallback;Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ldev/racci/minix/api/utils/minecraft/PlayerUtils$PlayerCallback;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCallback ()Lkotlin/jvm/functions/Function1;
	public final fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/racci/minix/api/utils/minecraft/PluginUtils : dev/racci/minix/api/utils/UtilObject {
	public static final field INSTANCE Ldev/racci/minix/api/utils/minecraft/PluginUtils;
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public final fun depend (Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/reflect/KClass;Ljava/lang/String;)Ldev/racci/minix/api/utils/minecraft/PluginUtils$DependencyDelegate;
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/Minix;
	public synthetic fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun softDepend (Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/reflect/KClass;Ljava/lang/String;)Ldev/racci/minix/api/utils/minecraft/PluginUtils$SoftDependencyDelegate;
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/utils/minecraft/PluginUtils$DependencyDelegate : kotlin/properties/ReadOnlyProperty {
	public fun <init> (Ljava/lang/String;Lkotlin/reflect/KClass;)V
	public final fun getPluginName ()Ljava/lang/String;
	public final fun getType ()Lkotlin/reflect/KClass;
	public fun getValue (Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/reflect/KProperty;)Lorg/bukkit/plugin/Plugin;
	public synthetic fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/utils/minecraft/PluginUtils$SoftDependencyDelegate : kotlin/properties/ReadOnlyProperty {
	public fun <init> (Ljava/lang/String;Lkotlin/reflect/KClass;)V
	public final fun getPluginName ()Ljava/lang/String;
	public final fun getType ()Lkotlin/reflect/KClass;
	public fun getValue (Ldev/racci/minix/api/plugin/MinixPlugin;Lkotlin/reflect/KProperty;)Lorg/bukkit/plugin/Plugin;
	public synthetic fun getValue (Ljava/lang/Object;Lkotlin/reflect/KProperty;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/utils/minecraft/PosRange : java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker, kotlin/ranges/ClosedRange {
	public fun <init> (Ldev/racci/minix/api/utils/minecraft/VectorComparable;Ldev/racci/minix/api/utils/minecraft/VectorComparable;Lkotlin/jvm/functions/Function0;)V
	public fun contains (Ldev/racci/minix/api/utils/minecraft/VectorComparable;)Z
	public synthetic fun contains (Ljava/lang/Comparable;)Z
	public final fun getBuildIterator ()Lkotlin/jvm/functions/Function0;
	public fun getEndInclusive ()Ldev/racci/minix/api/utils/minecraft/VectorComparable;
	public synthetic fun getEndInclusive ()Ljava/lang/Comparable;
	public final fun getFirst ()Ldev/racci/minix/api/utils/minecraft/VectorComparable;
	public final fun getLast ()Ldev/racci/minix/api/utils/minecraft/VectorComparable;
	public fun getStart ()Ldev/racci/minix/api/utils/minecraft/VectorComparable;
	public synthetic fun getStart ()Ljava/lang/Comparable;
	public fun isEmpty ()Z
	public fun iterator ()Ljava/util/Iterator;
}

public final class dev/racci/minix/api/utils/minecraft/PosRangeIterator : java/util/Iterator, kotlin/jvm/internal/markers/KMappedMarker {
	public fun <init> (Ldev/racci/minix/api/utils/minecraft/VectorComparable;Ldev/racci/minix/api/utils/minecraft/VectorComparable;Lkotlin/jvm/functions/Function1;)V
	public final fun getFactor ()Lkotlin/jvm/functions/Function1;
	public fun hasNext ()Z
	public fun next ()Ldev/racci/minix/api/utils/minecraft/VectorComparable;
	public synthetic fun next ()Ljava/lang/Object;
	public fun remove ()V
}

public final class dev/racci/minix/api/utils/minecraft/ProjectileUtils {
	public static final field INSTANCE Ldev/racci/minix/api/utils/minecraft/ProjectileUtils;
	public final fun getBow (Lorg/bukkit/entity/Arrow;)Lorg/bukkit/inventory/ItemStack;
}

public final class dev/racci/minix/api/utils/minecraft/RangeIteratorWithFactor : java/util/Iterator, kotlin/jvm/internal/markers/KMappedMarker {
	public fun <init> (Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V
	public final fun getIterator ()Ldev/racci/minix/api/utils/minecraft/PosRangeIterator;
	public fun hasNext ()Z
	public fun next ()Ljava/lang/Object;
	public fun remove ()V
}

public final class dev/racci/minix/api/utils/minecraft/RangeUtilsKt {
	public static final fun contains (Ldev/racci/minix/api/utils/minecraft/PosRange;Lorg/bukkit/Chunk;)Z
	public static final fun contains (Ldev/racci/minix/api/utils/minecraft/PosRange;Lorg/bukkit/Location;)Z
	public static final fun contains (Ldev/racci/minix/api/utils/minecraft/PosRange;Lorg/bukkit/block/Block;)Z
	public static final fun rangeTo (Lorg/bukkit/Chunk;Lorg/bukkit/Chunk;)Ldev/racci/minix/api/utils/minecraft/PosRange;
	public static final fun rangeTo (Lorg/bukkit/Location;Lorg/bukkit/Location;)Ldev/racci/minix/api/utils/minecraft/PosRange;
	public static final fun rangeTo (Lorg/bukkit/block/Block;Lorg/bukkit/block/Block;)Ldev/racci/minix/api/utils/minecraft/PosRange;
}

public final class dev/racci/minix/api/utils/minecraft/TameUtils {
	public static final field INSTANCE Ldev/racci/minix/api/utils/minecraft/TameUtils;
	public final fun hasOwner (Lorg/bukkit/entity/Entity;)Z
	public final fun isOwner (Lorg/bukkit/entity/Player;Lorg/bukkit/entity/Entity;)Z
	public final fun isTamed (Lorg/bukkit/entity/Entity;)Z
}

public abstract interface class dev/racci/minix/api/utils/minecraft/VectorComparable : java/lang/Comparable {
	public abstract fun axis ()[D
	public abstract fun compareTo (Ldev/racci/minix/api/utils/minecraft/VectorComparable;)I
	public abstract fun factor ([I)Ldev/racci/minix/api/utils/minecraft/VectorComparable;
	public abstract fun rangeTo (Ldev/racci/minix/api/utils/minecraft/VectorComparable;)Ldev/racci/minix/api/utils/minecraft/PosRange;
}

public final class dev/racci/minix/api/utils/minecraft/VectorComparable$DefaultImpls {
	public static fun compareTo (Ldev/racci/minix/api/utils/minecraft/VectorComparable;Ldev/racci/minix/api/utils/minecraft/VectorComparable;)I
	public static fun rangeTo (Ldev/racci/minix/api/utils/minecraft/VectorComparable;Ldev/racci/minix/api/utils/minecraft/VectorComparable;)Ldev/racci/minix/api/utils/minecraft/PosRange;
}

public final class dev/racci/minix/api/utils/primitive/EnumUtils : dev/racci/minix/api/utils/UtilObject {
	public static final field INSTANCE Ldev/racci/minix/api/utils/primitive/EnumUtils;
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/Minix;
	public synthetic fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/utils/primitive/MathUtils : dev/racci/minix/api/utils/UtilObject {
	public static final field INSTANCE Ldev/racci/minix/api/utils/primitive/MathUtils;
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public final fun getMultiplierFromPercent (D)D
	public fun getPlugin ()Ldev/racci/minix/api/plugin/Minix;
	public synthetic fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public final fun multiplyByPercent (DD)D
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/utils/primitive/NumberUtils : dev/racci/minix/api/utils/UtilObject {
	public static final field INSTANCE Ldev/racci/minix/api/utils/primitive/NumberUtils;
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/Minix;
	public synthetic fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public final fun toRoman (I)Ljava/lang/String;
}

public final class dev/racci/minix/api/utils/primitive/StringUtilsKt {
	public static final fun centralize (Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public static synthetic fun centralize$default (Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;
	public static final fun javaUnicodeToCharacter (Ljava/lang/String;)Ljava/lang/String;
}

public final class dev/racci/minix/api/utils/reflection/AccessUtils : dev/racci/minix/api/utils/UtilObject {
	public static final field INSTANCE Ldev/racci/minix/api/utils/reflection/AccessUtils;
	public final fun accessGet0 (Lkotlin/reflect/KProperty0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun accessGet1 (Lkotlin/reflect/KProperty1;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun accessGet2 (Lkotlin/reflect/KProperty2;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun accessInvoke (Lkotlin/reflect/KFunction;[Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun accessInvoke0 (Lkotlin/reflect/KFunction;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun accessSet0 (Lkotlin/reflect/KMutableProperty0;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun accessSet1 (Lkotlin/reflect/KMutableProperty1;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun accessSet2 (Lkotlin/reflect/KMutableProperty2;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun accessWith (Lkotlin/reflect/KCallable;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public fun getKoin ()Lorg/koin/core/Koin;
	public final fun getLockMap ()Ljava/util/concurrent/ConcurrentHashMap;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/Minix;
	public synthetic fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/utils/reflection/CastUtils : dev/racci/minix/api/utils/UtilObject {
	public static final field INSTANCE Ldev/racci/minix/api/utils/reflection/CastUtils;
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public final fun castOr (Ljava/lang/Object;Lkotlin/reflect/KClass;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun castOrElse (Ljava/lang/Object;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public final fun castOrThrow (Ljava/lang/Object;Lkotlin/reflect/KClass;)Ljava/lang/Object;
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/Minix;
	public synthetic fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public final fun safeCast (Ljava/lang/Object;Lkotlin/reflect/KClass;)Ljava/lang/Object;
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public final fun withCast (Ljava/lang/Object;Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class dev/racci/minix/api/utils/reflection/LateInitUtils : dev/racci/minix/api/utils/UtilObject {
	public static final field INSTANCE Ldev/racci/minix/api/utils/reflection/LateInitUtils;
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public fun getKoin ()Lorg/koin/core/Koin;
	public final fun getLateInit (Lkotlin/reflect/KProperty0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public final fun getOrSet (Lkotlin/reflect/KMutableProperty0;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/Minix;
	public synthetic fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/utils/reflection/LazyUtils : dev/racci/minix/api/utils/UtilObject {
	public static final field INSTANCE Ldev/racci/minix/api/utils/reflection/LazyUtils;
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public final fun getOrDefault0 (Lkotlin/reflect/KProperty0;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getOrDefault1 (Lkotlin/reflect/KProperty1;Ljava/lang/Object;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getOrElse0 (Lkotlin/reflect/KProperty0;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getOrElse1 (Lkotlin/reflect/KProperty1;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getOrNull0 (Lkotlin/reflect/KProperty0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getOrNull1 (Lkotlin/reflect/KProperty1;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getOrThrow0 (Lkotlin/reflect/KProperty0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getOrThrow1 (Lkotlin/reflect/KProperty1;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/Minix;
	public synthetic fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun ifInitialized0 (Lkotlin/reflect/KProperty0;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun ifInitialized1 (Lkotlin/reflect/KProperty1;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun isInitialised0 (Lkotlin/reflect/KProperty0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun isInitialised1 (Lkotlin/reflect/KProperty1;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun isLazy0 (Lkotlin/reflect/KProperty0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun isLazy1 (Lkotlin/reflect/KProperty1;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/utils/reflection/NestedUtils : dev/racci/minix/api/utils/UtilObject {
	public static final field INSTANCE Ldev/racci/minix/api/utils/reflection/NestedUtils;
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public final fun getNestedClasses (Lkotlin/reflect/KClass;II)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getNestedClasses$default (Ldev/racci/minix/api/utils/reflection/NestedUtils;Lkotlin/reflect/KClass;IIILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public final fun getNestedInstances (Lkotlin/reflect/KClass;Ljava/lang/Object;II)Lkotlinx/coroutines/flow/Flow;
	public static synthetic fun getNestedInstances$default (Ldev/racci/minix/api/utils/reflection/NestedUtils;Lkotlin/reflect/KClass;Ljava/lang/Object;IIILjava/lang/Object;)Lkotlinx/coroutines/flow/Flow;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/Minix;
	public synthetic fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

public final class dev/racci/minix/api/utils/reflection/OverrideUtils : dev/racci/minix/api/utils/UtilObject {
	public static final field INSTANCE Ldev/racci/minix/api/utils/reflection/OverrideUtils;
	public fun async (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public final fun callIfOverridesFunction (Lkotlin/reflect/KClass;Lkotlin/reflect/KFunction;)Ljava/lang/Object;
	public final fun callIfOverridesFunctionSuspend (Lkotlin/reflect/KClass;Lkotlin/reflect/KFunction;)Ljava/lang/Object;
	public fun completableAsync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun completableSync (Lkotlin/jvm/functions/Function1;)Ljava/util/concurrent/CompletableFuture;
	public fun deferredAsync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deferredSync (Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/Deferred;
	public fun deleteProperty (Ljava/lang/String;)V
	public final fun doesOverrideFunctionInternal (Lkotlin/reflect/KClass;Lkotlin/reflect/KFunction;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public final fun doesOverrideKFunction (Lkotlin/reflect/KClass;Lkotlin/reflect/KFunction;)Z
	public final fun doesOverrideKFunctionSelector (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)Z
	public final fun doesOverrideKProperty (Lkotlin/reflect/KClass;Lkotlin/reflect/KProperty;)Z
	public final fun doesOverrideKPropertySelector (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)Z
	public final fun doesOverridePropertyInternal (Lkotlin/reflect/KClass;Lkotlin/reflect/KProperty;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public fun getKoin ()Lorg/koin/core/Koin;
	public fun getLogger ()Ldev/racci/minix/api/plugin/logger/MinixLogger;
	public fun getPlugin ()Ldev/racci/minix/api/plugin/Minix;
	public synthetic fun getPlugin ()Ldev/racci/minix/api/plugin/MinixPlugin;
	public fun getProperty (Ljava/lang/String;)Ljava/lang/Object;
	public fun getProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public final fun ifOverridesKFunction (Lkotlin/reflect/KClass;Lkotlin/reflect/KFunction;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun ifOverridesKFunctionInstance (Ljava/lang/Object;Lkotlin/reflect/KFunction;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun ifOverridesKFunctionKCallable (Lkotlin/reflect/KClass;Lkotlin/reflect/KFunction;)Ljava/lang/Object;
	public final fun ifOverridesKProperty (Lkotlin/reflect/KClass;Lkotlin/reflect/KProperty;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun ifOverridesKPropertyInstance (Ljava/lang/Object;Lkotlin/reflect/KProperty;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun ifOverridesKSuspendFunction (Lkotlin/reflect/KClass;Lkotlin/reflect/KFunction;)Ljava/lang/Object;
	public fun launch (Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
	public fun registerEvents ([Lorg/bukkit/event/Listener;)V
	public fun setProperty (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun sync (Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;
}

