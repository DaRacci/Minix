name: Java CI

on:
  push:
    branches: [ 5.x.x ]
    paths-ignore: [ "**.md", "**.api" ]
  pull_request:
    types: [ opened, edited ]

jobs:
  validate:
    uses: ./.github/workflows/wrapper-validation.yml

  fossa:
    needs: validate
    secrets: inherit
    if: ${{ github.event_name == 'push' }}
    uses: ./.github/workflows/fossa.yml
    with:
      branch: ${{ github.ref }}

  build:
    runs-on: ubuntu-latest
    needs: validate
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - id: version
        run: |
          version="$(sed -n -e 's/version=//p' gradle.properties)"
          echo "::set-output name=version::$version"

      - uses: gradle/gradle-build-action@v2
        with:
          # Excluding slim tasks since they are not needed for CI
          arguments: clean assemble -x paperSlimJar

      - uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build/libs
          if-no-files-found: error

  docs:
    needs: build
    secrets: inherit
    if: ${{ github.event_name == 'push' }}
    uses: ./.github/workflows/docs.yml

  upload-sarif:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Run detekt
        uses: gradle/gradle-build-action@v2
        with:
          arguments: detekt
          read-only-cache: true

      # Make sure we always run this upload task,
      # because the previous step may fail if there are findings.
      - name: Upload SARIF to Github using the upload-sarif action
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: build/reports/detekt/detekt.sarif

  check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - uses: gradle/gradle-build-action@v2
        with:
          args: check
          cache-read-only: true

  sentry:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v3

      - uses: haya14busa/action-cond@v1
        id: env
        with:
          cond: ${{ contains(needs.build.outputs.version, 'SNAPSHOT') }}
          if_true: "development"
          if_false: "production"

      - uses: haya14busa/action-cond@v1
        id: finalize
        with:
          cond: steps.env.outputs.value == 'development'
          if_true: "false"
          if_false: "true"

      - name: Sentry Release
        uses: getsentry/action-release@v1.2.0
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: racci
          SENTRY_PROJECT: minix
        with:
          version: ${{ needs.build.outputs.version }}
          environment: ${{ steps.env.outputs.value }}
          finalize: ${{ steps.finalize.outputs.value }}