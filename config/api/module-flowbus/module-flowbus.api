public abstract interface class dev/racci/minix/flowbus/EmitterCancellable {
	public abstract fun cancel ()V
	public abstract fun getCancelled ()Z
	public abstract fun setCancelled (Z)V
}

public final class dev/racci/minix/flowbus/EventCallback {
	public static final field Companion Ldev/racci/minix/flowbus/EventCallback$Companion;
	public synthetic fun <init> (IZZLkotlin/jvm/functions/Function2;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (IZZLkotlin/jvm/functions/Function2;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1-oUxLd3o ()I
	public final fun component2 ()Z
	public final fun component3 ()Z
	public final fun component4 ()Lkotlin/jvm/functions/Function2;
	public final fun copy-QamaysM (IZZLkotlin/jvm/functions/Function2;)Ldev/racci/minix/flowbus/EventCallback;
	public static synthetic fun copy-QamaysM$default (Ldev/racci/minix/flowbus/EventCallback;IZZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ldev/racci/minix/flowbus/EventCallback;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCallback ()Lkotlin/jvm/functions/Function2;
	public final fun getIgnoreCancelled ()Z
	public final fun getPriority-oUxLd3o ()I
	public final fun getSkipRetained ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class dev/racci/minix/flowbus/EventCallback$Companion {
}

public class dev/racci/minix/flowbus/FlowBus {
	public fun <init> ()V
	public final fun access$postOn (Ldev/racci/minix/flowbus/RendezvousStateFlow;Ljava/lang/Object;Z)V
	protected fun createFlow ()Ldev/racci/minix/flowbus/RendezvousStateFlow;
	public final fun dropAll ()V
	public final fun dropEvent (Lkotlin/reflect/KClass;)V
	public fun forEvent (Lkotlin/reflect/KClass;)Ldev/racci/minix/flowbus/RendezvousStateFlow;
	public final fun getFlow (Lkotlin/reflect/KClass;)Lkotlinx/coroutines/flow/Flow;
	protected fun getFlows ()Ljava/util/Map;
	public final fun getLastEvent (Lkotlin/reflect/KClass;)Ljava/lang/Object;
	public final fun post (Ljava/lang/Object;Z)V
	public static synthetic fun post$default (Ldev/racci/minix/flowbus/FlowBus;Ljava/lang/Object;ZILjava/lang/Object;)V
	public final fun postDeferred (Ljava/lang/Object;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun postDeferred$default (Ldev/racci/minix/flowbus/FlowBus;Ljava/lang/Object;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	protected fun postOn (Ldev/racci/minix/flowbus/RendezvousStateFlow;Ljava/lang/Object;Z)V
	protected fun postOnDeferred (Ldev/racci/minix/flowbus/RendezvousStateFlow;Ljava/lang/Object;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class dev/racci/minix/flowbus/RendezvousStateFlow : kotlinx/coroutines/flow/MutableStateFlow {
	public fun <init> (Ljava/lang/Object;)V
	public fun collect (Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun collectHolding (Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun compareAndSet (Ljava/lang/Object;Ljava/lang/Object;)Z
	public fun emit (Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun emitAsync (Ljava/lang/Object;)Lkotlinx/coroutines/Deferred;
	public fun getReplayCache ()Ljava/util/List;
	public fun getSubscriptionCount ()Lkotlinx/coroutines/flow/StateFlow;
	public fun getValue ()Ljava/lang/Object;
	public fun resetReplayCache ()V
	public fun setValue (Ljava/lang/Object;)V
	public fun tryEmit (Ljava/lang/Object;)Z
}

public abstract interface class dev/racci/minix/flowbus/dispatcher/DispatcherFactory {
	public abstract fun getDispatcher ()Lkotlinx/coroutines/CoroutineDispatcher;
}

public abstract interface class dev/racci/minix/flowbus/receiver/EventReceiver {
	public abstract fun createEventScope (Ldev/racci/minix/flowbus/receiver/EventReceiver;)Lkotlinx/coroutines/CoroutineScope;
	public abstract fun flowOf-tHAJEeM (Ldev/racci/minix/flowbus/receiver/EventReceiver;Lkotlin/reflect/KClass;IZZ)Lkotlinx/coroutines/flow/Flow;
	public abstract fun getExceptionHandler (Ldev/racci/minix/flowbus/receiver/EventReceiver;)Lkotlinx/coroutines/CoroutineExceptionHandler;
	public abstract fun getSupervisorScope (Ldev/racci/minix/flowbus/receiver/EventReceiver;)Lkotlinx/coroutines/CoroutineScope;
	public abstract fun isCancelled (Ljava/lang/Object;)Z
	public abstract fun returnOn (Lkotlinx/coroutines/CoroutineDispatcher;)Ldev/racci/minix/flowbus/receiver/EventReceiver;
	public abstract fun subscribeTo (Ldev/racci/minix/flowbus/receiver/EventReceiver;Lkotlin/reflect/KClass;Ldev/racci/minix/flowbus/EventCallback;)Ldev/racci/minix/flowbus/receiver/EventReceiver;
	public abstract fun subscribeTo-ZYpfZMU (Ldev/racci/minix/flowbus/receiver/EventReceiver;Lkotlin/reflect/KClass;IZZLkotlin/jvm/functions/Function2;)Ldev/racci/minix/flowbus/receiver/EventReceiver;
	public abstract fun unsubscribe (Ldev/racci/minix/flowbus/receiver/EventReceiver;)V
	public abstract fun unsubscribe (Ldev/racci/minix/flowbus/receiver/EventReceiver;Lkotlin/reflect/KClass;)V
}

public final class dev/racci/minix/flowbus/receiver/EventReceiver$DefaultImpls {
	public static synthetic fun subscribeTo-ZYpfZMU$default (Ldev/racci/minix/flowbus/receiver/EventReceiver;Ldev/racci/minix/flowbus/receiver/EventReceiver;Lkotlin/reflect/KClass;IZZLkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ldev/racci/minix/flowbus/receiver/EventReceiver;
}

public class dev/racci/minix/flowbus/receiver/EventReceiverImpl : dev/racci/minix/flowbus/receiver/EventReceiver {
	public fun <init> (Ldev/racci/minix/flowbus/FlowBus;)V
	public fun createEventScope (Ldev/racci/minix/flowbus/receiver/EventReceiver;)Lkotlinx/coroutines/CoroutineScope;
	public fun flowOf-tHAJEeM (Ldev/racci/minix/flowbus/receiver/EventReceiver;Lkotlin/reflect/KClass;IZZ)Lkotlinx/coroutines/flow/Flow;
	public fun getExceptionHandler (Ldev/racci/minix/flowbus/receiver/EventReceiver;)Lkotlinx/coroutines/CoroutineExceptionHandler;
	public fun getSupervisorScope (Ldev/racci/minix/flowbus/receiver/EventReceiver;)Lkotlinx/coroutines/CoroutineScope;
	public fun isCancelled (Ljava/lang/Object;)Z
	public fun returnOn (Lkotlinx/coroutines/CoroutineDispatcher;)Ldev/racci/minix/flowbus/receiver/EventReceiver;
	public fun subscribeTo (Ldev/racci/minix/flowbus/receiver/EventReceiver;Lkotlin/reflect/KClass;Ldev/racci/minix/flowbus/EventCallback;)Ldev/racci/minix/flowbus/receiver/EventReceiver;
	public fun subscribeTo-ZYpfZMU (Ldev/racci/minix/flowbus/receiver/EventReceiver;Lkotlin/reflect/KClass;IZZLkotlin/jvm/functions/Function2;)Ldev/racci/minix/flowbus/receiver/EventReceiver;
	public fun unsubscribe (Ldev/racci/minix/flowbus/receiver/EventReceiver;)V
	public fun unsubscribe (Ldev/racci/minix/flowbus/receiver/EventReceiver;Lkotlin/reflect/KClass;)V
}

