[{"name":"ADD","description":"dev.racci.minix.api.utils.collections.ObservableAction.ADD","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-action/-a-d-d/index.html","searchKeys":["ADD","ADD","dev.racci.minix.api.utils.collections.ObservableAction.ADD"]},{"name":"ADD_ALL","description":"dev.racci.minix.api.utils.collections.ObservableAction.ADD_ALL","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-action/-a-d-d_-a-l-l/index.html","searchKeys":["ADD_ALL","ADD_ALL","dev.racci.minix.api.utils.collections.ObservableAction.ADD_ALL"]},{"name":"ALPHA","description":"dev.racci.minix.api.updater.ReleaseType.ALPHA","location":"Minix-API/dev.racci.minix.api.updater/-release-type/-a-l-p-h-a/index.html","searchKeys":["ALPHA","ALPHA","dev.racci.minix.api.updater.ReleaseType.ALPHA"]},{"name":"BETA","description":"dev.racci.minix.api.updater.ReleaseType.BETA","location":"Minix-API/dev.racci.minix.api.updater/-release-type/-b-e-t-a/index.html","searchKeys":["BETA","BETA","dev.racci.minix.api.updater.ReleaseType.BETA"]},{"name":"CHECK","description":"dev.racci.minix.api.updater.UpdateMode.CHECK","location":"Minix-API/dev.racci.minix.api.updater/-update-mode/-c-h-e-c-k/index.html","searchKeys":["CHECK","CHECK","dev.racci.minix.api.updater.UpdateMode.CHECK"]},{"name":"CLEAR","description":"dev.racci.minix.api.utils.collections.ObservableAction.CLEAR","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-action/-c-l-e-a-r/index.html","searchKeys":["CLEAR","CLEAR","dev.racci.minix.api.utils.collections.ObservableAction.CLEAR"]},{"name":"DEBUG","description":"dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.DEBUG","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-logging-level/-d-e-b-u-g/index.html","searchKeys":["DEBUG","DEBUG","dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.DEBUG"]},{"name":"DISABLED","description":"dev.racci.minix.api.updater.UpdateMode.DISABLED","location":"Minix-API/dev.racci.minix.api.updater/-update-mode/-d-i-s-a-b-l-e-d/index.html","searchKeys":["DISABLED","DISABLED","dev.racci.minix.api.updater.UpdateMode.DISABLED"]},{"name":"DISABLED","description":"dev.racci.minix.api.updater.UpdateResult.DISABLED","location":"Minix-API/dev.racci.minix.api.updater/-update-result/-d-i-s-a-b-l-e-d/index.html","searchKeys":["DISABLED","DISABLED","dev.racci.minix.api.updater.UpdateResult.DISABLED"]},{"name":"ENABLED","description":"dev.racci.minix.api.extension.ExtensionState.ENABLED","location":"Minix-API/dev.racci.minix.api.extension/-extension-state/-e-n-a-b-l-e-d/index.html","searchKeys":["ENABLED","ENABLED","dev.racci.minix.api.extension.ExtensionState.ENABLED"]},{"name":"ENABLING","description":"dev.racci.minix.api.extension.ExtensionState.ENABLING","location":"Minix-API/dev.racci.minix.api.extension/-extension-state/-e-n-a-b-l-i-n-g/index.html","searchKeys":["ENABLING","ENABLING","dev.racci.minix.api.extension.ExtensionState.ENABLING"]},{"name":"ERROR","description":"dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.ERROR","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-logging-level/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR","dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.ERROR"]},{"name":"FAILED","description":"dev.racci.minix.api.utils.Loadable.State.FAILED","location":"Minix-API/dev.racci.minix.api.utils/-loadable/-state/-f-a-i-l-e-d/index.html","searchKeys":["FAILED","FAILED","dev.racci.minix.api.utils.Loadable.State.FAILED"]},{"name":"FAILED_ALREADY_STARTED","description":"dev.racci.minix.api.updater.UpdateResult.FAILED_ALREADY_STARTED","location":"Minix-API/dev.racci.minix.api.updater/-update-result/-f-a-i-l-e-d_-a-l-r-e-a-d-y_-s-t-a-r-t-e-d/index.html","searchKeys":["FAILED_ALREADY_STARTED","FAILED_ALREADY_STARTED","dev.racci.minix.api.updater.UpdateResult.FAILED_ALREADY_STARTED"]},{"name":"FAILED_BACKUP","description":"dev.racci.minix.api.updater.UpdateResult.FAILED_BACKUP","location":"Minix-API/dev.racci.minix.api.updater/-update-result/-f-a-i-l-e-d_-b-a-c-k-u-p/index.html","searchKeys":["FAILED_BACKUP","FAILED_BACKUP","dev.racci.minix.api.updater.UpdateResult.FAILED_BACKUP"]},{"name":"FAILED_CHECKSUM","description":"dev.racci.minix.api.updater.UpdateResult.FAILED_CHECKSUM","location":"Minix-API/dev.racci.minix.api.updater/-update-result/-f-a-i-l-e-d_-c-h-e-c-k-s-u-m/index.html","searchKeys":["FAILED_CHECKSUM","FAILED_CHECKSUM","dev.racci.minix.api.updater.UpdateResult.FAILED_CHECKSUM"]},{"name":"FAILED_CONNECTION","description":"dev.racci.minix.api.updater.UpdateResult.FAILED_CONNECTION","location":"Minix-API/dev.racci.minix.api.updater/-update-result/-f-a-i-l-e-d_-c-o-n-n-e-c-t-i-o-n/index.html","searchKeys":["FAILED_CONNECTION","FAILED_CONNECTION","dev.racci.minix.api.updater.UpdateResult.FAILED_CONNECTION"]},{"name":"FAILED_DEPENDENCIES","description":"dev.racci.minix.api.extension.ExtensionState.FAILED_DEPENDENCIES","location":"Minix-API/dev.racci.minix.api.extension/-extension-state/-f-a-i-l-e-d_-d-e-p-e-n-d-e-n-c-i-e-s/index.html","searchKeys":["FAILED_DEPENDENCIES","FAILED_DEPENDENCIES","dev.racci.minix.api.extension.ExtensionState.FAILED_DEPENDENCIES"]},{"name":"FAILED_DOWNLOAD","description":"dev.racci.minix.api.updater.UpdateResult.FAILED_DOWNLOAD","location":"Minix-API/dev.racci.minix.api.updater/-update-result/-f-a-i-l-e-d_-d-o-w-n-l-o-a-d/index.html","searchKeys":["FAILED_DOWNLOAD","FAILED_DOWNLOAD","dev.racci.minix.api.updater.UpdateResult.FAILED_DOWNLOAD"]},{"name":"FAILED_DOWNLOAD_DEPENDENCIES","description":"dev.racci.minix.api.updater.UpdateResult.FAILED_DOWNLOAD_DEPENDENCIES","location":"Minix-API/dev.racci.minix.api.updater/-update-result/-f-a-i-l-e-d_-d-o-w-n-l-o-a-d_-d-e-p-e-n-d-e-n-c-i-e-s/index.html","searchKeys":["FAILED_DOWNLOAD_DEPENDENCIES","FAILED_DOWNLOAD_DEPENDENCIES","dev.racci.minix.api.updater.UpdateResult.FAILED_DOWNLOAD_DEPENDENCIES"]},{"name":"FAILED_DOWNLOAD_DISALLOWED","description":"dev.racci.minix.api.updater.UpdateResult.FAILED_DOWNLOAD_DISALLOWED","location":"Minix-API/dev.racci.minix.api.updater/-update-result/-f-a-i-l-e-d_-d-o-w-n-l-o-a-d_-d-i-s-a-l-l-o-w-e-d/index.html","searchKeys":["FAILED_DOWNLOAD_DISALLOWED","FAILED_DOWNLOAD_DISALLOWED","dev.racci.minix.api.updater.UpdateResult.FAILED_DOWNLOAD_DISALLOWED"]},{"name":"FAILED_ENABLING","description":"dev.racci.minix.api.extension.ExtensionState.FAILED_ENABLING","location":"Minix-API/dev.racci.minix.api.extension/-extension-state/-f-a-i-l-e-d_-e-n-a-b-l-i-n-g/index.html","searchKeys":["FAILED_ENABLING","FAILED_ENABLING","dev.racci.minix.api.extension.ExtensionState.FAILED_ENABLING"]},{"name":"FAILED_EXTRACTION","description":"dev.racci.minix.api.updater.UpdateResult.FAILED_EXTRACTION","location":"Minix-API/dev.racci.minix.api.updater/-update-result/-f-a-i-l-e-d_-e-x-t-r-a-c-t-i-o-n/index.html","searchKeys":["FAILED_EXTRACTION","FAILED_EXTRACTION","dev.racci.minix.api.updater.UpdateResult.FAILED_EXTRACTION"]},{"name":"FAILED_KEY","description":"dev.racci.minix.api.updater.UpdateResult.FAILED_KEY","location":"Minix-API/dev.racci.minix.api.updater/-update-result/-f-a-i-l-e-d_-k-e-y/index.html","searchKeys":["FAILED_KEY","FAILED_KEY","dev.racci.minix.api.updater.UpdateResult.FAILED_KEY"]},{"name":"FAILED_LOADING","description":"dev.racci.minix.api.extension.ExtensionState.FAILED_LOADING","location":"Minix-API/dev.racci.minix.api.extension/-extension-state/-f-a-i-l-e-d_-l-o-a-d-i-n-g/index.html","searchKeys":["FAILED_LOADING","FAILED_LOADING","dev.racci.minix.api.extension.ExtensionState.FAILED_LOADING"]},{"name":"FAILED_NO_FILE","description":"dev.racci.minix.api.updater.UpdateResult.FAILED_NO_FILE","location":"Minix-API/dev.racci.minix.api.updater/-update-result/-f-a-i-l-e-d_-n-o_-f-i-l-e/index.html","searchKeys":["FAILED_NO_FILE","FAILED_NO_FILE","dev.racci.minix.api.updater.UpdateResult.FAILED_NO_FILE"]},{"name":"FAILED_NO_VERSION","description":"dev.racci.minix.api.updater.UpdateResult.FAILED_NO_VERSION","location":"Minix-API/dev.racci.minix.api.updater/-update-result/-f-a-i-l-e-d_-n-o_-v-e-r-s-i-o-n/index.html","searchKeys":["FAILED_NO_VERSION","FAILED_NO_VERSION","dev.racci.minix.api.updater.UpdateResult.FAILED_NO_VERSION"]},{"name":"FAILED_UNLOADING","description":"dev.racci.minix.api.extension.ExtensionState.FAILED_UNLOADING","location":"Minix-API/dev.racci.minix.api.extension/-extension-state/-f-a-i-l-e-d_-u-n-l-o-a-d-i-n-g/index.html","searchKeys":["FAILED_UNLOADING","FAILED_UNLOADING","dev.racci.minix.api.extension.ExtensionState.FAILED_UNLOADING"]},{"name":"FAILED_VERSION","description":"dev.racci.minix.api.updater.UpdateResult.FAILED_VERSION","location":"Minix-API/dev.racci.minix.api.updater/-update-result/-f-a-i-l-e-d_-v-e-r-s-i-o-n/index.html","searchKeys":["FAILED_VERSION","FAILED_VERSION","dev.racci.minix.api.updater.UpdateResult.FAILED_VERSION"]},{"name":"FAILED_VERSION_INCOMPATIBLE","description":"dev.racci.minix.api.updater.UpdateResult.FAILED_VERSION_INCOMPATIBLE","location":"Minix-API/dev.racci.minix.api.updater/-update-result/-f-a-i-l-e-d_-v-e-r-s-i-o-n_-i-n-c-o-m-p-a-t-i-b-l-e/index.html","searchKeys":["FAILED_VERSION_INCOMPATIBLE","FAILED_VERSION_INCOMPATIBLE","dev.racci.minix.api.updater.UpdateResult.FAILED_VERSION_INCOMPATIBLE"]},{"name":"FATAL","description":"dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.FATAL","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-logging-level/-f-a-t-a-l/index.html","searchKeys":["FATAL","FATAL","dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.FATAL"]},{"name":"INFO","description":"dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.INFO","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-logging-level/-i-n-f-o/index.html","searchKeys":["INFO","INFO","dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.INFO"]},{"name":"LAVA","description":"dev.racci.minix.api.events.LiquidType.LAVA","location":"Minix-API/dev.racci.minix.api.events/-liquid-type/-l-a-v-a/index.html","searchKeys":["LAVA","LAVA","dev.racci.minix.api.events.LiquidType.LAVA"]},{"name":"LOADABLE","description":"dev.racci.minix.api.utils.Loadable.State.LOADABLE","location":"Minix-API/dev.racci.minix.api.utils/-loadable/-state/-l-o-a-d-a-b-l-e/index.html","searchKeys":["LOADABLE","LOADABLE","dev.racci.minix.api.utils.Loadable.State.LOADABLE"]},{"name":"LOADED","description":"dev.racci.minix.api.extension.ExtensionState.LOADED","location":"Minix-API/dev.racci.minix.api.extension/-extension-state/-l-o-a-d-e-d/index.html","searchKeys":["LOADED","LOADED","dev.racci.minix.api.extension.ExtensionState.LOADED"]},{"name":"LOADED","description":"dev.racci.minix.api.utils.Loadable.State.LOADED","location":"Minix-API/dev.racci.minix.api.utils/-loadable/-state/-l-o-a-d-e-d/index.html","searchKeys":["LOADED","LOADED","dev.racci.minix.api.utils.Loadable.State.LOADED"]},{"name":"LOADING","description":"dev.racci.minix.api.extension.ExtensionState.LOADING","location":"Minix-API/dev.racci.minix.api.extension/-extension-state/-l-o-a-d-i-n-g/index.html","searchKeys":["LOADING","LOADING","dev.racci.minix.api.extension.ExtensionState.LOADING"]},{"name":"MD5","description":"dev.racci.minix.api.updater.ChecksumType.MD5","location":"Minix-API/dev.racci.minix.api.updater/-checksum-type/-m-d5/index.html","searchKeys":["MD5","MD5","dev.racci.minix.api.updater.ChecksumType.MD5"]},{"name":"NON","description":"dev.racci.minix.api.events.LiquidType.NON","location":"Minix-API/dev.racci.minix.api.events/-liquid-type/-n-o-n/index.html","searchKeys":["NON","NON","dev.racci.minix.api.events.LiquidType.NON"]},{"name":"NONE","description":"dev.racci.minix.api.updater.ChecksumType.NONE","location":"Minix-API/dev.racci.minix.api.updater/-checksum-type/-n-o-n-e/index.html","searchKeys":["NONE","NONE","dev.racci.minix.api.updater.ChecksumType.NONE"]},{"name":"NO_UPDATE","description":"dev.racci.minix.api.updater.UpdateResult.NO_UPDATE","location":"Minix-API/dev.racci.minix.api.updater/-update-result/-n-o_-u-p-d-a-t-e/index.html","searchKeys":["NO_UPDATE","NO_UPDATE","dev.racci.minix.api.updater.UpdateResult.NO_UPDATE"]},{"name":"RC","description":"dev.racci.minix.api.updater.ReleaseType.RC","location":"Minix-API/dev.racci.minix.api.updater/-release-type/-r-c/index.html","searchKeys":["RC","RC","dev.racci.minix.api.updater.ReleaseType.RC"]},{"name":"RELEASE","description":"dev.racci.minix.api.updater.ReleaseType.RELEASE","location":"Minix-API/dev.racci.minix.api.updater/-release-type/-r-e-l-e-a-s-e/index.html","searchKeys":["RELEASE","RELEASE","dev.racci.minix.api.updater.ReleaseType.RELEASE"]},{"name":"REMOVE","description":"dev.racci.minix.api.utils.collections.ObservableAction.REMOVE","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-action/-r-e-m-o-v-e/index.html","searchKeys":["REMOVE","REMOVE","dev.racci.minix.api.utils.collections.ObservableAction.REMOVE"]},{"name":"REMOVE_ALL","description":"dev.racci.minix.api.utils.collections.ObservableAction.REMOVE_ALL","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-action/-r-e-m-o-v-e_-a-l-l/index.html","searchKeys":["REMOVE_ALL","REMOVE_ALL","dev.racci.minix.api.utils.collections.ObservableAction.REMOVE_ALL"]},{"name":"REPLACE","description":"dev.racci.minix.api.utils.collections.ObservableAction.REPLACE","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-action/-r-e-p-l-a-c-e/index.html","searchKeys":["REPLACE","REPLACE","dev.racci.minix.api.utils.collections.ObservableAction.REPLACE"]},{"name":"SET","description":"dev.racci.minix.api.utils.collections.ObservableAction.SET","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-action/-s-e-t/index.html","searchKeys":["SET","SET","dev.racci.minix.api.utils.collections.ObservableAction.SET"]},{"name":"SHA1","description":"dev.racci.minix.api.updater.ChecksumType.SHA1","location":"Minix-API/dev.racci.minix.api.updater/-checksum-type/-s-h-a1/index.html","searchKeys":["SHA1","SHA1","dev.racci.minix.api.updater.ChecksumType.SHA1"]},{"name":"SHA224","description":"dev.racci.minix.api.updater.ChecksumType.SHA224","location":"Minix-API/dev.racci.minix.api.updater/-checksum-type/-s-h-a224/index.html","searchKeys":["SHA224","SHA224","dev.racci.minix.api.updater.ChecksumType.SHA224"]},{"name":"SHA256","description":"dev.racci.minix.api.updater.ChecksumType.SHA256","location":"Minix-API/dev.racci.minix.api.updater/-checksum-type/-s-h-a256/index.html","searchKeys":["SHA256","SHA256","dev.racci.minix.api.updater.ChecksumType.SHA256"]},{"name":"SHA384","description":"dev.racci.minix.api.updater.ChecksumType.SHA384","location":"Minix-API/dev.racci.minix.api.updater/-checksum-type/-s-h-a384/index.html","searchKeys":["SHA384","SHA384","dev.racci.minix.api.updater.ChecksumType.SHA384"]},{"name":"SHA512","description":"dev.racci.minix.api.updater.ChecksumType.SHA512","location":"Minix-API/dev.racci.minix.api.updater/-checksum-type/-s-h-a512/index.html","searchKeys":["SHA512","SHA512","dev.racci.minix.api.updater.ChecksumType.SHA512"]},{"name":"SNAPSHOT","description":"dev.racci.minix.api.updater.ReleaseType.SNAPSHOT","location":"Minix-API/dev.racci.minix.api.updater/-release-type/-s-n-a-p-s-h-o-t/index.html","searchKeys":["SNAPSHOT","SNAPSHOT","dev.racci.minix.api.updater.ReleaseType.SNAPSHOT"]},{"name":"SUCCESS","description":"dev.racci.minix.api.updater.UpdateResult.SUCCESS","location":"Minix-API/dev.racci.minix.api.updater/-update-result/-s-u-c-c-e-s-s/index.html","searchKeys":["SUCCESS","SUCCESS","dev.racci.minix.api.updater.UpdateResult.SUCCESS"]},{"name":"TRACE","description":"dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.TRACE","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-logging-level/-t-r-a-c-e/index.html","searchKeys":["TRACE","TRACE","dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.TRACE"]},{"name":"UNKNOWN","description":"dev.racci.minix.api.updater.ReleaseType.UNKNOWN","location":"Minix-API/dev.racci.minix.api.updater/-release-type/-u-n-k-n-o-w-n/index.html","searchKeys":["UNKNOWN","UNKNOWN","dev.racci.minix.api.updater.ReleaseType.UNKNOWN"]},{"name":"UNLOADED","description":"dev.racci.minix.api.extension.ExtensionState.UNLOADED","location":"Minix-API/dev.racci.minix.api.extension/-extension-state/-u-n-l-o-a-d-e-d/index.html","searchKeys":["UNLOADED","UNLOADED","dev.racci.minix.api.extension.ExtensionState.UNLOADED"]},{"name":"UNLOADED","description":"dev.racci.minix.api.utils.Loadable.State.UNLOADED","location":"Minix-API/dev.racci.minix.api.utils/-loadable/-state/-u-n-l-o-a-d-e-d/index.html","searchKeys":["UNLOADED","UNLOADED","dev.racci.minix.api.utils.Loadable.State.UNLOADED"]},{"name":"UNLOADING","description":"dev.racci.minix.api.extension.ExtensionState.UNLOADING","location":"Minix-API/dev.racci.minix.api.extension/-extension-state/-u-n-l-o-a-d-i-n-g/index.html","searchKeys":["UNLOADING","UNLOADING","dev.racci.minix.api.extension.ExtensionState.UNLOADING"]},{"name":"UPDATE","description":"dev.racci.minix.api.updater.UpdateMode.UPDATE","location":"Minix-API/dev.racci.minix.api.updater/-update-mode/-u-p-d-a-t-e/index.html","searchKeys":["UPDATE","UPDATE","dev.racci.minix.api.updater.UpdateMode.UPDATE"]},{"name":"UPDATE_FOUND","description":"dev.racci.minix.api.updater.UpdateResult.UPDATE_FOUND","location":"Minix-API/dev.racci.minix.api.updater/-update-result/-u-p-d-a-t-e_-f-o-u-n-d/index.html","searchKeys":["UPDATE_FOUND","UPDATE_FOUND","dev.racci.minix.api.updater.UpdateResult.UPDATE_FOUND"]},{"name":"WARN","description":"dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.WARN","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-logging-level/-w-a-r-n/index.html","searchKeys":["WARN","WARN","dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.WARN"]},{"name":"WATER","description":"dev.racci.minix.api.events.LiquidType.WATER","location":"Minix-API/dev.racci.minix.api.events/-liquid-type/-w-a-t-e-r/index.html","searchKeys":["WATER","WATER","dev.racci.minix.api.events.LiquidType.WATER"]},{"name":"abstract class BaseOnlineProvider : UpdateProvider","description":"dev.racci.minix.api.updater.providers.BaseOnlineProvider","location":"Minix-API/dev.racci.minix.api.updater.providers/-base-online-provider/index.html","searchKeys":["BaseOnlineProvider","abstract class BaseOnlineProvider : UpdateProvider","dev.racci.minix.api.updater.providers.BaseOnlineProvider"]},{"name":"abstract class BaseOnlineProviderWithDownload : BaseOnlineProvider","description":"dev.racci.minix.api.updater.providers.BaseOnlineProviderWithDownload","location":"Minix-API/dev.racci.minix.api.updater.providers/-base-online-provider-with-download/index.html","searchKeys":["BaseOnlineProviderWithDownload","abstract class BaseOnlineProviderWithDownload : BaseOnlineProvider","dev.racci.minix.api.updater.providers.BaseOnlineProviderWithDownload"]},{"name":"abstract class Closeable<T : Any>","description":"dev.racci.minix.api.utils.Closeable","location":"Minix-API/dev.racci.minix.api.utils/-closeable/index.html","searchKeys":["Closeable","abstract class Closeable<T : Any>","dev.racci.minix.api.utils.Closeable"]},{"name":"abstract class Configurate<T : ClosedRange<*>> : TypeSerializer<T> ","description":"dev.racci.minix.api.serializables.RangeSerializer.Configurate","location":"Minix-API/dev.racci.minix.api.serializables/-range-serializer/-configurate/index.html","searchKeys":["Configurate","abstract class Configurate<T : ClosedRange<*>> : TypeSerializer<T> ","dev.racci.minix.api.serializables.RangeSerializer.Configurate"]},{"name":"abstract class CoroutineRunnable","description":"dev.racci.minix.api.scheduler.CoroutineRunnable","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-runnable/index.html","searchKeys":["CoroutineRunnable","abstract class CoroutineRunnable","dev.racci.minix.api.scheduler.CoroutineRunnable"]},{"name":"abstract class DataService : Extension<Minix> ","description":"dev.racci.minix.api.services.DataService","location":"Minix-API/dev.racci.minix.api.services/-data-service/index.html","searchKeys":["DataService","abstract class DataService : Extension<Minix> ","dev.racci.minix.api.services.DataService"]},{"name":"abstract class Extension<P : MinixPlugin> : ExtensionSkeleton<P> ","description":"dev.racci.minix.api.extension.Extension","location":"Minix-API/dev.racci.minix.api.extension/-extension/index.html","searchKeys":["Extension","abstract class Extension<P : MinixPlugin> : ExtensionSkeleton<P> ","dev.racci.minix.api.extension.Extension"]},{"name":"abstract class ExtensionCompanion<E : Extension<*>>","description":"dev.racci.minix.api.extension.Extension.ExtensionCompanion","location":"Minix-API/dev.racci.minix.api.extension/-extension/-extension-companion/index.html","searchKeys":["ExtensionCompanion","abstract class ExtensionCompanion<E : Extension<*>>","dev.racci.minix.api.extension.Extension.ExtensionCompanion"]},{"name":"abstract class KEvent(async: Boolean = false) : Event, Cancellable","description":"dev.racci.minix.api.events.KEvent","location":"Minix-API/dev.racci.minix.api.events/-k-event/index.html","searchKeys":["KEvent","abstract class KEvent(async: Boolean = false) : Event, Cancellable","dev.racci.minix.api.events.KEvent"]},{"name":"abstract class KPlayerEvent(player: Player, async: Boolean = false) : PlayerEvent, Cancellable","description":"dev.racci.minix.api.events.KPlayerEvent","location":"Minix-API/dev.racci.minix.api.events/-k-player-event/index.html","searchKeys":["KPlayerEvent","abstract class KPlayerEvent(player: Player, async: Boolean = false) : PlayerEvent, Cancellable","dev.racci.minix.api.events.KPlayerEvent"]},{"name":"abstract class KWorldEvent(world: World) : WorldEvent, Cancellable","description":"dev.racci.minix.api.events.KWorldEvent","location":"Minix-API/dev.racci.minix.api.events/-k-world-event/index.html","searchKeys":["KWorldEvent","abstract class KWorldEvent(world: World) : WorldEvent, Cancellable","dev.racci.minix.api.events.KWorldEvent"]},{"name":"abstract class LangConfig<P : MinixPlugin> : MinixConfig<P> ","description":"dev.racci.minix.api.data.LangConfig","location":"Minix-API/dev.racci.minix.api.data/-lang-config/index.html","searchKeys":["LangConfig","abstract class LangConfig<P : MinixPlugin> : MinixConfig<P> ","dev.racci.minix.api.data.LangConfig"]},{"name":"abstract class Loadable<T>","description":"dev.racci.minix.api.utils.Loadable","location":"Minix-API/dev.racci.minix.api.utils/-loadable/index.html","searchKeys":["Loadable","abstract class Loadable<T>","dev.racci.minix.api.utils.Loadable"]},{"name":"abstract class Minix : MinixPlugin","description":"dev.racci.minix.api.plugin.Minix","location":"Minix-API/dev.racci.minix.api.plugin/-minix/index.html","searchKeys":["Minix","abstract class Minix : MinixPlugin","dev.racci.minix.api.plugin.Minix"]},{"name":"abstract class MinixConfig<P : MinixPlugin> : WithPlugin<P> ","description":"dev.racci.minix.api.data.MinixConfig","location":"Minix-API/dev.racci.minix.api.data/-minix-config/index.html","searchKeys":["MinixConfig","abstract class MinixConfig<P : MinixPlugin> : WithPlugin<P> ","dev.racci.minix.api.data.MinixConfig"]},{"name":"abstract class MinixLogger","description":"dev.racci.minix.api.plugin.logger.MinixLogger","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/index.html","searchKeys":["MinixLogger","abstract class MinixLogger","dev.racci.minix.api.plugin.logger.MinixLogger"]},{"name":"abstract class MinixPlugin : JavaPlugin, SusPlugin","description":"dev.racci.minix.api.plugin.MinixPlugin","location":"Minix-API/dev.racci.minix.api.plugin/-minix-plugin/index.html","searchKeys":["MinixPlugin","abstract class MinixPlugin : JavaPlugin, SusPlugin","dev.racci.minix.api.plugin.MinixPlugin"]},{"name":"abstract class ObservableCollection<T> : ObservableHolder<T> , MutableCollection<T> ","description":"dev.racci.minix.api.utils.collections.ObservableCollection","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-collection/index.html","searchKeys":["ObservableCollection","abstract class ObservableCollection<T> : ObservableHolder<T> , MutableCollection<T> ","dev.racci.minix.api.utils.collections.ObservableCollection"]},{"name":"abstract class ObservableHolder<T>","description":"dev.racci.minix.api.utils.collections.ObservableHolder","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-holder/index.html","searchKeys":["ObservableHolder","abstract class ObservableHolder<T>","dev.racci.minix.api.utils.collections.ObservableHolder"]},{"name":"abstract class PropertyFinder<R>","description":"dev.racci.minix.api.utils.PropertyFinder","location":"Minix-API/dev.racci.minix.api.utils/-property-finder/index.html","searchKeys":["PropertyFinder","abstract class PropertyFinder<R>","dev.racci.minix.api.utils.PropertyFinder"]},{"name":"abstract class RangeSerializer<T : ClosedRange<*>> : KSerializer<T> ","description":"dev.racci.minix.api.serializables.RangeSerializer","location":"Minix-API/dev.racci.minix.api.serializables/-range-serializer/index.html","searchKeys":["RangeSerializer","abstract class RangeSerializer<T : ClosedRange<*>> : KSerializer<T> ","dev.racci.minix.api.serializables.RangeSerializer"]},{"name":"abstract class UpdateProvider : KoinComponent","description":"dev.racci.minix.api.updater.providers.UpdateProvider","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/index.html","searchKeys":["UpdateProvider","abstract class UpdateProvider : KoinComponent","dev.racci.minix.api.updater.providers.UpdateProvider"]},{"name":"abstract fun <P : MinixPlugin, T : MinixConfig<P>> getConfig(kClass: KClass<T>): T?","description":"dev.racci.minix.api.services.DataService.getConfig","location":"Minix-API/dev.racci.minix.api.services/-data-service/get-config.html","searchKeys":["getConfig","abstract fun <P : MinixPlugin, T : MinixConfig<P>> getConfig(kClass: KClass<T>): T?","dev.racci.minix.api.services.DataService.getConfig"]},{"name":"abstract fun Attribute.addModifier(vararg modifiers: AttributeModifier): B","description":"dev.racci.minix.api.builders.BaseItemBuilder.addModifier","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/add-modifier.html","searchKeys":["addModifier","abstract fun Attribute.addModifier(vararg modifiers: AttributeModifier): B","dev.racci.minix.api.builders.BaseItemBuilder.addModifier"]},{"name":"abstract fun Attribute.clearModifiers(): B","description":"dev.racci.minix.api.builders.BaseItemBuilder.clearModifiers","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/clear-modifiers.html","searchKeys":["clearModifiers","abstract fun Attribute.clearModifiers(): B","dev.racci.minix.api.builders.BaseItemBuilder.clearModifiers"]},{"name":"abstract fun Attribute.removeModifier(vararg modifiers: AttributeModifier): B","description":"dev.racci.minix.api.builders.BaseItemBuilder.removeModifier","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/remove-modifier.html","searchKeys":["removeModifier","abstract fun Attribute.removeModifier(vararg modifiers: AttributeModifier): B","dev.racci.minix.api.builders.BaseItemBuilder.removeModifier"]},{"name":"abstract fun activateTasks(plugin: MinixPlugin): IntArray?","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.activateTasks","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/activate-tasks.html","searchKeys":["activateTasks","abstract fun activateTasks(plugin: MinixPlugin): IntArray?","dev.racci.minix.api.scheduler.CoroutineScheduler.activateTasks"]},{"name":"abstract fun add(element: E, expireTime: Int, onExpire: OnExpireCallback<E>? = null)","description":"dev.racci.minix.api.utils.collections.ExpirationList.add","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list/add.html","searchKeys":["add","abstract fun add(element: E, expireTime: Int, onExpire: OnExpireCallback<E>? = null)","dev.racci.minix.api.utils.collections.ExpirationList.add"]},{"name":"abstract fun addEffects(vararg effects: FireworkEffect): FireworkBuilder","description":"dev.racci.minix.api.builders.FireworkBuilder.addEffects","location":"Minix-API/dev.racci.minix.api.builders/-firework-builder/add-effects.html","searchKeys":["addEffects","abstract fun addEffects(vararg effects: FireworkEffect): FireworkBuilder","dev.racci.minix.api.builders.FireworkBuilder.addEffects"]},{"name":"abstract fun addEnchant(vararg enchantments: Pair<Enchantment, Int>): B","description":"dev.racci.minix.api.builders.BaseItemBuilder.addEnchant","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/add-enchant.html","searchKeys":["addEnchant","abstract fun addEnchant(vararg enchantments: Pair<Enchantment, Int>): B","dev.racci.minix.api.builders.BaseItemBuilder.addEnchant"]},{"name":"abstract fun addFirst(element: E, expireTime: Int, onExpire: OnExpireCallback<E>? = null)","description":"dev.racci.minix.api.utils.collections.ExpirationList.addFirst","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list/add-first.html","searchKeys":["addFirst","abstract fun addFirst(element: E, expireTime: Int, onExpire: OnExpireCallback<E>? = null)","dev.racci.minix.api.utils.collections.ExpirationList.addFirst"]},{"name":"abstract fun addFlag(vararg flags: ItemFlag): B","description":"dev.racci.minix.api.builders.BaseItemBuilder.addFlag","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/add-flag.html","searchKeys":["addFlag","abstract fun addFlag(vararg flags: ItemFlag): B","dev.racci.minix.api.builders.BaseItemBuilder.addFlag"]},{"name":"abstract fun addPage(vararg pages: Component): BookBuilder","description":"dev.racci.minix.api.builders.BookBuilder.addPage","location":"Minix-API/dev.racci.minix.api.builders/-book-builder/add-page.html","searchKeys":["addPage","abstract fun addPage(vararg pages: Component): BookBuilder","dev.racci.minix.api.builders.BookBuilder.addPage"]},{"name":"abstract fun addPattern(vararg pattern: Pattern): BannerBuilder","description":"dev.racci.minix.api.builders.BannerBuilder.addPattern","location":"Minix-API/dev.racci.minix.api.builders/-banner-builder/add-pattern.html","searchKeys":["addPattern","abstract fun addPattern(vararg pattern: Pattern): BannerBuilder","dev.racci.minix.api.builders.BannerBuilder.addPattern"]},{"name":"abstract fun async(): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineTask.async","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-task/async.html","searchKeys":["async","abstract fun async(): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineTask.async"]},{"name":"abstract fun axis(): DoubleArray","description":"dev.racci.minix.api.utils.minecraft.VectorComparable.axis","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-vector-comparable/axis.html","searchKeys":["axis","abstract fun axis(): DoubleArray","dev.racci.minix.api.utils.minecraft.VectorComparable.axis"]},{"name":"abstract fun banner(itemStack: ItemStack = ItemStack(Material.WHITE_BANNER), builder: BannerBuilder.() -> Unit = {}): ItemStack","description":"dev.racci.minix.api.builders.ItemBuilderDSL.banner","location":"Minix-API/dev.racci.minix.api.builders/-item-builder-d-s-l/banner.html","searchKeys":["banner","abstract fun banner(itemStack: ItemStack = ItemStack(Material.WHITE_BANNER), builder: BannerBuilder.() -> Unit = {}): ItemStack","dev.racci.minix.api.builders.ItemBuilderDSL.banner"]},{"name":"abstract fun book(itemStack: ItemStack = ItemStack(Material.WRITTEN_BOOK), builder: BookBuilder.() -> Unit = {}): ItemStack","description":"dev.racci.minix.api.builders.ItemBuilderDSL.book","location":"Minix-API/dev.racci.minix.api.builders/-item-builder-d-s-l/book.html","searchKeys":["book","abstract fun book(itemStack: ItemStack = ItemStack(Material.WRITTEN_BOOK), builder: BookBuilder.() -> Unit = {}): ItemStack","dev.racci.minix.api.builders.ItemBuilderDSL.book"]},{"name":"abstract fun build(): ItemStack","description":"dev.racci.minix.api.builders.BaseItemBuilder.build","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/build.html","searchKeys":["build","abstract fun build(): ItemStack","dev.racci.minix.api.builders.BaseItemBuilder.build"]},{"name":"abstract fun cancel(): Boolean","description":"dev.racci.minix.api.scheduler.CoroutineTask.cancel","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-task/cancel.html","searchKeys":["cancel","abstract fun cancel(): Boolean","dev.racci.minix.api.scheduler.CoroutineTask.cancel"]},{"name":"abstract fun cancelTask(taskID: Int): Boolean","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.cancelTask","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/cancel-task.html","searchKeys":["cancelTask","abstract fun cancelTask(taskID: Int): Boolean","dev.racci.minix.api.scheduler.CoroutineScheduler.cancelTask"]},{"name":"abstract fun checkForUpdate(updater: PluginUpdater): Boolean","description":"dev.racci.minix.api.services.UpdaterService.checkForUpdate","location":"Minix-API/dev.racci.minix.api.services/-updater-service/check-for-update.html","searchKeys":["checkForUpdate","abstract fun checkForUpdate(updater: PluginUpdater): Boolean","dev.racci.minix.api.services.UpdaterService.checkForUpdate"]},{"name":"abstract fun clear()","description":"dev.racci.minix.api.utils.collections.ExpirationList.clear","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list/clear.html","searchKeys":["clear","abstract fun clear()","dev.racci.minix.api.utils.collections.ExpirationList.clear"]},{"name":"abstract fun create(): T","description":"dev.racci.minix.api.utils.Closeable.create","location":"Minix-API/dev.racci.minix.api.utils/-closeable/create.html","searchKeys":["create","abstract fun create(): T","dev.racci.minix.api.utils.Closeable.create"]},{"name":"abstract fun disable(plugin: MinixPlugin)","description":"dev.racci.minix.api.coroutine.contract.CoroutineService.disable","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-coroutine-service/disable.html","searchKeys":["disable","abstract fun disable(plugin: MinixPlugin)","dev.racci.minix.api.coroutine.contract.CoroutineService.disable"]},{"name":"abstract fun dispose()","description":"dev.racci.minix.api.coroutine.contract.CoroutineSession.dispose","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-coroutine-session/dispose.html","searchKeys":["dispose","abstract fun dispose()","dev.racci.minix.api.coroutine.contract.CoroutineSession.dispose"]},{"name":"abstract fun dispose()","description":"dev.racci.minix.api.coroutine.contract.WakeUpBlockService.dispose","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-wake-up-block-service/dispose.html","searchKeys":["dispose","abstract fun dispose()","dev.racci.minix.api.coroutine.contract.WakeUpBlockService.dispose"]},{"name":"abstract fun ensureWakeup()","description":"dev.racci.minix.api.coroutine.contract.WakeUpBlockService.ensureWakeup","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-wake-up-block-service/ensure-wakeup.html","searchKeys":["ensureWakeup","abstract fun ensureWakeup()","dev.racci.minix.api.coroutine.contract.WakeUpBlockService.ensureWakeup"]},{"name":"abstract fun expire(key: K, time: Long): Boolean","description":"dev.racci.minix.api.utils.collections.ExpirationMap.expire","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-map/expire.html","searchKeys":["expire","abstract fun expire(key: K, time: Long): Boolean","dev.racci.minix.api.utils.collections.ExpirationMap.expire"]},{"name":"abstract fun expire(key: K, time: Long, callback: OnExpireMapCallback<K, V>): Boolean","description":"dev.racci.minix.api.utils.collections.ExpirationMap.expire","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-map/expire.html","searchKeys":["expire","abstract fun expire(key: K, time: Long, callback: OnExpireMapCallback<K, V>): Boolean","dev.racci.minix.api.utils.collections.ExpirationMap.expire"]},{"name":"abstract fun factor(axis: IntArray): T","description":"dev.racci.minix.api.utils.minecraft.VectorComparable.factor","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-vector-comparable/factor.html","searchKeys":["factor","abstract fun factor(axis: IntArray): T","dev.racci.minix.api.utils.minecraft.VectorComparable.factor"]},{"name":"abstract fun fireSuspendingEvent(event: Event): Collection<Job>","description":"dev.racci.minix.api.coroutine.contract.EventService.fireSuspendingEvent","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-event-service/fire-suspending-event.html","searchKeys":["fireSuspendingEvent","abstract fun fireSuspendingEvent(event: Event): Collection<Job>","dev.racci.minix.api.coroutine.contract.EventService.fireSuspendingEvent"]},{"name":"abstract fun firework(itemStack: ItemStack = ItemStack(Material.FIREWORK_ROCKET), builder: FireworkBuilder.() -> Unit = {}): ItemStack","description":"dev.racci.minix.api.builders.ItemBuilderDSL.firework","location":"Minix-API/dev.racci.minix.api.builders/-item-builder-d-s-l/firework.html","searchKeys":["firework","abstract fun firework(itemStack: ItemStack = ItemStack(Material.FIREWORK_ROCKET), builder: FireworkBuilder.() -> Unit = {}): ItemStack","dev.racci.minix.api.builders.ItemBuilderDSL.firework"]},{"name":"abstract fun first(): E?","description":"dev.racci.minix.api.utils.collections.ExpirationList.first","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list/first.html","searchKeys":["first","abstract fun first(): E?","dev.racci.minix.api.utils.collections.ExpirationList.first"]},{"name":"abstract fun firstNonMinixPlugin(): MinixPlugin?","description":"dev.racci.minix.api.services.PluginService.firstNonMinixPlugin","location":"Minix-API/dev.racci.minix.api.services/-plugin-service/first-non-minix-plugin.html","searchKeys":["firstNonMinixPlugin","abstract fun firstNonMinixPlugin(): MinixPlugin?","dev.racci.minix.api.services.PluginService.firstNonMinixPlugin"]},{"name":"abstract fun from(itemStack: ItemStack, builder: ItemBuilder.() -> Unit = {}): ItemStack","description":"dev.racci.minix.api.builders.ItemBuilderDSL.from","location":"Minix-API/dev.racci.minix.api.builders/-item-builder-d-s-l/from.html","searchKeys":["from","abstract fun from(itemStack: ItemStack, builder: ItemBuilder.() -> Unit = {}): ItemStack","dev.racci.minix.api.builders.ItemBuilderDSL.from"]},{"name":"abstract fun from(material: Material, builder: ItemBuilder.() -> Unit = {}): ItemStack","description":"dev.racci.minix.api.builders.ItemBuilderDSL.from","location":"Minix-API/dev.racci.minix.api.builders/-item-builder-d-s-l/from.html","searchKeys":["from","abstract fun from(material: Material, builder: ItemBuilder.() -> Unit = {}): ItemStack","dev.racci.minix.api.builders.ItemBuilderDSL.from"]},{"name":"abstract fun fromClassloader(classLoader: ClassLoader): MinixPlugin?","description":"dev.racci.minix.api.services.PluginService.fromClassloader","location":"Minix-API/dev.racci.minix.api.services/-plugin-service/from-classloader.html","searchKeys":["fromClassloader","abstract fun fromClassloader(classLoader: ClassLoader): MinixPlugin?","dev.racci.minix.api.services.PluginService.fromClassloader"]},{"name":"abstract fun getCoroutineSession(plugin: MinixPlugin): CoroutineSession","description":"dev.racci.minix.api.coroutine.contract.CoroutineService.getCoroutineSession","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-coroutine-service/get-coroutine-session.html","searchKeys":["getCoroutineSession","abstract fun getCoroutineSession(plugin: MinixPlugin): CoroutineSession","dev.racci.minix.api.coroutine.contract.CoroutineService.getCoroutineSession"]},{"name":"abstract fun getString(itemStack: ItemStack, key: String?): String?","description":"dev.racci.minix.api.utils.minecraft.NbtWrapper.getString","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-nbt-wrapper/get-string.html","searchKeys":["getString","abstract fun getString(itemStack: ItemStack, key: String?): String?","dev.racci.minix.api.utils.minecraft.NbtWrapper.getString"]},{"name":"abstract fun head(itemStack: ItemStack = ItemStack(Material.PLAYER_HEAD), builder: HeadBuilder.() -> Unit = {}): ItemStack","description":"dev.racci.minix.api.builders.ItemBuilderDSL.head","location":"Minix-API/dev.racci.minix.api.builders/-item-builder-d-s-l/head.html","searchKeys":["head","abstract fun head(itemStack: ItemStack = ItemStack(Material.PLAYER_HEAD), builder: HeadBuilder.() -> Unit = {}): ItemStack","dev.racci.minix.api.builders.ItemBuilderDSL.head"]},{"name":"abstract fun indexOf(element: E): Int","description":"dev.racci.minix.api.utils.collections.ExpirationList.indexOf","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list/index-of.html","searchKeys":["indexOf","abstract fun indexOf(element: E): Int","dev.racci.minix.api.utils.collections.ExpirationList.indexOf"]},{"name":"abstract fun isCurrentlyRunning(taskID: Int): Boolean","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.isCurrentlyRunning","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/is-currently-running.html","searchKeys":["isCurrentlyRunning","abstract fun isCurrentlyRunning(taskID: Int): Boolean","dev.racci.minix.api.scheduler.CoroutineScheduler.isCurrentlyRunning"]},{"name":"abstract fun isEmpty(): Boolean","description":"dev.racci.minix.api.utils.collections.ExpirationList.isEmpty","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list/is-empty.html","searchKeys":["isEmpty","abstract fun isEmpty(): Boolean","dev.racci.minix.api.utils.collections.ExpirationList.isEmpty"]},{"name":"abstract fun last(): E?","description":"dev.racci.minix.api.utils.collections.ExpirationList.last","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list/last.html","searchKeys":["last","abstract fun last(): E?","dev.racci.minix.api.utils.collections.ExpirationList.last"]},{"name":"abstract fun launch(dispatcher: CoroutineContext, parentScope: CoroutineScope?, f: suspend CoroutineScope.() -> Unit): Job","description":"dev.racci.minix.api.coroutine.contract.CoroutineSession.launch","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-coroutine-session/launch.html","searchKeys":["launch","abstract fun launch(dispatcher: CoroutineContext, parentScope: CoroutineScope?, f: suspend CoroutineScope.() -> Unit): Job","dev.racci.minix.api.coroutine.contract.CoroutineSession.launch"]},{"name":"abstract fun loadPlugin(plugin: MinixPlugin)","description":"dev.racci.minix.api.services.PluginService.loadPlugin","location":"Minix-API/dev.racci.minix.api.services/-plugin-service/load-plugin.html","searchKeys":["loadPlugin","abstract fun loadPlugin(plugin: MinixPlugin)","dev.racci.minix.api.services.PluginService.loadPlugin"]},{"name":"abstract fun lore(vararg component: Component): B","description":"dev.racci.minix.api.builders.BaseItemBuilder.lore","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/lore.html","searchKeys":["lore","abstract fun lore(vararg component: Component): B","dev.racci.minix.api.builders.BaseItemBuilder.lore"]},{"name":"abstract fun map(itemStack: ItemStack = ItemStack(Material.MAP), builder: MapBuilder.() -> Unit = {}): ItemStack","description":"dev.racci.minix.api.builders.ItemBuilderDSL.map","location":"Minix-API/dev.racci.minix.api.builders/-item-builder-d-s-l/map.html","searchKeys":["map","abstract fun map(itemStack: ItemStack = ItemStack(Material.MAP), builder: MapBuilder.() -> Unit = {}): ItemStack","dev.racci.minix.api.builders.ItemBuilderDSL.map"]},{"name":"abstract fun missingTime(element: E): Int?","description":"dev.racci.minix.api.utils.collections.ExpirationList.missingTime","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list/missing-time.html","searchKeys":["missingTime","abstract fun missingTime(element: E): Int?","dev.racci.minix.api.utils.collections.ExpirationList.missingTime"]},{"name":"abstract fun missingTime(key: K): Long?","description":"dev.racci.minix.api.utils.collections.ExpirationMap.missingTime","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-map/missing-time.html","searchKeys":["missingTime","abstract fun missingTime(key: K): Long?","dev.racci.minix.api.utils.collections.ExpirationMap.missingTime"]},{"name":"abstract fun onLoad(): T","description":"dev.racci.minix.api.utils.Loadable.onLoad","location":"Minix-API/dev.racci.minix.api.utils/-loadable/on-load.html","searchKeys":["onLoad","abstract fun onLoad(): T","dev.racci.minix.api.utils.Loadable.onLoad"]},{"name":"abstract fun pdc(block: PDC.() -> Unit): B","description":"dev.racci.minix.api.builders.BaseItemBuilder.pdc","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/pdc.html","searchKeys":["pdc","abstract fun pdc(block: PDC.() -> Unit): B","dev.racci.minix.api.builders.BaseItemBuilder.pdc"]},{"name":"abstract fun put(key: K, value: V, time: Long): V?","description":"dev.racci.minix.api.utils.collections.ExpirationMap.put","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-map/put.html","searchKeys":["put","abstract fun put(key: K, value: V, time: Long): V?","dev.racci.minix.api.utils.collections.ExpirationMap.put"]},{"name":"abstract fun put(key: K, value: V, time: Long, callback: OnExpireMapCallback<K, V>): V?","description":"dev.racci.minix.api.utils.collections.ExpirationMap.put","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-map/put.html","searchKeys":["put","abstract fun put(key: K, value: V, time: Long, callback: OnExpireMapCallback<K, V>): V?","dev.racci.minix.api.utils.collections.ExpirationMap.put"]},{"name":"abstract fun registerSuspendCommandExecutor(pluginCommand: PluginCommand, commandExecutor: SuspendingCommandExecutor)","description":"dev.racci.minix.api.coroutine.contract.CommandService.registerSuspendCommandExecutor","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-command-service/register-suspend-command-executor.html","searchKeys":["registerSuspendCommandExecutor","abstract fun registerSuspendCommandExecutor(pluginCommand: PluginCommand, commandExecutor: SuspendingCommandExecutor)","dev.racci.minix.api.coroutine.contract.CommandService.registerSuspendCommandExecutor"]},{"name":"abstract fun registerSuspendListener(listener: Listener)","description":"dev.racci.minix.api.coroutine.contract.EventService.registerSuspendListener","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-event-service/register-suspend-listener.html","searchKeys":["registerSuspendListener","abstract fun registerSuspendListener(listener: Listener)","dev.racci.minix.api.coroutine.contract.EventService.registerSuspendListener"]},{"name":"abstract fun registerSuspendTabCompleter(pluginCommand: PluginCommand, tabCompleter: SuspendingTabCompleter)","description":"dev.racci.minix.api.coroutine.contract.CommandService.registerSuspendTabCompleter","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-command-service/register-suspend-tab-completer.html","searchKeys":["registerSuspendTabCompleter","abstract fun registerSuspendTabCompleter(pluginCommand: PluginCommand, tabCompleter: SuspendingTabCompleter)","dev.racci.minix.api.coroutine.contract.CommandService.registerSuspendTabCompleter"]},{"name":"abstract fun remove(element: E): Boolean","description":"dev.racci.minix.api.utils.collections.ExpirationList.remove","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list/remove.html","searchKeys":["remove","abstract fun remove(element: E): Boolean","dev.racci.minix.api.utils.collections.ExpirationList.remove"]},{"name":"abstract fun remove(uuid: UUID): Boolean","description":"dev.racci.minix.api.services.PlayerService.remove","location":"Minix-API/dev.racci.minix.api.services/-player-service/remove.html","searchKeys":["remove","abstract fun remove(uuid: UUID): Boolean","dev.racci.minix.api.services.PlayerService.remove"]},{"name":"abstract fun removeAt(index: Int): E?","description":"dev.racci.minix.api.utils.collections.ExpirationList.removeAt","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list/remove-at.html","searchKeys":["removeAt","abstract fun removeAt(index: Int): E?","dev.racci.minix.api.utils.collections.ExpirationList.removeAt"]},{"name":"abstract fun removeEnchant(vararg enchantments: Enchantment): B","description":"dev.racci.minix.api.builders.BaseItemBuilder.removeEnchant","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/remove-enchant.html","searchKeys":["removeEnchant","abstract fun removeEnchant(vararg enchantments: Enchantment): B","dev.racci.minix.api.builders.BaseItemBuilder.removeEnchant"]},{"name":"abstract fun removeFirst(): E?","description":"dev.racci.minix.api.utils.collections.ExpirationList.removeFirst","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list/remove-first.html","searchKeys":["removeFirst","abstract fun removeFirst(): E?","dev.racci.minix.api.utils.collections.ExpirationList.removeFirst"]},{"name":"abstract fun removeFlag(vararg flags: ItemFlag): B","description":"dev.racci.minix.api.builders.BaseItemBuilder.removeFlag","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/remove-flag.html","searchKeys":["removeFlag","abstract fun removeFlag(vararg flags: ItemFlag): B","dev.racci.minix.api.builders.BaseItemBuilder.removeFlag"]},{"name":"abstract fun removeLast(): E?","description":"dev.racci.minix.api.utils.collections.ExpirationList.removeLast","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list/remove-last.html","searchKeys":["removeLast","abstract fun removeLast(): E?","dev.racci.minix.api.utils.collections.ExpirationList.removeLast"]},{"name":"abstract fun removeTag(itemStack: ItemStack, key: String?): ItemStack?","description":"dev.racci.minix.api.utils.minecraft.NbtWrapper.removeTag","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-nbt-wrapper/remove-tag.html","searchKeys":["removeTag","abstract fun removeTag(itemStack: ItemStack, key: String?): ItemStack?","dev.racci.minix.api.utils.minecraft.NbtWrapper.removeTag"]},{"name":"abstract fun runAsyncTask(plugin: MinixPlugin, coroutineTask: CoroutineTask): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.runAsyncTask","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/run-async-task.html","searchKeys":["runAsyncTask","abstract fun runAsyncTask(plugin: MinixPlugin, coroutineTask: CoroutineTask): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineScheduler.runAsyncTask"]},{"name":"abstract fun runAsyncTask(plugin: MinixPlugin, name: String? = null, runnable: CoroutineRunnable): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.runAsyncTask","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/run-async-task.html","searchKeys":["runAsyncTask","abstract fun runAsyncTask(plugin: MinixPlugin, name: String? = null, runnable: CoroutineRunnable): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineScheduler.runAsyncTask"]},{"name":"abstract fun runAsyncTask(plugin: MinixPlugin, name: String? = null, task: CoroutineBlock): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.runAsyncTask","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/run-async-task.html","searchKeys":["runAsyncTask","abstract fun runAsyncTask(plugin: MinixPlugin, name: String? = null, task: CoroutineBlock): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineScheduler.runAsyncTask"]},{"name":"abstract fun runAsyncTaskLater(plugin: MinixPlugin, coroutineTask: CoroutineTask, delay: Duration): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.runAsyncTaskLater","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/run-async-task-later.html","searchKeys":["runAsyncTaskLater","abstract fun runAsyncTaskLater(plugin: MinixPlugin, coroutineTask: CoroutineTask, delay: Duration): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineScheduler.runAsyncTaskLater"]},{"name":"abstract fun runAsyncTaskLater(plugin: MinixPlugin, name: String? = null, task: CoroutineBlock, delay: Duration): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.runAsyncTaskLater","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/run-async-task-later.html","searchKeys":["runAsyncTaskLater","abstract fun runAsyncTaskLater(plugin: MinixPlugin, name: String? = null, task: CoroutineBlock, delay: Duration): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineScheduler.runAsyncTaskLater"]},{"name":"abstract fun runAsyncTaskLater(plugin: MinixPlugin, runnable: CoroutineRunnable, delay: Duration): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.runAsyncTaskLater","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/run-async-task-later.html","searchKeys":["runAsyncTaskLater","abstract fun runAsyncTaskLater(plugin: MinixPlugin, runnable: CoroutineRunnable, delay: Duration): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineScheduler.runAsyncTaskLater"]},{"name":"abstract fun runAsyncTaskTimer(plugin: MinixPlugin, coroutineTask: CoroutineTask, delay: Duration, period: Duration): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.runAsyncTaskTimer","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/run-async-task-timer.html","searchKeys":["runAsyncTaskTimer","abstract fun runAsyncTaskTimer(plugin: MinixPlugin, coroutineTask: CoroutineTask, delay: Duration, period: Duration): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineScheduler.runAsyncTaskTimer"]},{"name":"abstract fun runAsyncTaskTimer(plugin: MinixPlugin, name: String? = null, task: CoroutineBlock, delay: Duration, period: Duration): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.runAsyncTaskTimer","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/run-async-task-timer.html","searchKeys":["runAsyncTaskTimer","abstract fun runAsyncTaskTimer(plugin: MinixPlugin, name: String? = null, task: CoroutineBlock, delay: Duration, period: Duration): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineScheduler.runAsyncTaskTimer"]},{"name":"abstract fun runAsyncTaskTimer(plugin: MinixPlugin, runnable: CoroutineRunnable, delay: Duration, period: Duration): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.runAsyncTaskTimer","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/run-async-task-timer.html","searchKeys":["runAsyncTaskTimer","abstract fun runAsyncTaskTimer(plugin: MinixPlugin, runnable: CoroutineRunnable, delay: Duration, period: Duration): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineScheduler.runAsyncTaskTimer"]},{"name":"abstract fun runTask(plugin: MinixPlugin, coroutineTask: CoroutineTask): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.runTask","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/run-task.html","searchKeys":["runTask","abstract fun runTask(plugin: MinixPlugin, coroutineTask: CoroutineTask): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineScheduler.runTask"]},{"name":"abstract fun runTask(plugin: MinixPlugin, name: String? = null, task: CoroutineBlock): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.runTask","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/run-task.html","searchKeys":["runTask","abstract fun runTask(plugin: MinixPlugin, name: String? = null, task: CoroutineBlock): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineScheduler.runTask"]},{"name":"abstract fun runTask(plugin: MinixPlugin, runnable: CoroutineRunnable): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.runTask","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/run-task.html","searchKeys":["runTask","abstract fun runTask(plugin: MinixPlugin, runnable: CoroutineRunnable): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineScheduler.runTask"]},{"name":"abstract fun runTaskLater(plugin: MinixPlugin, coroutineTask: CoroutineTask, delay: Duration): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.runTaskLater","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/run-task-later.html","searchKeys":["runTaskLater","abstract fun runTaskLater(plugin: MinixPlugin, coroutineTask: CoroutineTask, delay: Duration): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineScheduler.runTaskLater"]},{"name":"abstract fun runTaskLater(plugin: MinixPlugin, name: String? = null, task: CoroutineBlock, delay: Duration): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.runTaskLater","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/run-task-later.html","searchKeys":["runTaskLater","abstract fun runTaskLater(plugin: MinixPlugin, name: String? = null, task: CoroutineBlock, delay: Duration): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineScheduler.runTaskLater"]},{"name":"abstract fun runTaskLater(plugin: MinixPlugin, runnable: CoroutineRunnable, delay: Duration): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.runTaskLater","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/run-task-later.html","searchKeys":["runTaskLater","abstract fun runTaskLater(plugin: MinixPlugin, runnable: CoroutineRunnable, delay: Duration): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineScheduler.runTaskLater"]},{"name":"abstract fun runTaskTimer(plugin: MinixPlugin, coroutineTask: CoroutineTask, delay: Duration, period: Duration): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.runTaskTimer","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/run-task-timer.html","searchKeys":["runTaskTimer","abstract fun runTaskTimer(plugin: MinixPlugin, coroutineTask: CoroutineTask, delay: Duration, period: Duration): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineScheduler.runTaskTimer"]},{"name":"abstract fun runTaskTimer(plugin: MinixPlugin, name: String? = null, task: CoroutineBlock, delay: Duration, period: Duration): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.runTaskTimer","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/run-task-timer.html","searchKeys":["runTaskTimer","abstract fun runTaskTimer(plugin: MinixPlugin, name: String? = null, task: CoroutineBlock, delay: Duration, period: Duration): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineScheduler.runTaskTimer"]},{"name":"abstract fun runTaskTimer(plugin: MinixPlugin, runnable: CoroutineRunnable, delay: Duration, period: Duration): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.runTaskTimer","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/run-task-timer.html","searchKeys":["runTaskTimer","abstract fun runTaskTimer(plugin: MinixPlugin, runnable: CoroutineRunnable, delay: Duration, period: Duration): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineScheduler.runTaskTimer"]},{"name":"abstract fun setBoolean(itemStack: ItemStack, key: String?, value: Boolean): ItemStack?","description":"dev.racci.minix.api.utils.minecraft.NbtWrapper.setBoolean","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-nbt-wrapper/set-boolean.html","searchKeys":["setBoolean","abstract fun setBoolean(itemStack: ItemStack, key: String?, value: Boolean): ItemStack?","dev.racci.minix.api.utils.minecraft.NbtWrapper.setBoolean"]},{"name":"abstract fun setPages(vararg pages: Pair<Int, Component>): BookBuilder","description":"dev.racci.minix.api.builders.BookBuilder.setPages","location":"Minix-API/dev.racci.minix.api.builders/-book-builder/set-pages.html","searchKeys":["setPages","abstract fun setPages(vararg pages: Pair<Int, Component>): BookBuilder","dev.racci.minix.api.builders.BookBuilder.setPages"]},{"name":"abstract fun setString(itemStack: ItemStack, key: String?, value: String?): ItemStack?","description":"dev.racci.minix.api.utils.minecraft.NbtWrapper.setString","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-nbt-wrapper/set-string.html","searchKeys":["setString","abstract fun setString(itemStack: ItemStack, key: String?, value: String?): ItemStack?","dev.racci.minix.api.utils.minecraft.NbtWrapper.setString"]},{"name":"abstract fun shutdown(): Boolean","description":"dev.racci.minix.api.scheduler.CoroutineTask.shutdown","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-task/shutdown.html","searchKeys":["shutdown","abstract fun shutdown(): Boolean","dev.racci.minix.api.scheduler.CoroutineTask.shutdown"]},{"name":"abstract fun startPlugin(plugin: MinixPlugin)","description":"dev.racci.minix.api.services.PluginService.startPlugin","location":"Minix-API/dev.racci.minix.api.services/-plugin-service/start-plugin.html","searchKeys":["startPlugin","abstract fun startPlugin(plugin: MinixPlugin)","dev.racci.minix.api.services.PluginService.startPlugin"]},{"name":"abstract fun sync(): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineTask.sync","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-task/sync.html","searchKeys":["sync","abstract fun sync(): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineTask.sync"]},{"name":"abstract fun toRecipe(key: NamespacedKey, result: ItemStack, group: String = \"\"): Recipe","description":"dev.racci.minix.api.serializables.recipes.SerializableRecipeIngredients.toRecipe","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-serializable-recipe-ingredients/to-recipe.html","searchKeys":["toRecipe","abstract fun toRecipe(key: NamespacedKey, result: ItemStack, group: String = \"\"): Recipe","dev.racci.minix.api.serializables.recipes.SerializableRecipeIngredients.toRecipe"]},{"name":"abstract fun unloadPlugin(plugin: MinixPlugin)","description":"dev.racci.minix.api.services.PluginService.unloadPlugin","location":"Minix-API/dev.racci.minix.api.services/-plugin-service/unload-plugin.html","searchKeys":["unloadPlugin","abstract fun unloadPlugin(plugin: MinixPlugin)","dev.racci.minix.api.services.PluginService.unloadPlugin"]},{"name":"abstract inner class InnerConfig","description":"dev.racci.minix.api.data.MinixConfig.InnerConfig","location":"Minix-API/dev.racci.minix.api.data/-minix-config/-inner-config/index.html","searchKeys":["InnerConfig","abstract inner class InnerConfig","dev.racci.minix.api.data.MinixConfig.InnerConfig"]},{"name":"abstract operator fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): T","description":"dev.racci.minix.api.utils.exposed.ExposedDelegate.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-exposed-delegate/get-value.html","searchKeys":["getValue","abstract operator fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): T","dev.racci.minix.api.utils.exposed.ExposedDelegate.getValue"]},{"name":"abstract operator fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: T)","description":"dev.racci.minix.api.utils.exposed.ExposedDelegate.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-exposed-delegate/set-value.html","searchKeys":["setValue","abstract operator fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: T)","dev.racci.minix.api.utils.exposed.ExposedDelegate.setValue"]},{"name":"abstract operator fun <P : MinixPlugin> get(plugin: P): PluginData<P>","description":"dev.racci.minix.api.services.PluginService.get","location":"Minix-API/dev.racci.minix.api.services/-plugin-service/get.html","searchKeys":["get","abstract operator fun <P : MinixPlugin> get(plugin: P): PluginData<P>","dev.racci.minix.api.services.PluginService.get"]},{"name":"abstract operator fun contains(element: E): Boolean","description":"dev.racci.minix.api.utils.collections.ExpirationList.contains","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list/contains.html","searchKeys":["contains","abstract operator fun contains(element: E): Boolean","dev.racci.minix.api.utils.collections.ExpirationList.contains"]},{"name":"abstract operator fun get(index: Int): E?","description":"dev.racci.minix.api.utils.collections.ExpirationList.get","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list/get.html","searchKeys":["get","abstract operator fun get(index: Int): E?","dev.racci.minix.api.utils.collections.ExpirationList.get"]},{"name":"abstract operator fun minusAssign(uuid: UUID)","description":"dev.racci.minix.api.services.PlayerService.minusAssign","location":"Minix-API/dev.racci.minix.api.services/-player-service/minus-assign.html","searchKeys":["minusAssign","abstract operator fun minusAssign(uuid: UUID)","dev.racci.minix.api.services.PlayerService.minusAssign"]},{"name":"abstract suspend fun connect(url: URL): HttpResponse?","description":"dev.racci.minix.api.updater.providers.UpdateProvider.connect","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/connect.html","searchKeys":["connect","abstract suspend fun connect(url: URL): HttpResponse?","dev.racci.minix.api.updater.providers.UpdateProvider.connect"]},{"name":"abstract suspend fun handleEnable()","description":"dev.racci.minix.api.extension.ExtensionSkeleton.handleEnable","location":"Minix-API/dev.racci.minix.api.extension/-extension-skeleton/handle-enable.html","searchKeys":["handleEnable","abstract suspend fun handleEnable()","dev.racci.minix.api.extension.ExtensionSkeleton.handleEnable"]},{"name":"abstract suspend fun handleLoad()","description":"dev.racci.minix.api.extension.ExtensionSkeleton.handleLoad","location":"Minix-API/dev.racci.minix.api.extension/-extension-skeleton/handle-load.html","searchKeys":["handleLoad","abstract suspend fun handleLoad()","dev.racci.minix.api.extension.ExtensionSkeleton.handleLoad"]},{"name":"abstract suspend fun handleUnload()","description":"dev.racci.minix.api.extension.ExtensionSkeleton.handleUnload","location":"Minix-API/dev.racci.minix.api.extension/-extension-skeleton/handle-unload.html","searchKeys":["handleUnload","abstract suspend fun handleUnload()","dev.racci.minix.api.extension.ExtensionSkeleton.handleUnload"]},{"name":"abstract suspend fun onCommand(sender: CommandSender, command: Command, label: String, args: Array<out String>): Boolean","description":"dev.racci.minix.api.coroutine.SuspendingCommandExecutor.onCommand","location":"Minix-API/dev.racci.minix.api.coroutine/-suspending-command-executor/on-command.html","searchKeys":["onCommand","abstract suspend fun onCommand(sender: CommandSender, command: Command, label: String, args: Array<out String>): Boolean","dev.racci.minix.api.coroutine.SuspendingCommandExecutor.onCommand"]},{"name":"abstract suspend fun onTabComplete(sender: CommandSender, command: Command, alias: String, args: Array<out String>): List<String>","description":"dev.racci.minix.api.coroutine.SuspendingTabCompleter.onTabComplete","location":"Minix-API/dev.racci.minix.api.coroutine/-suspending-tab-completer/on-tab-complete.html","searchKeys":["onTabComplete","abstract suspend fun onTabComplete(sender: CommandSender, command: Command, alias: String, args: Array<out String>): List<String>","dev.racci.minix.api.coroutine.SuspendingTabCompleter.onTabComplete"]},{"name":"abstract suspend fun query(): UpdateResult","description":"dev.racci.minix.api.updater.providers.UpdateProvider.query","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/query.html","searchKeys":["query","abstract suspend fun query(): UpdateResult","dev.racci.minix.api.updater.providers.UpdateProvider.query"]},{"name":"abstract suspend fun run()","description":"dev.racci.minix.api.scheduler.CoroutineRunnable.run","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-runnable/run.html","searchKeys":["run","abstract suspend fun run()","dev.racci.minix.api.scheduler.CoroutineRunnable.run"]},{"name":"abstract suspend fun shutdownTask(taskID: Int): Boolean","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.shutdownTask","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/shutdown-task.html","searchKeys":["shutdownTask","abstract suspend fun shutdownTask(taskID: Int): Boolean","dev.racci.minix.api.scheduler.CoroutineScheduler.shutdownTask"]},{"name":"abstract suspend fun tryUpdate(updater: PluginUpdater): UpdateResult","description":"dev.racci.minix.api.services.UpdaterService.tryUpdate","location":"Minix-API/dev.racci.minix.api.services/-updater-service/try-update.html","searchKeys":["tryUpdate","abstract suspend fun tryUpdate(updater: PluginUpdater): UpdateResult","dev.racci.minix.api.services.UpdaterService.tryUpdate"]},{"name":"abstract val bStatsId: Int?","description":"dev.racci.minix.api.plugin.SusPlugin.bStatsId","location":"Minix-API/dev.racci.minix.api.plugin/-sus-plugin/b-stats-id.html","searchKeys":["bStatsId","abstract val bStatsId: Int?","dev.racci.minix.api.plugin.SusPlugin.bStatsId"]},{"name":"abstract val bindToKClass: KClass<*>?","description":"dev.racci.minix.api.extension.ExtensionSkeleton.bindToKClass","location":"Minix-API/dev.racci.minix.api.extension/-extension-skeleton/bind-to-k-class.html","searchKeys":["bindToKClass","abstract val bindToKClass: KClass<*>?","dev.racci.minix.api.extension.ExtensionSkeleton.bindToKClass"]},{"name":"abstract val bindToKClass: KClass<out MinixPlugin>?","description":"dev.racci.minix.api.plugin.SusPlugin.bindToKClass","location":"Minix-API/dev.racci.minix.api.plugin/-sus-plugin/bind-to-k-class.html","searchKeys":["bindToKClass","abstract val bindToKClass: KClass<out MinixPlugin>?","dev.racci.minix.api.plugin.SusPlugin.bindToKClass"]},{"name":"abstract val commandService: CommandService","description":"dev.racci.minix.api.coroutine.contract.CoroutineSession.commandService","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-coroutine-session/command-service.html","searchKeys":["commandService","abstract val commandService: CommandService","dev.racci.minix.api.coroutine.contract.CoroutineSession.commandService"]},{"name":"abstract val coroutineSession: LoadingCache<MinixPlugin, CoroutineSession>","description":"dev.racci.minix.api.services.PluginService.coroutineSession","location":"Minix-API/dev.racci.minix.api.services/-plugin-service/coroutine-session.html","searchKeys":["coroutineSession","abstract val coroutineSession: LoadingCache<MinixPlugin, CoroutineSession>","dev.racci.minix.api.services.PluginService.coroutineSession"]},{"name":"abstract val dependencies: ImmutableSet<KClass<out Extension<*>>>","description":"dev.racci.minix.api.extension.ExtensionSkeleton.dependencies","location":"Minix-API/dev.racci.minix.api.extension/-extension-skeleton/dependencies.html","searchKeys":["dependencies","abstract val dependencies: ImmutableSet<KClass<out Extension<*>>>","dev.racci.minix.api.extension.ExtensionSkeleton.dependencies"]},{"name":"abstract val disabledUpdaters: MutableList<PluginUpdater>","description":"dev.racci.minix.api.services.UpdaterService.disabledUpdaters","location":"Minix-API/dev.racci.minix.api.services/-updater-service/disabled-updaters.html","searchKeys":["disabledUpdaters","abstract val disabledUpdaters: MutableList<PluginUpdater>","dev.racci.minix.api.services.UpdaterService.disabledUpdaters"]},{"name":"abstract val dispatcherAsync: CoroutineContext","description":"dev.racci.minix.api.coroutine.contract.CoroutineSession.dispatcherAsync","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-coroutine-session/dispatcher-async.html","searchKeys":["dispatcherAsync","abstract val dispatcherAsync: CoroutineContext","dev.racci.minix.api.coroutine.contract.CoroutineSession.dispatcherAsync"]},{"name":"abstract val dispatcherMinecraft: CoroutineContext","description":"dev.racci.minix.api.coroutine.contract.CoroutineSession.dispatcherMinecraft","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-coroutine-session/dispatcher-minecraft.html","searchKeys":["dispatcherMinecraft","abstract val dispatcherMinecraft: CoroutineContext","dev.racci.minix.api.coroutine.contract.CoroutineSession.dispatcherMinecraft"]},{"name":"abstract val enabledUpdaters: MutableList<PluginUpdater>","description":"dev.racci.minix.api.services.UpdaterService.enabledUpdaters","location":"Minix-API/dev.racci.minix.api.services/-updater-service/enabled-updaters.html","searchKeys":["enabledUpdaters","abstract val enabledUpdaters: MutableList<PluginUpdater>","dev.racci.minix.api.services.UpdaterService.enabledUpdaters"]},{"name":"abstract val eventListener: KListener<P>","description":"dev.racci.minix.api.extension.ExtensionSkeleton.eventListener","location":"Minix-API/dev.racci.minix.api.extension/-extension-skeleton/event-listener.html","searchKeys":["eventListener","abstract val eventListener: KListener<P>","dev.racci.minix.api.extension.ExtensionSkeleton.eventListener"]},{"name":"abstract val eventService: EventService","description":"dev.racci.minix.api.coroutine.contract.CoroutineSession.eventService","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-coroutine-session/event-service.html","searchKeys":["eventService","abstract val eventService: EventService","dev.racci.minix.api.coroutine.contract.CoroutineSession.eventService"]},{"name":"abstract val functionsMove: OnlinePlayerMap<PlayerUtils.PlayerCallback<Boolean>>","description":"dev.racci.minix.api.services.PlayerService.functionsMove","location":"Minix-API/dev.racci.minix.api.services/-player-service/functions-move.html","searchKeys":["functionsMove","abstract val functionsMove: OnlinePlayerMap<PlayerUtils.PlayerCallback<Boolean>>","dev.racci.minix.api.services.PlayerService.functionsMove"]},{"name":"abstract val functionsQuit: OnlinePlayerMap<PlayerUtils.PlayerCallback<Unit>>","description":"dev.racci.minix.api.services.PlayerService.functionsQuit","location":"Minix-API/dev.racci.minix.api.services/-player-service/functions-quit.html","searchKeys":["functionsQuit","abstract val functionsQuit: OnlinePlayerMap<PlayerUtils.PlayerCallback<Unit>>","dev.racci.minix.api.services.PlayerService.functionsQuit"]},{"name":"abstract val inputCallbacks: OnlinePlayerMap<PlayerUtils.ChatInput>","description":"dev.racci.minix.api.services.PlayerService.inputCallbacks","location":"Minix-API/dev.racci.minix.api.services/-player-service/input-callbacks.html","searchKeys":["inputCallbacks","abstract val inputCallbacks: OnlinePlayerMap<PlayerUtils.ChatInput>","dev.racci.minix.api.services.PlayerService.inputCallbacks"]},{"name":"abstract val job: Job?","description":"dev.racci.minix.api.scheduler.CoroutineTask.job","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-task/job.html","searchKeys":["job","abstract val job: Job?","dev.racci.minix.api.scheduler.CoroutineTask.job"]},{"name":"abstract val keepRunning: AtomicBoolean","description":"dev.racci.minix.api.scheduler.CoroutineTask.keepRunning","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-task/keep-running.html","searchKeys":["keepRunning","abstract val keepRunning: AtomicBoolean","dev.racci.minix.api.scheduler.CoroutineTask.keepRunning"]},{"name":"abstract val latestFileName: String?","description":"dev.racci.minix.api.updater.providers.UpdateProvider.latestFileName","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/latest-file-name.html","searchKeys":["latestFileName","abstract val latestFileName: String?","dev.racci.minix.api.updater.providers.UpdateProvider.latestFileName"]},{"name":"abstract val latestReleaseType: ReleaseType?","description":"dev.racci.minix.api.updater.providers.UpdateProvider.latestReleaseType","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/latest-release-type.html","searchKeys":["latestReleaseType","abstract val latestReleaseType: ReleaseType?","dev.racci.minix.api.updater.providers.UpdateProvider.latestReleaseType"]},{"name":"abstract val latestVersion: Version?","description":"dev.racci.minix.api.updater.providers.UpdateProvider.latestVersion","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/latest-version.html","searchKeys":["latestVersion","abstract val latestVersion: Version?","dev.racci.minix.api.updater.providers.UpdateProvider.latestVersion"]},{"name":"abstract val listeners: MultiMap<Function<Unit>, ObservableAction?>","description":"dev.racci.minix.api.utils.collections.ObservableHolder.listeners","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-holder/listeners.html","searchKeys":["listeners","abstract val listeners: MultiMap<Function<Unit>, ObservableAction?>","dev.racci.minix.api.utils.collections.ObservableHolder.listeners"]},{"name":"abstract val loaded: Boolean","description":"dev.racci.minix.api.extension.ExtensionSkeleton.loaded","location":"Minix-API/dev.racci.minix.api.extension/-extension-skeleton/loaded.html","searchKeys":["loaded","abstract val loaded: Boolean","dev.racci.minix.api.extension.ExtensionSkeleton.loaded"]},{"name":"abstract val loadedPlugins: MutableMap<KClass<out MinixPlugin>, MinixPlugin>","description":"dev.racci.minix.api.services.PluginService.loadedPlugins","location":"Minix-API/dev.racci.minix.api.services/-plugin-service/loaded-plugins.html","searchKeys":["loadedPlugins","abstract val loadedPlugins: MutableMap<KClass<out MinixPlugin>, MinixPlugin>","dev.racci.minix.api.services.PluginService.loadedPlugins"]},{"name":"abstract val log: MinixLogger","description":"dev.racci.minix.api.extension.ExtensionSkeleton.log","location":"Minix-API/dev.racci.minix.api.extension/-extension-skeleton/log.html","searchKeys":["log","abstract val log: MinixLogger","dev.racci.minix.api.extension.ExtensionSkeleton.log"]},{"name":"abstract val minix: MinixPlugin","description":"dev.racci.minix.api.utils.UtilObject.minix","location":"Minix-API/dev.racci.minix.api.utils/-util-object/minix.html","searchKeys":["minix","abstract val minix: MinixPlugin","dev.racci.minix.api.utils.UtilObject.minix"]},{"name":"abstract val name: String","description":"dev.racci.minix.api.extension.ExtensionSkeleton.name","location":"Minix-API/dev.racci.minix.api.extension/-extension-skeleton/name.html","searchKeys":["name","abstract val name: String","dev.racci.minix.api.extension.ExtensionSkeleton.name"]},{"name":"abstract val owner: MinixPlugin","description":"dev.racci.minix.api.scheduler.CoroutineTask.owner","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-task/owner.html","searchKeys":["owner","abstract val owner: MinixPlugin","dev.racci.minix.api.scheduler.CoroutineTask.owner"]},{"name":"abstract val parentJob: CompletableJob","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.parentJob","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/parent-job.html","searchKeys":["parentJob","abstract val parentJob: CompletableJob","dev.racci.minix.api.scheduler.CoroutineScheduler.parentJob"]},{"name":"abstract val period: Duration?","description":"dev.racci.minix.api.scheduler.CoroutineTask.period","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-task/period.html","searchKeys":["period","abstract val period: Duration?","dev.racci.minix.api.scheduler.CoroutineTask.period"]},{"name":"abstract val plugin: T","description":"dev.racci.minix.api.extensions.WithPlugin.plugin","location":"Minix-API/dev.racci.minix.api.extensions/-with-plugin/plugin.html","searchKeys":["plugin","abstract val plugin: T","dev.racci.minix.api.extensions.WithPlugin.plugin"]},{"name":"abstract val pluginCache: LoadingCache<MinixPlugin, PluginData<MinixPlugin>>","description":"dev.racci.minix.api.services.PluginService.pluginCache","location":"Minix-API/dev.racci.minix.api.services/-plugin-service/plugin-cache.html","searchKeys":["pluginCache","abstract val pluginCache: LoadingCache<MinixPlugin, PluginData<MinixPlugin>>","dev.racci.minix.api.services.PluginService.pluginCache"]},{"name":"abstract val primaryThread: Thread","description":"dev.racci.minix.api.coroutine.contract.WakeUpBlockService.primaryThread","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-wake-up-block-service/primary-thread.html","searchKeys":["primaryThread","abstract val primaryThread: Thread","dev.racci.minix.api.coroutine.contract.WakeUpBlockService.primaryThread"]},{"name":"abstract val runnable: CoroutineRunnable?","description":"dev.racci.minix.api.scheduler.CoroutineTask.runnable","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-task/runnable.html","searchKeys":["runnable","abstract val runnable: CoroutineRunnable?","dev.racci.minix.api.scheduler.CoroutineTask.runnable"]},{"name":"abstract val scope: CoroutineScope","description":"dev.racci.minix.api.coroutine.contract.CoroutineSession.scope","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-coroutine-session/scope.html","searchKeys":["scope","abstract val scope: CoroutineScope","dev.racci.minix.api.coroutine.contract.CoroutineSession.scope"]},{"name":"abstract val size: Int","description":"dev.racci.minix.api.utils.collections.ExpirationList.size","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list/size.html","searchKeys":["size","abstract val size: Int","dev.racci.minix.api.utils.collections.ExpirationList.size"]},{"name":"abstract val state: ExtensionState","description":"dev.racci.minix.api.extension.ExtensionSkeleton.state","location":"Minix-API/dev.racci.minix.api.extension/-extension-skeleton/state.html","searchKeys":["state","abstract val state: ExtensionState","dev.racci.minix.api.extension.ExtensionSkeleton.state"]},{"name":"abstract val supervisor: CoroutineScope","description":"dev.racci.minix.api.extension.ExtensionSkeleton.supervisor","location":"Minix-API/dev.racci.minix.api.extension/-extension-skeleton/supervisor.html","searchKeys":["supervisor","abstract val supervisor: CoroutineScope","dev.racci.minix.api.extension.ExtensionSkeleton.supervisor"]},{"name":"abstract val task: suspend (MinixPlugin, CoroutineScope) -> Unit","description":"dev.racci.minix.api.scheduler.CoroutineTask.task","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-task/task.html","searchKeys":["task","abstract val task: suspend (MinixPlugin, CoroutineScope) -> Unit","dev.racci.minix.api.scheduler.CoroutineTask.task"]},{"name":"abstract val taskID: Int","description":"dev.racci.minix.api.scheduler.CoroutineTask.taskID","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-task/task-i-d.html","searchKeys":["taskID","abstract val taskID: Int","dev.racci.minix.api.scheduler.CoroutineTask.taskID"]},{"name":"abstract val wakeUpBlockService: WakeUpBlockService","description":"dev.racci.minix.api.coroutine.contract.CoroutineSession.wakeUpBlockService","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-coroutine-session/wake-up-block-service.html","searchKeys":["wakeUpBlockService","abstract val wakeUpBlockService: WakeUpBlockService","dev.racci.minix.api.coroutine.contract.CoroutineSession.wakeUpBlockService"]},{"name":"abstract var amount: Int","description":"dev.racci.minix.api.builders.BaseItemBuilder.amount","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/amount.html","searchKeys":["amount","abstract var amount: Int","dev.racci.minix.api.builders.BaseItemBuilder.amount"]},{"name":"abstract var attributeModifiers: Multimap<Attribute, AttributeModifier>?","description":"dev.racci.minix.api.builders.BaseItemBuilder.attributeModifiers","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/attribute-modifiers.html","searchKeys":["attributeModifiers","abstract var attributeModifiers: Multimap<Attribute, AttributeModifier>?","dev.racci.minix.api.builders.BaseItemBuilder.attributeModifiers"]},{"name":"abstract var author: Component?","description":"dev.racci.minix.api.builders.BookBuilder.author","location":"Minix-API/dev.racci.minix.api.builders/-book-builder/author.html","searchKeys":["author","abstract var author: Component?","dev.racci.minix.api.builders.BookBuilder.author"]},{"name":"abstract var baseColour: Material","description":"dev.racci.minix.api.builders.BannerBuilder.baseColour","location":"Minix-API/dev.racci.minix.api.builders/-banner-builder/base-colour.html","searchKeys":["baseColour","abstract var baseColour: Material","dev.racci.minix.api.builders.BannerBuilder.baseColour"]},{"name":"abstract var bound: Boolean","description":"dev.racci.minix.api.extension.ExtensionSkeleton.bound","location":"Minix-API/dev.racci.minix.api.extension/-extension-skeleton/bound.html","searchKeys":["bound","abstract var bound: Boolean","dev.racci.minix.api.extension.ExtensionSkeleton.bound"]},{"name":"abstract var colour: Color?","description":"dev.racci.minix.api.builders.MapBuilder.colour","location":"Minix-API/dev.racci.minix.api.builders/-map-builder/colour.html","searchKeys":["colour","abstract var colour: Color?","dev.racci.minix.api.builders.MapBuilder.colour"]},{"name":"abstract var destroyableKeys: Set<Namespaced>","description":"dev.racci.minix.api.builders.BaseItemBuilder.destroyableKeys","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/destroyable-keys.html","searchKeys":["destroyableKeys","abstract var destroyableKeys: Set<Namespaced>","dev.racci.minix.api.builders.BaseItemBuilder.destroyableKeys"]},{"name":"abstract var effects: List<FireworkEffect>","description":"dev.racci.minix.api.builders.FireworkBuilder.effects","location":"Minix-API/dev.racci.minix.api.builders/-firework-builder/effects.html","searchKeys":["effects","abstract var effects: List<FireworkEffect>","dev.racci.minix.api.builders.FireworkBuilder.effects"]},{"name":"abstract var generation: BookMeta.Generation?","description":"dev.racci.minix.api.builders.BookBuilder.generation","location":"Minix-API/dev.racci.minix.api.builders/-book-builder/generation.html","searchKeys":["generation","abstract var generation: BookMeta.Generation?","dev.racci.minix.api.builders.BookBuilder.generation"]},{"name":"abstract var glowing: Boolean","description":"dev.racci.minix.api.builders.BaseItemBuilder.glowing","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/glowing.html","searchKeys":["glowing","abstract var glowing: Boolean","dev.racci.minix.api.builders.BaseItemBuilder.glowing"]},{"name":"abstract var isManipulatedServerHeartBeatEnabled: Boolean","description":"dev.racci.minix.api.coroutine.contract.WakeUpBlockService.isManipulatedServerHeartBeatEnabled","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-wake-up-block-service/is-manipulated-server-heart-beat-enabled.html","searchKeys":["isManipulatedServerHeartBeatEnabled","abstract var isManipulatedServerHeartBeatEnabled: Boolean","dev.racci.minix.api.coroutine.contract.WakeUpBlockService.isManipulatedServerHeartBeatEnabled"]},{"name":"abstract var isUnbreakable: Boolean","description":"dev.racci.minix.api.builders.BaseItemBuilder.isUnbreakable","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/is-unbreakable.html","searchKeys":["isUnbreakable","abstract var isUnbreakable: Boolean","dev.racci.minix.api.builders.BaseItemBuilder.isUnbreakable"]},{"name":"abstract var itemFlags: Set<ItemFlag>","description":"dev.racci.minix.api.builders.BaseItemBuilder.itemFlags","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/item-flags.html","searchKeys":["itemFlags","abstract var itemFlags: Set<ItemFlag>","dev.racci.minix.api.builders.BaseItemBuilder.itemFlags"]},{"name":"abstract var itemStack: ItemStack","description":"dev.racci.minix.api.builders.BaseItemBuilder.itemStack","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/item-stack.html","searchKeys":["itemStack","abstract var itemStack: ItemStack","dev.racci.minix.api.builders.BaseItemBuilder.itemStack"]},{"name":"abstract var locName: String?","description":"dev.racci.minix.api.builders.MapBuilder.locName","location":"Minix-API/dev.racci.minix.api.builders/-map-builder/loc-name.html","searchKeys":["locName","abstract var locName: String?","dev.racci.minix.api.builders.MapBuilder.locName"]},{"name":"abstract var lore: List<Component>","description":"dev.racci.minix.api.builders.BaseItemBuilder.lore","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/lore.html","searchKeys":["lore","abstract var lore: List<Component>","dev.racci.minix.api.builders.BaseItemBuilder.lore"]},{"name":"abstract var meta: M","description":"dev.racci.minix.api.builders.BaseItemBuilder.meta","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/meta.html","searchKeys":["meta","abstract var meta: M","dev.racci.minix.api.builders.BaseItemBuilder.meta"]},{"name":"abstract var model: Int?","description":"dev.racci.minix.api.builders.BaseItemBuilder.model","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/model.html","searchKeys":["model","abstract var model: Int?","dev.racci.minix.api.builders.BaseItemBuilder.model"]},{"name":"abstract var name: Component?","description":"dev.racci.minix.api.builders.BaseItemBuilder.name","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/name.html","searchKeys":["name","abstract var name: Component?","dev.racci.minix.api.builders.BaseItemBuilder.name"]},{"name":"abstract var name: String","description":"dev.racci.minix.api.scheduler.CoroutineTask.name","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-task/name.html","searchKeys":["name","abstract var name: String","dev.racci.minix.api.scheduler.CoroutineTask.name"]},{"name":"abstract var owner: OfflinePlayer?","description":"dev.racci.minix.api.builders.HeadBuilder.owner","location":"Minix-API/dev.racci.minix.api.builders/-head-builder/owner.html","searchKeys":["owner","abstract var owner: OfflinePlayer?","dev.racci.minix.api.builders.HeadBuilder.owner"]},{"name":"abstract var patterns: List<Pattern>","description":"dev.racci.minix.api.builders.BannerBuilder.patterns","location":"Minix-API/dev.racci.minix.api.builders/-banner-builder/patterns.html","searchKeys":["patterns","abstract var patterns: List<Pattern>","dev.racci.minix.api.builders.BannerBuilder.patterns"]},{"name":"abstract var placeableKeys: Set<Namespaced>","description":"dev.racci.minix.api.builders.BaseItemBuilder.placeableKeys","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/placeable-keys.html","searchKeys":["placeableKeys","abstract var placeableKeys: Set<Namespaced>","dev.racci.minix.api.builders.BaseItemBuilder.placeableKeys"]},{"name":"abstract var playerProfiler: PlayerProfile?","description":"dev.racci.minix.api.builders.HeadBuilder.playerProfiler","location":"Minix-API/dev.racci.minix.api.builders/-head-builder/player-profiler.html","searchKeys":["playerProfiler","abstract var playerProfiler: PlayerProfile?","dev.racci.minix.api.builders.HeadBuilder.playerProfiler"]},{"name":"abstract var power: Int","description":"dev.racci.minix.api.builders.FireworkBuilder.power","location":"Minix-API/dev.racci.minix.api.builders/-firework-builder/power.html","searchKeys":["power","abstract var power: Int","dev.racci.minix.api.builders.FireworkBuilder.power"]},{"name":"abstract var scaling: Boolean","description":"dev.racci.minix.api.builders.MapBuilder.scaling","location":"Minix-API/dev.racci.minix.api.builders/-map-builder/scaling.html","searchKeys":["scaling","abstract var scaling: Boolean","dev.racci.minix.api.builders.MapBuilder.scaling"]},{"name":"abstract var texture: String","description":"dev.racci.minix.api.builders.HeadBuilder.texture","location":"Minix-API/dev.racci.minix.api.builders/-head-builder/texture.html","searchKeys":["texture","abstract var texture: String","dev.racci.minix.api.builders.HeadBuilder.texture"]},{"name":"abstract var title: Component?","description":"dev.racci.minix.api.builders.BookBuilder.title","location":"Minix-API/dev.racci.minix.api.builders/-book-builder/title.html","searchKeys":["title","abstract var title: Component?","dev.racci.minix.api.builders.BookBuilder.title"]},{"name":"abstract var view: MapView?","description":"dev.racci.minix.api.builders.MapBuilder.view","location":"Minix-API/dev.racci.minix.api.builders/-map-builder/view.html","searchKeys":["view","abstract var view: MapView?","dev.racci.minix.api.builders.MapBuilder.view"]},{"name":"annotation class MappedConfig(val parent: KClass<*>, val file: String, val serializers: Array<KClass<*>> = [])","description":"dev.racci.minix.api.annotations.MappedConfig","location":"Minix-API/dev.racci.minix.api.annotations/-mapped-config/index.html","searchKeys":["MappedConfig","annotation class MappedConfig(val parent: KClass<*>, val file: String, val serializers: Array<KClass<*>> = [])","dev.racci.minix.api.annotations.MappedConfig"]},{"name":"annotation class MappedExtension(val parent: KClass<*>, val name: String, val dependencies: Array<KClass<*>> = [], val bindToKClass: KClass<*> = Extension::class)","description":"dev.racci.minix.api.annotations.MappedExtension","location":"Minix-API/dev.racci.minix.api.annotations/-mapped-extension/index.html","searchKeys":["MappedExtension","annotation class MappedExtension(val parent: KClass<*>, val name: String, val dependencies: Array<KClass<*>> = [], val bindToKClass: KClass<*> = Extension::class)","dev.racci.minix.api.annotations.MappedExtension"]},{"name":"annotation class MappedPlugin(val bStatsId: Int = -1, val bindToKClass: KClass<*> = MinixPlugin::class, val extensions: Array<KClass<*>> = [])","description":"dev.racci.minix.api.annotations.MappedPlugin","location":"Minix-API/dev.racci.minix.api.annotations/-mapped-plugin/index.html","searchKeys":["MappedPlugin","annotation class MappedPlugin(val bStatsId: Int = -1, val bindToKClass: KClass<*> = MinixPlugin::class, val extensions: Array<KClass<*>> = [])","dev.racci.minix.api.annotations.MappedPlugin"]},{"name":"annotation class MinixDsl","description":"dev.racci.minix.api.annotations.MinixDsl","location":"Minix-API/dev.racci.minix.api.annotations/-minix-dsl/index.html","searchKeys":["MinixDsl","annotation class MinixDsl","dev.racci.minix.api.annotations.MinixDsl"]},{"name":"annotation class MinixExperimental","description":"dev.racci.minix.api.annotations.MinixExperimental","location":"Minix-API/dev.racci.minix.api.annotations/-minix-experimental/index.html","searchKeys":["MinixExperimental","annotation class MinixExperimental","dev.racci.minix.api.annotations.MinixExperimental"]},{"name":"annotation class MinixInternal","description":"dev.racci.minix.api.annotations.MinixInternal","location":"Minix-API/dev.racci.minix.api.annotations/-minix-internal/index.html","searchKeys":["MinixInternal","annotation class MinixInternal","dev.racci.minix.api.annotations.MinixInternal"]},{"name":"annotation class RunAsync","description":"dev.racci.minix.api.annotations.RunAsync","location":"Minix-API/dev.racci.minix.api.annotations/-run-async/index.html","searchKeys":["RunAsync","annotation class RunAsync","dev.racci.minix.api.annotations.RunAsync"]},{"name":"class AlwaysUpdateProvider(val latestFileURL: URL, val latestFileName: String = \"file.jar\", val latestReleaseType: ReleaseType = ReleaseType.RELEASE) : BaseOnlineProvider","description":"dev.racci.minix.api.updater.providers.AlwaysUpdateProvider","location":"Minix-API/dev.racci.minix.api.updater.providers/-always-update-provider/index.html","searchKeys":["AlwaysUpdateProvider","class AlwaysUpdateProvider(val latestFileURL: URL, val latestFileName: String = \"file.jar\", val latestReleaseType: ReleaseType = ReleaseType.RELEASE) : BaseOnlineProvider","dev.racci.minix.api.updater.providers.AlwaysUpdateProvider"]},{"name":"class BlastingRecipeIngredients(val input: SerializableItemStack, val experience: Float, val cookingTime: Int) : SerializableRecipeIngredients","description":"dev.racci.minix.api.serializables.recipes.BlastingRecipeIngredients","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-blasting-recipe-ingredients/index.html","searchKeys":["BlastingRecipeIngredients","class BlastingRecipeIngredients(val input: SerializableItemStack, val experience: Float, val cookingTime: Int) : SerializableRecipeIngredients","dev.racci.minix.api.serializables.recipes.BlastingRecipeIngredients"]},{"name":"class BlockExposedDelegate(val column: Column<String>) : ExposedDelegate<Block> ","description":"dev.racci.minix.api.utils.exposed.BlockExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-exposed-delegate/index.html","searchKeys":["BlockExposedDelegate","class BlockExposedDelegate(val column: Column<String>) : ExposedDelegate<Block> ","dev.racci.minix.api.utils.exposed.BlockExposedDelegate"]},{"name":"class BlockExposedDelegateNullable(val column: Column<String?>) : ExposedDelegate<Block?> ","description":"dev.racci.minix.api.utils.exposed.BlockExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-exposed-delegate-nullable/index.html","searchKeys":["BlockExposedDelegateNullable","class BlockExposedDelegateNullable(val column: Column<String?>) : ExposedDelegate<Block?> ","dev.racci.minix.api.utils.exposed.BlockExposedDelegateNullable"]},{"name":"class BlockMultiColumnExposedDelegate(val worldColumn: Column<String>, val xColumn: Column<Int>, val yColumn: Column<Int>, val zColumn: Column<Int>) : ExposedDelegate<Block> ","description":"dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-multi-column-exposed-delegate/index.html","searchKeys":["BlockMultiColumnExposedDelegate","class BlockMultiColumnExposedDelegate(val worldColumn: Column<String>, val xColumn: Column<Int>, val yColumn: Column<Int>, val zColumn: Column<Int>) : ExposedDelegate<Block> ","dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegate"]},{"name":"class BlockMultiColumnExposedDelegateNullable(val worldColumn: Column<String?>, val xColumn: Column<Int?>, val yColumn: Column<Int?>, val zColumn: Column<Int?>) : ExposedDelegate<Block?> ","description":"dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-multi-column-exposed-delegate-nullable/index.html","searchKeys":["BlockMultiColumnExposedDelegateNullable","class BlockMultiColumnExposedDelegateNullable(val worldColumn: Column<String?>, val xColumn: Column<Int?>, val yColumn: Column<Int?>, val zColumn: Column<Int?>) : ExposedDelegate<Block?> ","dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegateNullable"]},{"name":"class BlockPosExposedDelegate(val column: Column<String>) : ExposedDelegate<BlockPos> ","description":"dev.racci.minix.api.utils.exposed.BlockPosExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-exposed-delegate/index.html","searchKeys":["BlockPosExposedDelegate","class BlockPosExposedDelegate(val column: Column<String>) : ExposedDelegate<BlockPos> ","dev.racci.minix.api.utils.exposed.BlockPosExposedDelegate"]},{"name":"class BlockPosExposedDelegateNullable(val column: Column<String?>) : ExposedDelegate<BlockPos?> ","description":"dev.racci.minix.api.utils.exposed.BlockPosExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-exposed-delegate-nullable/index.html","searchKeys":["BlockPosExposedDelegateNullable","class BlockPosExposedDelegateNullable(val column: Column<String?>) : ExposedDelegate<BlockPos?> ","dev.racci.minix.api.utils.exposed.BlockPosExposedDelegateNullable"]},{"name":"class BlockPosMultiColumnExposedDelegate(val xColumn: Column<Int>, val yColumn: Column<Int>, val zColumn: Column<Int>) : ExposedDelegate<BlockPos> ","description":"dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-multi-column-exposed-delegate/index.html","searchKeys":["BlockPosMultiColumnExposedDelegate","class BlockPosMultiColumnExposedDelegate(val xColumn: Column<Int>, val yColumn: Column<Int>, val zColumn: Column<Int>) : ExposedDelegate<BlockPos> ","dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegate"]},{"name":"class BlockPosMultiColumnExposedDelegateNullable(val xColumn: Column<Int?>, val yColumn: Column<Int?>, val zColumn: Column<Int?>) : ExposedDelegate<BlockPos?> ","description":"dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-multi-column-exposed-delegate-nullable/index.html","searchKeys":["BlockPosMultiColumnExposedDelegateNullable","class BlockPosMultiColumnExposedDelegateNullable(val xColumn: Column<Int?>, val yColumn: Column<Int?>, val zColumn: Column<Int?>) : ExposedDelegate<BlockPos?> ","dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegateNullable"]},{"name":"class BukkitUpdateProvider(projectID: Int, apiKey: String? = null) : BaseOnlineProviderWithDownload","description":"dev.racci.minix.api.updater.providers.BukkitUpdateProvider","location":"Minix-API/dev.racci.minix.api.updater.providers/-bukkit-update-provider/index.html","searchKeys":["BukkitUpdateProvider","class BukkitUpdateProvider(projectID: Int, apiKey: String? = null) : BaseOnlineProviderWithDownload","dev.racci.minix.api.updater.providers.BukkitUpdateProvider"]},{"name":"class CachedExposedDelegate<T>(delegate: ExposedDelegate<T>) : ExposedDelegate<T> ","description":"dev.racci.minix.api.utils.exposed.CachedExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-cached-exposed-delegate/index.html","searchKeys":["CachedExposedDelegate","class CachedExposedDelegate<T>(delegate: ExposedDelegate<T>) : ExposedDelegate<T> ","dev.racci.minix.api.utils.exposed.CachedExposedDelegate"]},{"name":"class CampfireRecipeIngredients(val input: SerializableItemStack, val experience: Float, val cookingTime: Int) : SerializableRecipeIngredients","description":"dev.racci.minix.api.serializables.recipes.CampfireRecipeIngredients","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-campfire-recipe-ingredients/index.html","searchKeys":["CampfireRecipeIngredients","class CampfireRecipeIngredients(val input: SerializableItemStack, val experience: Float, val cookingTime: Int) : SerializableRecipeIngredients","dev.racci.minix.api.serializables.recipes.CampfireRecipeIngredients"]},{"name":"class ChunkExposedDelegate(val column: Column<String>) : ExposedDelegate<Chunk> ","description":"dev.racci.minix.api.utils.exposed.ChunkExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-exposed-delegate/index.html","searchKeys":["ChunkExposedDelegate","class ChunkExposedDelegate(val column: Column<String>) : ExposedDelegate<Chunk> ","dev.racci.minix.api.utils.exposed.ChunkExposedDelegate"]},{"name":"class ChunkExposedDelegateNullable(val column: Column<String?>) : ExposedDelegate<Chunk?> ","description":"dev.racci.minix.api.utils.exposed.ChunkExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-exposed-delegate-nullable/index.html","searchKeys":["ChunkExposedDelegateNullable","class ChunkExposedDelegateNullable(val column: Column<String?>) : ExposedDelegate<Chunk?> ","dev.racci.minix.api.utils.exposed.ChunkExposedDelegateNullable"]},{"name":"class ChunkMultiColumnExposedDelegate(val worldColumn: Column<String>, val xColumn: Column<Int>, val zColumn: Column<Int>) : ExposedDelegate<Chunk> ","description":"dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-multi-column-exposed-delegate/index.html","searchKeys":["ChunkMultiColumnExposedDelegate","class ChunkMultiColumnExposedDelegate(val worldColumn: Column<String>, val xColumn: Column<Int>, val zColumn: Column<Int>) : ExposedDelegate<Chunk> ","dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegate"]},{"name":"class ChunkMultiColumnExposedDelegateNullable(val worldColumn: Column<String?>, val xColumn: Column<Int?>, val zColumn: Column<Int?>) : ExposedDelegate<Chunk?> ","description":"dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-multi-column-exposed-delegate-nullable/index.html","searchKeys":["ChunkMultiColumnExposedDelegateNullable","class ChunkMultiColumnExposedDelegateNullable(val worldColumn: Column<String?>, val xColumn: Column<Int?>, val zColumn: Column<Int?>) : ExposedDelegate<Chunk?> ","dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegateNullable"]},{"name":"class ChunkPosExposedDelegate(val column: Column<String>) : ExposedDelegate<ChunkPos> ","description":"dev.racci.minix.api.utils.exposed.ChunkPosExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-exposed-delegate/index.html","searchKeys":["ChunkPosExposedDelegate","class ChunkPosExposedDelegate(val column: Column<String>) : ExposedDelegate<ChunkPos> ","dev.racci.minix.api.utils.exposed.ChunkPosExposedDelegate"]},{"name":"class ChunkPosExposedDelegateNullable(val column: Column<String?>) : ExposedDelegate<ChunkPos?> ","description":"dev.racci.minix.api.utils.exposed.ChunkPosExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-exposed-delegate-nullable/index.html","searchKeys":["ChunkPosExposedDelegateNullable","class ChunkPosExposedDelegateNullable(val column: Column<String?>) : ExposedDelegate<ChunkPos?> ","dev.racci.minix.api.utils.exposed.ChunkPosExposedDelegateNullable"]},{"name":"class ChunkPosMultiColumnExposedDelegate(val xColumn: Column<Int>, val zColumn: Column<Int>) : ExposedDelegate<ChunkPos> ","description":"dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-multi-column-exposed-delegate/index.html","searchKeys":["ChunkPosMultiColumnExposedDelegate","class ChunkPosMultiColumnExposedDelegate(val xColumn: Column<Int>, val zColumn: Column<Int>) : ExposedDelegate<ChunkPos> ","dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegate"]},{"name":"class ChunkPosMultiColumnExposedDelegateNullable(val xColumn: Column<Int?>, val zColumn: Column<Int?>) : ExposedDelegate<ChunkPos?> ","description":"dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-multi-column-exposed-delegate-nullable/index.html","searchKeys":["ChunkPosMultiColumnExposedDelegateNullable","class ChunkPosMultiColumnExposedDelegateNullable(val xColumn: Column<Int?>, val zColumn: Column<Int?>) : ExposedDelegate<ChunkPos?> ","dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegateNullable"]},{"name":"class DependencyDelegate<T : Plugin>(val pluginName: String, val type: KClass<T>) : ReadOnlyProperty<MinixPlugin, T> ","description":"dev.racci.minix.api.utils.minecraft.PluginUtils.DependencyDelegate","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-plugin-utils/-dependency-delegate/index.html","searchKeys":["DependencyDelegate","class DependencyDelegate<T : Plugin>(val pluginName: String, val type: KClass<T>) : ReadOnlyProperty<MinixPlugin, T> ","dev.racci.minix.api.utils.minecraft.PluginUtils.DependencyDelegate"]},{"name":"class DependencyErrorException(message: String) : Exception","description":"dev.racci.minix.api.exceptions.DependencyErrorException","location":"Minix-API/dev.racci.minix.api.exceptions/-dependency-error-exception/index.html","searchKeys":["DependencyErrorException","class DependencyErrorException(message: String) : Exception","dev.racci.minix.api.exceptions.DependencyErrorException"]},{"name":"class ExpirationListImpl<E>(plugin: MinixPlugin) : ExpirationList<E> ","description":"dev.racci.minix.api.utils.collections.ExpirationListImpl","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list-impl/index.html","searchKeys":["ExpirationListImpl","class ExpirationListImpl<E>(plugin: MinixPlugin) : ExpirationList<E> ","dev.racci.minix.api.utils.collections.ExpirationListImpl"]},{"name":"class ExpirationMapImpl<K, V>(val plugin: MinixPlugin, val initialMap: MutableMap<K, V> = WeakHashMap()) : ExpirationMap<K, V> , MutableMap<K, V> ","description":"dev.racci.minix.api.utils.collections.ExpirationMapImpl","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-map-impl/index.html","searchKeys":["ExpirationMapImpl","class ExpirationMapImpl<K, V>(val plugin: MinixPlugin, val initialMap: MutableMap<K, V> = WeakHashMap()) : ExpirationMap<K, V> , MutableMap<K, V> ","dev.racci.minix.api.utils.collections.ExpirationMapImpl"]},{"name":"class ExpiringArray<T>(val duration: Duration) : HashSet<T> ","description":"dev.racci.minix.api.collections.ExpiringArray","location":"Minix-API/dev.racci.minix.api.collections/-expiring-array/index.html","searchKeys":["ExpiringArray","class ExpiringArray<T>(val duration: Duration) : HashSet<T> ","dev.racci.minix.api.collections.ExpiringArray"]},{"name":"class FurnaceRecipeIngredients(val input: SerializableItemStack, val experience: Float, val cookingTime: Int) : SerializableRecipeIngredients","description":"dev.racci.minix.api.serializables.recipes.FurnaceRecipeIngredients","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-furnace-recipe-ingredients/index.html","searchKeys":["FurnaceRecipeIngredients","class FurnaceRecipeIngredients(val input: SerializableItemStack, val experience: Float, val cookingTime: Int) : SerializableRecipeIngredients","dev.racci.minix.api.serializables.recipes.FurnaceRecipeIngredients"]},{"name":"class GithubUpdateProvider(projectOwner: String, projectRepo: String, userAgent: String = projectRepo, jarSearchRegex: String = \".*\", md5SearchRegex: String = \".*\") : BaseOnlineProviderWithDownload","description":"dev.racci.minix.api.updater.providers.GithubUpdateProvider","location":"Minix-API/dev.racci.minix.api.updater.providers/-github-update-provider/index.html","searchKeys":["GithubUpdateProvider","class GithubUpdateProvider(projectOwner: String, projectRepo: String, userAgent: String = projectRepo, jarSearchRegex: String = \".*\", md5SearchRegex: String = \".*\") : BaseOnlineProviderWithDownload","dev.racci.minix.api.updater.providers.GithubUpdateProvider"]},{"name":"class IncorrectItemTypeException(message: String) : Exception","description":"dev.racci.minix.api.exceptions.IncorrectItemTypeException","location":"Minix-API/dev.racci.minix.api.exceptions/-incorrect-item-type-exception/index.html","searchKeys":["IncorrectItemTypeException","class IncorrectItemTypeException(message: String) : Exception","dev.racci.minix.api.exceptions.IncorrectItemTypeException"]},{"name":"class InvalidUpdateProviderException(message: String? = null, cause: Throwable? = null) : Exception","description":"dev.racci.minix.api.updater.providers.UpdateProvider.InvalidUpdateProviderException","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-invalid-update-provider-exception/index.html","searchKeys":["InvalidUpdateProviderException","class InvalidUpdateProviderException(message: String? = null, cause: Throwable? = null) : Exception","dev.racci.minix.api.updater.providers.UpdateProvider.InvalidUpdateProviderException"]},{"name":"class InvalidVersionStringException(string: String? = \"The version string must be in the format: \") : IllegalArgumentException","description":"dev.racci.minix.api.updater.Version.InvalidVersionStringException","location":"Minix-API/dev.racci.minix.api.updater/-version/-invalid-version-string-exception/index.html","searchKeys":["InvalidVersionStringException","class InvalidVersionStringException(string: String? = \"The version string must be in the format: \") : IllegalArgumentException","dev.racci.minix.api.updater.Version.InvalidVersionStringException"]},{"name":"class ItemStackExposedDelegate(val column: Column<ExposedBlob>) : ExposedDelegate<ItemStack> ","description":"dev.racci.minix.api.utils.exposed.ItemStackExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-item-stack-exposed-delegate/index.html","searchKeys":["ItemStackExposedDelegate","class ItemStackExposedDelegate(val column: Column<ExposedBlob>) : ExposedDelegate<ItemStack> ","dev.racci.minix.api.utils.exposed.ItemStackExposedDelegate"]},{"name":"class ItemStackExposedDelegateNullable(val column: Column<ExposedBlob?>) : ExposedDelegate<ItemStack?> ","description":"dev.racci.minix.api.utils.exposed.ItemStackExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-item-stack-exposed-delegate-nullable/index.html","searchKeys":["ItemStackExposedDelegateNullable","class ItemStackExposedDelegateNullable(val column: Column<ExposedBlob?>) : ExposedDelegate<ItemStack?> ","dev.racci.minix.api.utils.exposed.ItemStackExposedDelegateNullable"]},{"name":"class JenkinsUpdateProvider constructor(host: String, job: String, token: String? = null, artifactSearchRegex: String? = null) : BaseOnlineProviderWithDownload","description":"dev.racci.minix.api.updater.providers.JenkinsUpdateProvider","location":"Minix-API/dev.racci.minix.api.updater.providers/-jenkins-update-provider/index.html","searchKeys":["JenkinsUpdateProvider","class JenkinsUpdateProvider constructor(host: String, job: String, token: String? = null, artifactSearchRegex: String? = null) : BaseOnlineProviderWithDownload","dev.racci.minix.api.updater.providers.JenkinsUpdateProvider"]},{"name":"class LazyComponentReplacement(value: () -> Component) : Tag, Inserting","description":"dev.racci.minix.api.utils.adventure.LazyComponentReplacement","location":"Minix-API/dev.racci.minix.api.utils.adventure/-lazy-component-replacement/index.html","searchKeys":["LazyComponentReplacement","class LazyComponentReplacement(value: () -> Component) : Tag, Inserting","dev.racci.minix.api.utils.adventure.LazyComponentReplacement"]},{"name":"class LazyStringReplacement(value: () -> String) : Tag, PreProcess","description":"dev.racci.minix.api.utils.adventure.LazyStringReplacement","location":"Minix-API/dev.racci.minix.api.utils.adventure/-lazy-string-replacement/index.html","searchKeys":["LazyStringReplacement","class LazyStringReplacement(value: () -> String) : Tag, PreProcess","dev.racci.minix.api.utils.adventure.LazyStringReplacement"]},{"name":"class Legacy","description":"dev.racci.minix.api.utils.primitive.Legacy","location":"Minix-API/dev.racci.minix.api.utils.primitive/-legacy/index.html","searchKeys":["Legacy","class Legacy","dev.racci.minix.api.utils.primitive.Legacy"]},{"name":"class LevelConversionException(from: Any) : RuntimeException","description":"dev.racci.minix.api.exceptions.LevelConversionException","location":"Minix-API/dev.racci.minix.api.exceptions/-level-conversion-exception/index.html","searchKeys":["LevelConversionException","class LevelConversionException(from: Any) : RuntimeException","dev.racci.minix.api.exceptions.LevelConversionException"]},{"name":"class LocationExposedDelegate(val column: Column<String>) : ExposedDelegate<Location> ","description":"dev.racci.minix.api.utils.exposed.LocationExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-exposed-delegate/index.html","searchKeys":["LocationExposedDelegate","class LocationExposedDelegate(val column: Column<String>) : ExposedDelegate<Location> ","dev.racci.minix.api.utils.exposed.LocationExposedDelegate"]},{"name":"class LocationExposedDelegateNullable(val column: Column<String?>) : ExposedDelegate<Location?> ","description":"dev.racci.minix.api.utils.exposed.LocationExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-exposed-delegate-nullable/index.html","searchKeys":["LocationExposedDelegateNullable","class LocationExposedDelegateNullable(val column: Column<String?>) : ExposedDelegate<Location?> ","dev.racci.minix.api.utils.exposed.LocationExposedDelegateNullable"]},{"name":"class LocationMultiColumnExposedDelegate(val worldColumn: Column<String>, val xColumn: Column<Double>, val yColumn: Column<Double>, val zColumn: Column<Double>, val yawColumn: Column<Float>, val pitchColumn: Column<Float>) : ExposedDelegate<Location> ","description":"dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-multi-column-exposed-delegate/index.html","searchKeys":["LocationMultiColumnExposedDelegate","class LocationMultiColumnExposedDelegate(val worldColumn: Column<String>, val xColumn: Column<Double>, val yColumn: Column<Double>, val zColumn: Column<Double>, val yawColumn: Column<Float>, val pitchColumn: Column<Float>) : ExposedDelegate<Location> ","dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegate"]},{"name":"class LocationMultiColumnExposedDelegateNullable(val worldColumn: Column<String?>, val xColumn: Column<Double?>, val yColumn: Column<Double?>, val zColumn: Column<Double?>, val yawColumn: Column<Float?>, val pitchColumn: Column<Float?>) : ExposedDelegate<Location?> ","description":"dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-multi-column-exposed-delegate-nullable/index.html","searchKeys":["LocationMultiColumnExposedDelegateNullable","class LocationMultiColumnExposedDelegateNullable(val worldColumn: Column<String?>, val xColumn: Column<Double?>, val yColumn: Column<Double?>, val zColumn: Column<Double?>, val yawColumn: Column<Float?>, val pitchColumn: Column<Float?>) : ExposedDelegate<Location?> ","dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegateNullable"]},{"name":"class LocationPosExposedDelegate(val column: Column<String>) : ExposedDelegate<LocationPos> ","description":"dev.racci.minix.api.utils.exposed.LocationPosExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-exposed-delegate/index.html","searchKeys":["LocationPosExposedDelegate","class LocationPosExposedDelegate(val column: Column<String>) : ExposedDelegate<LocationPos> ","dev.racci.minix.api.utils.exposed.LocationPosExposedDelegate"]},{"name":"class LocationPosExposedDelegateNullable(val column: Column<String?>) : ExposedDelegate<LocationPos?> ","description":"dev.racci.minix.api.utils.exposed.LocationPosExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-exposed-delegate-nullable/index.html","searchKeys":["LocationPosExposedDelegateNullable","class LocationPosExposedDelegateNullable(val column: Column<String?>) : ExposedDelegate<LocationPos?> ","dev.racci.minix.api.utils.exposed.LocationPosExposedDelegateNullable"]},{"name":"class LocationPosMultiColumnExposedDelegate(val xColumn: Column<Double>, val yColumn: Column<Double>, val zColumn: Column<Double>, val yawColumn: Column<Float>, val pitchColumn: Column<Float>) : ExposedDelegate<LocationPos> ","description":"dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-multi-column-exposed-delegate/index.html","searchKeys":["LocationPosMultiColumnExposedDelegate","class LocationPosMultiColumnExposedDelegate(val xColumn: Column<Double>, val yColumn: Column<Double>, val zColumn: Column<Double>, val yawColumn: Column<Float>, val pitchColumn: Column<Float>) : ExposedDelegate<LocationPos> ","dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegate"]},{"name":"class LocationPosMultiColumnExposedDelegateNullable(val xColumn: Column<Double?>, val yColumn: Column<Double?>, val zColumn: Column<Double?>, val yawColumn: Column<Float?>, val pitchColumn: Column<Float?>) : ExposedDelegate<LocationPos?> ","description":"dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-multi-column-exposed-delegate-nullable/index.html","searchKeys":["LocationPosMultiColumnExposedDelegateNullable","class LocationPosMultiColumnExposedDelegateNullable(val xColumn: Column<Double?>, val yColumn: Column<Double?>, val zColumn: Column<Double?>, val yawColumn: Column<Float?>, val pitchColumn: Column<Float?>) : ExposedDelegate<LocationPos?> ","dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegateNullable"]},{"name":"class MCVersion : Comparable<MCVersion> ","description":"dev.racci.minix.api.utils.minecraft.MCVersion","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/index.html","searchKeys":["MCVersion","class MCVersion : Comparable<MCVersion> ","dev.racci.minix.api.utils.minecraft.MCVersion"]},{"name":"class MCVersionDelegate","description":"dev.racci.minix.api.utils.minecraft.MCVersion.MCVersionDelegate","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-m-c-version-delegate/index.html","searchKeys":["MCVersionDelegate","class MCVersionDelegate","dev.racci.minix.api.utils.minecraft.MCVersion.MCVersionDelegate"]},{"name":"class MissingAnnotationException(kClass: KClass<*>, annotation: KClass<Annotation>) : RuntimeException","description":"dev.racci.minix.api.exceptions.MissingAnnotationException","location":"Minix-API/dev.racci.minix.api.exceptions/-missing-annotation-exception/index.html","searchKeys":["MissingAnnotationException","class MissingAnnotationException(kClass: KClass<*>, annotation: KClass<Annotation>) : RuntimeException","dev.racci.minix.api.exceptions.MissingAnnotationException"]},{"name":"class MissingPluginException(message: String) : Exception","description":"dev.racci.minix.api.exceptions.MissingPluginException","location":"Minix-API/dev.racci.minix.api.exceptions/-missing-plugin-exception/index.html","searchKeys":["MissingPluginException","class MissingPluginException(message: String) : Exception","dev.racci.minix.api.exceptions.MissingPluginException"]},{"name":"class MultiMap<K, V>","description":"dev.racci.minix.api.utils.collections.MultiMap","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/index.html","searchKeys":["MultiMap","class MultiMap<K, V>","dev.racci.minix.api.utils.collections.MultiMap"]},{"name":"class NoTraceException(message: String? = null, cause: Throwable? = null) : RuntimeException","description":"dev.racci.minix.api.exceptions.NoTraceException","location":"Minix-API/dev.racci.minix.api.exceptions/-no-trace-exception/index.html","searchKeys":["NoTraceException","class NoTraceException(message: String? = null, cause: Throwable? = null) : RuntimeException","dev.racci.minix.api.exceptions.NoTraceException"]},{"name":"class NotSuccessfullyQueriedException : Exception","description":"dev.racci.minix.api.updater.providers.NotSuccessfullyQueriedException","location":"Minix-API/dev.racci.minix.api.updater.providers/-not-successfully-queried-exception/index.html","searchKeys":["NotSuccessfullyQueriedException","class NotSuccessfullyQueriedException : Exception","dev.racci.minix.api.updater.providers.NotSuccessfullyQueriedException"]},{"name":"class NullUpdateProvider : UpdateProvider","description":"dev.racci.minix.api.updater.providers.NullUpdateProvider","location":"Minix-API/dev.racci.minix.api.updater.providers/-null-update-provider/index.html","searchKeys":["NullUpdateProvider","class NullUpdateProvider : UpdateProvider","dev.racci.minix.api.updater.providers.NullUpdateProvider"]},{"name":"class ObservableList<T> : ObservableCollection<T> , MutableList<T> ","description":"dev.racci.minix.api.utils.collections.ObservableList","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-list/index.html","searchKeys":["ObservableList","class ObservableList<T> : ObservableCollection<T> , MutableList<T> ","dev.racci.minix.api.utils.collections.ObservableList"]},{"name":"class ObservableMap<K, V> : ObservableHolder<Pair<K, V>> , MutableMap<K, V> ","description":"dev.racci.minix.api.utils.collections.ObservableMap","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-map/index.html","searchKeys":["ObservableMap","class ObservableMap<K, V> : ObservableHolder<Pair<K, V>> , MutableMap<K, V> ","dev.racci.minix.api.utils.collections.ObservableMap"]},{"name":"class ObservableMutableIterator<T>(iterator: MutableIterator<T>, runListeners: ObservableListener<T>) : MutableIterator<T> ","description":"dev.racci.minix.api.utils.collections.ObservableMutableIterator","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-mutable-iterator/index.html","searchKeys":["ObservableMutableIterator","class ObservableMutableIterator<T>(iterator: MutableIterator<T>, runListeners: ObservableListener<T>) : MutableIterator<T> ","dev.racci.minix.api.utils.collections.ObservableMutableIterator"]},{"name":"class ObservableMutableListIterator<T>(iterator: MutableListIterator<T>, runListeners: ObservableListener<T>) : MutableListIterator<T> ","description":"dev.racci.minix.api.utils.collections.ObservableMutableListIterator","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-mutable-list-iterator/index.html","searchKeys":["ObservableMutableListIterator","class ObservableMutableListIterator<T>(iterator: MutableListIterator<T>, runListeners: ObservableListener<T>) : MutableListIterator<T> ","dev.racci.minix.api.utils.collections.ObservableMutableListIterator"]},{"name":"class ObservableSet<T> : ObservableCollection<T> , MutableSet<T> ","description":"dev.racci.minix.api.utils.collections.ObservableSet","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-set/index.html","searchKeys":["ObservableSet","class ObservableSet<T> : ObservableCollection<T> , MutableSet<T> ","dev.racci.minix.api.utils.collections.ObservableSet"]},{"name":"class OfflinePlayerExposedDelegate(val column: Column<UUID>) : ExposedDelegate<OfflinePlayer> ","description":"dev.racci.minix.api.utils.exposed.OfflinePlayerExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-offline-player-exposed-delegate/index.html","searchKeys":["OfflinePlayerExposedDelegate","class OfflinePlayerExposedDelegate(val column: Column<UUID>) : ExposedDelegate<OfflinePlayer> ","dev.racci.minix.api.utils.exposed.OfflinePlayerExposedDelegate"]},{"name":"class OfflinePlayerExposedDelegateNullable(val column: Column<UUID?>) : ExposedDelegate<OfflinePlayer?> ","description":"dev.racci.minix.api.utils.exposed.OfflinePlayerExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-offline-player-exposed-delegate-nullable/index.html","searchKeys":["OfflinePlayerExposedDelegateNullable","class OfflinePlayerExposedDelegateNullable(val column: Column<UUID?>) : ExposedDelegate<OfflinePlayer?> ","dev.racci.minix.api.utils.exposed.OfflinePlayerExposedDelegateNullable"]},{"name":"class OnlinePlayerList(val plugin: MinixPlugin) : LinkedList<Player> , OnlinePlayerCollection","description":"dev.racci.minix.api.utils.collections.OnlinePlayerList","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-list/index.html","searchKeys":["OnlinePlayerList","class OnlinePlayerList(val plugin: MinixPlugin) : LinkedList<Player> , OnlinePlayerCollection","dev.racci.minix.api.utils.collections.OnlinePlayerList"]},{"name":"class OnlinePlayerMap<V>(val plugin: MinixPlugin) : HashMap<Player, V> , KListener<MinixPlugin> ","description":"dev.racci.minix.api.utils.collections.OnlinePlayerMap","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-map/index.html","searchKeys":["OnlinePlayerMap","class OnlinePlayerMap<V>(val plugin: MinixPlugin) : HashMap<Player, V> , KListener<MinixPlugin> ","dev.racci.minix.api.utils.collections.OnlinePlayerMap"]},{"name":"class OnlinePlayerSet(val plugin: MinixPlugin) : HashSet<Player> , OnlinePlayerCollection","description":"dev.racci.minix.api.utils.collections.OnlinePlayerSet","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-set/index.html","searchKeys":["OnlinePlayerSet","class OnlinePlayerSet(val plugin: MinixPlugin) : HashSet<Player> , OnlinePlayerCollection","dev.racci.minix.api.utils.collections.OnlinePlayerSet"]},{"name":"class PartialComponent","description":"dev.racci.minix.api.utils.adventure.PartialComponent","location":"Minix-API/dev.racci.minix.api.utils.adventure/-partial-component/index.html","searchKeys":["PartialComponent","class PartialComponent","dev.racci.minix.api.utils.adventure.PartialComponent"]},{"name":"class Pdc : NbtWrapper","description":"dev.racci.minix.api.utils.minecraft.Pdc","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pdc/index.html","searchKeys":["Pdc","class Pdc : NbtWrapper","dev.racci.minix.api.utils.minecraft.Pdc"]},{"name":"class PlayerDoubleLeftClickEvent(player: Player, val item: ItemStack?, val blockData: BlockData?, val entity: Entity?) : AbstractComboEvent","description":"dev.racci.minix.api.events.PlayerDoubleLeftClickEvent","location":"Minix-API/dev.racci.minix.api.events/-player-double-left-click-event/index.html","searchKeys":["PlayerDoubleLeftClickEvent","class PlayerDoubleLeftClickEvent(player: Player, val item: ItemStack?, val blockData: BlockData?, val entity: Entity?) : AbstractComboEvent","dev.racci.minix.api.events.PlayerDoubleLeftClickEvent"]},{"name":"class PlayerDoubleOffhandEvent(player: Player, val item: ItemStack?, val offHandItem: ItemStack?, val blockData: BlockData? = null, val entity: Entity? = null) : AbstractComboEvent","description":"dev.racci.minix.api.events.PlayerDoubleOffhandEvent","location":"Minix-API/dev.racci.minix.api.events/-player-double-offhand-event/index.html","searchKeys":["PlayerDoubleOffhandEvent","class PlayerDoubleOffhandEvent(player: Player, val item: ItemStack?, val offHandItem: ItemStack?, val blockData: BlockData? = null, val entity: Entity? = null) : AbstractComboEvent","dev.racci.minix.api.events.PlayerDoubleOffhandEvent"]},{"name":"class PlayerDoubleRightClickEvent(player: Player, val item: ItemStack?, val blockData: BlockData?, val entity: Entity?) : AbstractComboEvent","description":"dev.racci.minix.api.events.PlayerDoubleRightClickEvent","location":"Minix-API/dev.racci.minix.api.events/-player-double-right-click-event/index.html","searchKeys":["PlayerDoubleRightClickEvent","class PlayerDoubleRightClickEvent(player: Player, val item: ItemStack?, val blockData: BlockData?, val entity: Entity?) : AbstractComboEvent","dev.racci.minix.api.events.PlayerDoubleRightClickEvent"]},{"name":"class PlayerEnterLiquidEvent(player: Player, val previousType: LiquidType, val newType: LiquidType) : PlayerLiquidEvent","description":"dev.racci.minix.api.events.PlayerEnterLiquidEvent","location":"Minix-API/dev.racci.minix.api.events/-player-enter-liquid-event/index.html","searchKeys":["PlayerEnterLiquidEvent","class PlayerEnterLiquidEvent(player: Player, val previousType: LiquidType, val newType: LiquidType) : PlayerLiquidEvent","dev.racci.minix.api.events.PlayerEnterLiquidEvent"]},{"name":"class PlayerExitLiquidEvent(player: Player, val previousType: LiquidType, val newType: LiquidType) : PlayerLiquidEvent","description":"dev.racci.minix.api.events.PlayerExitLiquidEvent","location":"Minix-API/dev.racci.minix.api.events/-player-exit-liquid-event/index.html","searchKeys":["PlayerExitLiquidEvent","class PlayerExitLiquidEvent(player: Player, val previousType: LiquidType, val newType: LiquidType) : PlayerLiquidEvent","dev.racci.minix.api.events.PlayerExitLiquidEvent"]},{"name":"class PlayerLeftClickEvent(player: Player, val item: ItemStack?, val blockData: BlockData?, val entity: Entity?) : AbstractComboEvent","description":"dev.racci.minix.api.events.PlayerLeftClickEvent","location":"Minix-API/dev.racci.minix.api.events/-player-left-click-event/index.html","searchKeys":["PlayerLeftClickEvent","class PlayerLeftClickEvent(player: Player, val item: ItemStack?, val blockData: BlockData?, val entity: Entity?) : AbstractComboEvent","dev.racci.minix.api.events.PlayerLeftClickEvent"]},{"name":"class PlayerLightEvent(player: Player, val lightLevel: Int) : KPlayerEvent","description":"dev.racci.minix.api.events.PlayerLightEvent","location":"Minix-API/dev.racci.minix.api.events/-player-light-event/index.html","searchKeys":["PlayerLightEvent","class PlayerLightEvent(player: Player, val lightLevel: Int) : KPlayerEvent","dev.racci.minix.api.events.PlayerLightEvent"]},{"name":"class PlayerMap<T> : HashMap<Player, T> , WithPlugin<MinixPlugin> ","description":"dev.racci.minix.api.collections.PlayerMap","location":"Minix-API/dev.racci.minix.api.collections/-player-map/index.html","searchKeys":["PlayerMap","class PlayerMap<T> : HashMap<Player, T> , WithPlugin<MinixPlugin> ","dev.racci.minix.api.collections.PlayerMap"]},{"name":"class PlayerMoveFullXYZEvent(player: Player, val from: Location, var to: Location) : KPlayerEvent","description":"dev.racci.minix.api.events.PlayerMoveFullXYZEvent","location":"Minix-API/dev.racci.minix.api.events/-player-move-full-x-y-z-event/index.html","searchKeys":["PlayerMoveFullXYZEvent","class PlayerMoveFullXYZEvent(player: Player, val from: Location, var to: Location) : KPlayerEvent","dev.racci.minix.api.events.PlayerMoveFullXYZEvent"]},{"name":"class PlayerMoveXYZEvent(player: Player, val from: Location, var to: Location) : KPlayerEvent","description":"dev.racci.minix.api.events.PlayerMoveXYZEvent","location":"Minix-API/dev.racci.minix.api.events/-player-move-x-y-z-event/index.html","searchKeys":["PlayerMoveXYZEvent","class PlayerMoveXYZEvent(player: Player, val from: Location, var to: Location) : KPlayerEvent","dev.racci.minix.api.events.PlayerMoveXYZEvent"]},{"name":"class PlayerOffhandEvent(player: Player, val item: ItemStack?, val offHandItem: ItemStack?, val blockData: BlockData?, val entity: Entity?) : AbstractComboEvent","description":"dev.racci.minix.api.events.PlayerOffhandEvent","location":"Minix-API/dev.racci.minix.api.events/-player-offhand-event/index.html","searchKeys":["PlayerOffhandEvent","class PlayerOffhandEvent(player: Player, val item: ItemStack?, val offHandItem: ItemStack?, val blockData: BlockData?, val entity: Entity?) : AbstractComboEvent","dev.racci.minix.api.events.PlayerOffhandEvent"]},{"name":"class PlayerRightClickEvent(player: Player, val item: ItemStack?, val blockData: BlockData?, val entity: Entity?) : AbstractComboEvent","description":"dev.racci.minix.api.events.PlayerRightClickEvent","location":"Minix-API/dev.racci.minix.api.events/-player-right-click-event/index.html","searchKeys":["PlayerRightClickEvent","class PlayerRightClickEvent(player: Player, val item: ItemStack?, val blockData: BlockData?, val entity: Entity?) : AbstractComboEvent","dev.racci.minix.api.events.PlayerRightClickEvent"]},{"name":"class PlayerShiftDoubleLeftClickEvent(player: Player, val item: ItemStack?, val blockData: BlockData?, val entity: Entity?) : AbstractComboEvent","description":"dev.racci.minix.api.events.PlayerShiftDoubleLeftClickEvent","location":"Minix-API/dev.racci.minix.api.events/-player-shift-double-left-click-event/index.html","searchKeys":["PlayerShiftDoubleLeftClickEvent","class PlayerShiftDoubleLeftClickEvent(player: Player, val item: ItemStack?, val blockData: BlockData?, val entity: Entity?) : AbstractComboEvent","dev.racci.minix.api.events.PlayerShiftDoubleLeftClickEvent"]},{"name":"class PlayerShiftDoubleOffhandEvent(player: Player, val item: ItemStack?, val offHandItem: ItemStack?, val blockData: BlockData? = null, val entity: Entity? = null) : AbstractComboEvent","description":"dev.racci.minix.api.events.PlayerShiftDoubleOffhandEvent","location":"Minix-API/dev.racci.minix.api.events/-player-shift-double-offhand-event/index.html","searchKeys":["PlayerShiftDoubleOffhandEvent","class PlayerShiftDoubleOffhandEvent(player: Player, val item: ItemStack?, val offHandItem: ItemStack?, val blockData: BlockData? = null, val entity: Entity? = null) : AbstractComboEvent","dev.racci.minix.api.events.PlayerShiftDoubleOffhandEvent"]},{"name":"class PlayerShiftDoubleRightClickEvent(player: Player, val item: ItemStack?, val blockData: BlockData?, val entity: Entity?) : AbstractComboEvent","description":"dev.racci.minix.api.events.PlayerShiftDoubleRightClickEvent","location":"Minix-API/dev.racci.minix.api.events/-player-shift-double-right-click-event/index.html","searchKeys":["PlayerShiftDoubleRightClickEvent","class PlayerShiftDoubleRightClickEvent(player: Player, val item: ItemStack?, val blockData: BlockData?, val entity: Entity?) : AbstractComboEvent","dev.racci.minix.api.events.PlayerShiftDoubleRightClickEvent"]},{"name":"class PlayerShiftLeftClickEvent(player: Player, val item: ItemStack?, val blockData: BlockData? = null, val entity: Entity? = null) : AbstractComboEvent","description":"dev.racci.minix.api.events.PlayerShiftLeftClickEvent","location":"Minix-API/dev.racci.minix.api.events/-player-shift-left-click-event/index.html","searchKeys":["PlayerShiftLeftClickEvent","class PlayerShiftLeftClickEvent(player: Player, val item: ItemStack?, val blockData: BlockData? = null, val entity: Entity? = null) : AbstractComboEvent","dev.racci.minix.api.events.PlayerShiftLeftClickEvent"]},{"name":"class PlayerShiftOffhandEvent(player: Player, val item: ItemStack?, val offHandItem: ItemStack?, val blockData: BlockData? = null, val entity: Entity? = null) : AbstractComboEvent","description":"dev.racci.minix.api.events.PlayerShiftOffhandEvent","location":"Minix-API/dev.racci.minix.api.events/-player-shift-offhand-event/index.html","searchKeys":["PlayerShiftOffhandEvent","class PlayerShiftOffhandEvent(player: Player, val item: ItemStack?, val offHandItem: ItemStack?, val blockData: BlockData? = null, val entity: Entity? = null) : AbstractComboEvent","dev.racci.minix.api.events.PlayerShiftOffhandEvent"]},{"name":"class PlayerShiftRightClickEvent(player: Player, val item: ItemStack?, val blockData: BlockData? = null, val entity: Entity? = null) : AbstractComboEvent","description":"dev.racci.minix.api.events.PlayerShiftRightClickEvent","location":"Minix-API/dev.racci.minix.api.events/-player-shift-right-click-event/index.html","searchKeys":["PlayerShiftRightClickEvent","class PlayerShiftRightClickEvent(player: Player, val item: ItemStack?, val blockData: BlockData? = null, val entity: Entity? = null) : AbstractComboEvent","dev.racci.minix.api.events.PlayerShiftRightClickEvent"]},{"name":"class PlayerUnloadEvent(val player: Player? = null, val uuid: UUID = player!!.uniqueId) : KEvent","description":"dev.racci.minix.api.events.PlayerUnloadEvent","location":"Minix-API/dev.racci.minix.api.events/-player-unload-event/index.html","searchKeys":["PlayerUnloadEvent","class PlayerUnloadEvent(val player: Player? = null, val uuid: UUID = player!!.uniqueId) : KEvent","dev.racci.minix.api.events.PlayerUnloadEvent"]},{"name":"class PluginData<P : MinixPlugin>(val plugin: P)","description":"dev.racci.minix.api.plugin.PluginData","location":"Minix-API/dev.racci.minix.api.plugin/-plugin-data/index.html","searchKeys":["PluginData","class PluginData<P : MinixPlugin>(val plugin: P)","dev.racci.minix.api.plugin.PluginData"]},{"name":"class PluginDependentMinixLogger<T : MinixPlugin>(val plugin: T, loggingLevel: MinixLogger.LoggingLevel = LoggingLevel.INFO) : MinixLogger, WithPlugin<T> ","description":"dev.racci.minix.api.plugin.logger.PluginDependentMinixLogger","location":"Minix-API/dev.racci.minix.api.plugin.logger/-plugin-dependent-minix-logger/index.html","searchKeys":["PluginDependentMinixLogger","class PluginDependentMinixLogger<T : MinixPlugin>(val plugin: T, loggingLevel: MinixLogger.LoggingLevel = LoggingLevel.INFO) : MinixLogger, WithPlugin<T> ","dev.racci.minix.api.plugin.logger.PluginDependentMinixLogger"]},{"name":"class PluginUpdater","description":"dev.racci.minix.api.data.PluginUpdater","location":"Minix-API/dev.racci.minix.api.data/-plugin-updater/index.html","searchKeys":["PluginUpdater","class PluginUpdater","dev.racci.minix.api.data.PluginUpdater"]},{"name":"class PosRange<T, POS : VectorComparable<POS>>(val first: POS, val last: POS, val buildIterator: () -> Iterator<T>) : ClosedRange<POS> , Iterable<T> ","description":"dev.racci.minix.api.utils.minecraft.PosRange","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pos-range/index.html","searchKeys":["PosRange","class PosRange<T, POS : VectorComparable<POS>>(val first: POS, val last: POS, val buildIterator: () -> Iterator<T>) : ClosedRange<POS> , Iterable<T> ","dev.racci.minix.api.utils.minecraft.PosRange"]},{"name":"class PosRangeIterator<T : VectorComparable<T>>(first: T, last: T, val factor: (axis: IntArray) -> T) : Iterator<T> ","description":"dev.racci.minix.api.utils.minecraft.PosRangeIterator","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pos-range-iterator/index.html","searchKeys":["PosRangeIterator","class PosRangeIterator<T : VectorComparable<T>>(first: T, last: T, val factor: (axis: IntArray) -> T) : Iterator<T> ","dev.racci.minix.api.utils.minecraft.PosRangeIterator"]},{"name":"class RangeIteratorWithFactor<T, POS : VectorComparable<POS>>(start: T, end: T, factor: (POS) -> T, posFactor: (T) -> POS) : Iterator<T> ","description":"dev.racci.minix.api.utils.minecraft.RangeIteratorWithFactor","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-range-iterator-with-factor/index.html","searchKeys":["RangeIteratorWithFactor","class RangeIteratorWithFactor<T, POS : VectorComparable<POS>>(start: T, end: T, factor: (POS) -> T, posFactor: (T) -> POS) : Iterator<T> ","dev.racci.minix.api.utils.minecraft.RangeIteratorWithFactor"]},{"name":"class RequestTypeNotAvailableException(message: String?) : Exception","description":"dev.racci.minix.api.updater.providers.RequestTypeNotAvailableException","location":"Minix-API/dev.racci.minix.api.updater.providers/-request-type-not-available-exception/index.html","searchKeys":["RequestTypeNotAvailableException","class RequestTypeNotAvailableException(message: String?) : Exception","dev.racci.minix.api.updater.providers.RequestTypeNotAvailableException"]},{"name":"class SerializableAttributeModifier","description":"dev.racci.minix.api.serializables.SerializableAttributeModifier","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-attribute-modifier/index.html","searchKeys":["SerializableAttributeModifier","class SerializableAttributeModifier","dev.racci.minix.api.serializables.SerializableAttributeModifier"]},{"name":"class SerializableItemMeta(var displayName: Component? = null, var localizedName: String? = null, var lore: ImmutableList<Component>? = null, var customModelData: Int? = null, var enchants: ImmutableMap<Enchantment, Int>? = null, var itemFlags: ImmutableSet<ItemFlag>? = null, var unbreakable: Boolean = false, var attributeModifiers: MultiMap<Attribute, AttributeModifier>? = null, var damage: Int? = null)","description":"dev.racci.minix.api.serializables.SerializableItemMeta","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-item-meta/index.html","searchKeys":["SerializableItemMeta","class SerializableItemMeta(var displayName: Component? = null, var localizedName: String? = null, var lore: ImmutableList<Component>? = null, var customModelData: Int? = null, var enchants: ImmutableMap<Enchantment, Int>? = null, var itemFlags: ImmutableSet<ItemFlag>? = null, var unbreakable: Boolean = false, var attributeModifiers: MultiMap<Attribute, AttributeModifier>? = null, var damage: Int? = null)","dev.racci.minix.api.serializables.SerializableItemMeta"]},{"name":"class SerializableItemStack(var type: Material? = null, var amount: Int = 1, var meta: SerializableItemMeta? = null, var skullMeta: SerializableSkullMeta? = null, var tag: String = \"\")","description":"dev.racci.minix.api.serializables.SerializableItemStack","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-item-stack/index.html","searchKeys":["SerializableItemStack","class SerializableItemStack(var type: Material? = null, var amount: Int = 1, var meta: SerializableItemMeta? = null, var skullMeta: SerializableSkullMeta? = null, var tag: String = \"\")","dev.racci.minix.api.serializables.SerializableItemStack"]},{"name":"class SerializableRecipe(val key: String, val ingredients: SerializableRecipeIngredients, val result: SerializableItemStack, val group: String = \"\")","description":"dev.racci.minix.api.serializables.recipes.SerializableRecipe","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-serializable-recipe/index.html","searchKeys":["SerializableRecipe","class SerializableRecipe(val key: String, val ingredients: SerializableRecipeIngredients, val result: SerializableItemStack, val group: String = \"\")","dev.racci.minix.api.serializables.recipes.SerializableRecipe"]},{"name":"class SerializableSkullMeta","description":"dev.racci.minix.api.serializables.SerializableSkullMeta","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-skull-meta/index.html","searchKeys":["SerializableSkullMeta","class SerializableSkullMeta","dev.racci.minix.api.serializables.SerializableSkullMeta"]},{"name":"class ShapedRecipeIngredients(val items: Map<String, SerializableItemStack>, val configuration: String = \"\") : SerializableRecipeIngredients","description":"dev.racci.minix.api.serializables.recipes.ShapedRecipeIngredients","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-shaped-recipe-ingredients/index.html","searchKeys":["ShapedRecipeIngredients","class ShapedRecipeIngredients(val items: Map<String, SerializableItemStack>, val configuration: String = \"\") : SerializableRecipeIngredients","dev.racci.minix.api.serializables.recipes.ShapedRecipeIngredients"]},{"name":"class ShapelessRecipeIngredients(val items: List<SerializableItemStack>) : SerializableRecipeIngredients","description":"dev.racci.minix.api.serializables.recipes.ShapelessRecipeIngredients","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-shapeless-recipe-ingredients/index.html","searchKeys":["ShapelessRecipeIngredients","class ShapelessRecipeIngredients(val items: List<SerializableItemStack>) : SerializableRecipeIngredients","dev.racci.minix.api.serializables.recipes.ShapelessRecipeIngredients"]},{"name":"class SmithingRecipeIngredients(val input: SerializableItemStack, val addition: SerializableItemStack) : SerializableRecipeIngredients","description":"dev.racci.minix.api.serializables.recipes.SmithingRecipeIngredients","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-smithing-recipe-ingredients/index.html","searchKeys":["SmithingRecipeIngredients","class SmithingRecipeIngredients(val input: SerializableItemStack, val addition: SerializableItemStack) : SerializableRecipeIngredients","dev.racci.minix.api.serializables.recipes.SmithingRecipeIngredients"]},{"name":"class SmokingRecipeIngredients(val input: SerializableItemStack, val experience: Float, val cookingTime: Int) : SerializableRecipeIngredients","description":"dev.racci.minix.api.serializables.recipes.SmokingRecipeIngredients","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-smoking-recipe-ingredients/index.html","searchKeys":["SmokingRecipeIngredients","class SmokingRecipeIngredients(val input: SerializableItemStack, val experience: Float, val cookingTime: Int) : SerializableRecipeIngredients","dev.racci.minix.api.serializables.recipes.SmokingRecipeIngredients"]},{"name":"class SoftDependencyDelegate<T : Plugin>(val pluginName: String, val type: KClass<T>) : ReadOnlyProperty<MinixPlugin, T?> ","description":"dev.racci.minix.api.utils.minecraft.PluginUtils.SoftDependencyDelegate","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-plugin-utils/-soft-dependency-delegate/index.html","searchKeys":["SoftDependencyDelegate","class SoftDependencyDelegate<T : Plugin>(val pluginName: String, val type: KClass<T>) : ReadOnlyProperty<MinixPlugin, T?> ","dev.racci.minix.api.utils.minecraft.PluginUtils.SoftDependencyDelegate"]},{"name":"class SpigotUpdateProvider(projectID: Int, fileName: String = \".jar\") : BaseOnlineProvider","description":"dev.racci.minix.api.updater.providers.SpigotUpdateProvider","location":"Minix-API/dev.racci.minix.api.updater.providers/-spigot-update-provider/index.html","searchKeys":["SpigotUpdateProvider","class SpigotUpdateProvider(projectID: Int, fileName: String = \".jar\") : BaseOnlineProvider","dev.racci.minix.api.updater.providers.SpigotUpdateProvider"]},{"name":"class StoneCuttingRecipeIngredients(val input: SerializableItemStack) : SerializableRecipeIngredients","description":"dev.racci.minix.api.serializables.recipes.StoneCuttingRecipeIngredients","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-stone-cutting-recipe-ingredients/index.html","searchKeys":["StoneCuttingRecipeIngredients","class StoneCuttingRecipeIngredients(val input: SerializableItemStack) : SerializableRecipeIngredients","dev.racci.minix.api.serializables.recipes.StoneCuttingRecipeIngredients"]},{"name":"class UnsafeUtil","description":"dev.racci.minix.api.utils.UnsafeUtil","location":"Minix-API/dev.racci.minix.api.utils/-unsafe-util/index.html","searchKeys":["UnsafeUtil","class UnsafeUtil","dev.racci.minix.api.utils.UnsafeUtil"]},{"name":"class UpdateProviderSerializer : TypeSerializer<UpdateProvider> ","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateProviderSerializer","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-provider-serializer/index.html","searchKeys":["UpdateProviderSerializer","class UpdateProviderSerializer : TypeSerializer<UpdateProvider> ","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateProviderSerializer"]},{"name":"class Version constructor(rawVersion: String, ignoreTags: Boolean = false) : Comparable<Version> ","description":"dev.racci.minix.api.updater.Version","location":"Minix-API/dev.racci.minix.api.updater/-version/index.html","searchKeys":["Version","class Version constructor(rawVersion: String, ignoreTags: Boolean = false) : Comparable<Version> ","dev.racci.minix.api.updater.Version"]},{"name":"class WorldDayEvent(world: World) : KWorldEvent","description":"dev.racci.minix.api.events.WorldDayEvent","location":"Minix-API/dev.racci.minix.api.events/-world-day-event/index.html","searchKeys":["WorldDayEvent","class WorldDayEvent(world: World) : KWorldEvent","dev.racci.minix.api.events.WorldDayEvent"]},{"name":"class WorldExposedDelegate(val column: Column<String>) : ExposedDelegate<World> ","description":"dev.racci.minix.api.utils.exposed.WorldExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-world-exposed-delegate/index.html","searchKeys":["WorldExposedDelegate","class WorldExposedDelegate(val column: Column<String>) : ExposedDelegate<World> ","dev.racci.minix.api.utils.exposed.WorldExposedDelegate"]},{"name":"class WorldExposedDelegateNullable(val column: Column<String?>) : ExposedDelegate<World?> ","description":"dev.racci.minix.api.utils.exposed.WorldExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-world-exposed-delegate-nullable/index.html","searchKeys":["WorldExposedDelegateNullable","class WorldExposedDelegateNullable(val column: Column<String?>) : ExposedDelegate<World?> ","dev.racci.minix.api.utils.exposed.WorldExposedDelegateNullable"]},{"name":"class WorldNightEvent(world: World) : KWorldEvent","description":"dev.racci.minix.api.events.WorldNightEvent","location":"Minix-API/dev.racci.minix.api.events/-world-night-event/index.html","searchKeys":["WorldNightEvent","class WorldNightEvent(world: World) : KWorldEvent","dev.racci.minix.api.events.WorldNightEvent"]},{"name":"data class BlockData(val block: Block, val blockFace: BlockFace)","description":"dev.racci.minix.api.events.BlockData","location":"Minix-API/dev.racci.minix.api.events/-block-data/index.html","searchKeys":["BlockData","data class BlockData(val block: Block, val blockFace: BlockFace)","dev.racci.minix.api.events.BlockData"]},{"name":"data class BlockPos(val x: Int, val y: Int, val z: Int) : VectorComparable<BlockPos> ","description":"dev.racci.minix.api.utils.minecraft.BlockPos","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-block-pos/index.html","searchKeys":["BlockPos","data class BlockPos(val x: Int, val y: Int, val z: Int) : VectorComparable<BlockPos> ","dev.racci.minix.api.utils.minecraft.BlockPos"]},{"name":"data class ChatInput(val plugin: MinixPlugin, val callback: ChatInputCallBack, val playerQuit: PlayerQuitFunction)","description":"dev.racci.minix.api.utils.minecraft.PlayerUtils.ChatInput","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-player-utils/-chat-input/index.html","searchKeys":["ChatInput","data class ChatInput(val plugin: MinixPlugin, val callback: ChatInputCallBack, val playerQuit: PlayerQuitFunction)","dev.racci.minix.api.utils.minecraft.PlayerUtils.ChatInput"]},{"name":"data class ChunkPos(val x: Int, val z: Int) : VectorComparable<ChunkPos> ","description":"dev.racci.minix.api.utils.minecraft.ChunkPos","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-chunk-pos/index.html","searchKeys":["ChunkPos","data class ChunkPos(val x: Int, val z: Int) : VectorComparable<ChunkPos> ","dev.racci.minix.api.utils.minecraft.ChunkPos"]},{"name":"data class Data(val bytes: Long) : Comparable<Data> ","description":"dev.racci.minix.api.utils.data.Data","location":"Minix-API/dev.racci.minix.api.utils.data/-data/index.html","searchKeys":["Data","data class Data(val bytes: Long) : Comparable<Data> ","dev.racci.minix.api.utils.data.Data"]},{"name":"data class ExtensionStateEvent(val extension: Extension<*>, val state: ExtensionState)","description":"dev.racci.minix.api.extension.ExtensionStateEvent","location":"Minix-API/dev.racci.minix.api.extension/-extension-state-event/index.html","searchKeys":["ExtensionStateEvent","data class ExtensionStateEvent(val extension: Extension<*>, val state: ExtensionState)","dev.racci.minix.api.extension.ExtensionStateEvent"]},{"name":"data class LocationPos(val x: Double, val y: Double, val z: Double, val yaw: Float, val pitch: Float) : VectorComparable<LocationPos> ","description":"dev.racci.minix.api.utils.minecraft.LocationPos","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-location-pos/index.html","searchKeys":["LocationPos","data class LocationPos(val x: Double, val y: Double, val z: Double, val yaw: Float, val pitch: Float) : VectorComparable<LocationPos> ","dev.racci.minix.api.utils.minecraft.LocationPos"]},{"name":"data class PlayerCallback<R>(val plugin: MinixPlugin, val callback: PlayerCallbackFunction<R>)","description":"dev.racci.minix.api.utils.minecraft.PlayerUtils.PlayerCallback","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-player-utils/-player-callback/index.html","searchKeys":["PlayerCallback","data class PlayerCallback<R>(val plugin: MinixPlugin, val callback: PlayerCallbackFunction<R>)","dev.racci.minix.api.utils.minecraft.PlayerUtils.PlayerCallback"]},{"name":"data class PlayerData(val uuid: UUID)","description":"dev.racci.minix.api.data.PlayerData","location":"Minix-API/dev.racci.minix.api.data/-player-data/index.html","searchKeys":["PlayerData","data class PlayerData(val uuid: UUID)","dev.racci.minix.api.data.PlayerData"]},{"name":"data class SimpleKListener(val plugin: MinixPlugin) : KListener<MinixPlugin> ","description":"dev.racci.minix.api.extensions.SimpleKListener","location":"Minix-API/dev.racci.minix.api.extensions/-simple-k-listener/index.html","searchKeys":["SimpleKListener","data class SimpleKListener(val plugin: MinixPlugin) : KListener<MinixPlugin> ","dev.racci.minix.api.extensions.SimpleKListener"]},{"name":"data class UpdateFile(var downloadURL: URL? = null, var name: String? = null, var fileName: String? = null, var checksum: String? = null, var changelog: String = \"\", var gameVersion: String? = null, var version: Version? = null, var gameVersions: Array<String>? = null)","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-file/index.html","searchKeys":["UpdateFile","data class UpdateFile(var downloadURL: URL? = null, var name: String? = null, var fileName: String? = null, var checksum: String? = null, var changelog: String = \"\", var gameVersion: String? = null, var version: Version? = null, var gameVersions: Array<String>? = null)","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile"]},{"name":"enum ChecksumType : Enum<ChecksumType> ","description":"dev.racci.minix.api.updater.ChecksumType","location":"Minix-API/dev.racci.minix.api.updater/-checksum-type/index.html","searchKeys":["ChecksumType","enum ChecksumType : Enum<ChecksumType> ","dev.racci.minix.api.updater.ChecksumType"]},{"name":"enum ExtensionState : Enum<ExtensionState> ","description":"dev.racci.minix.api.extension.ExtensionState","location":"Minix-API/dev.racci.minix.api.extension/-extension-state/index.html","searchKeys":["ExtensionState","enum ExtensionState : Enum<ExtensionState> ","dev.racci.minix.api.extension.ExtensionState"]},{"name":"enum LiquidType : Enum<LiquidType> ","description":"dev.racci.minix.api.events.LiquidType","location":"Minix-API/dev.racci.minix.api.events/-liquid-type/index.html","searchKeys":["LiquidType","enum LiquidType : Enum<LiquidType> ","dev.racci.minix.api.events.LiquidType"]},{"name":"enum LoggingLevel : Enum<MinixLogger.LoggingLevel> ","description":"dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-logging-level/index.html","searchKeys":["LoggingLevel","enum LoggingLevel : Enum<MinixLogger.LoggingLevel> ","dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel"]},{"name":"enum ObservableAction : Enum<ObservableAction> ","description":"dev.racci.minix.api.utils.collections.ObservableAction","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-action/index.html","searchKeys":["ObservableAction","enum ObservableAction : Enum<ObservableAction> ","dev.racci.minix.api.utils.collections.ObservableAction"]},{"name":"enum ReleaseType : Enum<ReleaseType> ","description":"dev.racci.minix.api.updater.ReleaseType","location":"Minix-API/dev.racci.minix.api.updater/-release-type/index.html","searchKeys":["ReleaseType","enum ReleaseType : Enum<ReleaseType> ","dev.racci.minix.api.updater.ReleaseType"]},{"name":"enum State : Enum<Loadable.State> ","description":"dev.racci.minix.api.utils.Loadable.State","location":"Minix-API/dev.racci.minix.api.utils/-loadable/-state/index.html","searchKeys":["State","enum State : Enum<Loadable.State> ","dev.racci.minix.api.utils.Loadable.State"]},{"name":"enum UpdateMode : Enum<UpdateMode> ","description":"dev.racci.minix.api.updater.UpdateMode","location":"Minix-API/dev.racci.minix.api.updater/-update-mode/index.html","searchKeys":["UpdateMode","enum UpdateMode : Enum<UpdateMode> ","dev.racci.minix.api.updater.UpdateMode"]},{"name":"enum UpdateResult : Enum<UpdateResult> ","description":"dev.racci.minix.api.updater.UpdateResult","location":"Minix-API/dev.racci.minix.api.updater/-update-result/index.html","searchKeys":["UpdateResult","enum UpdateResult : Enum<UpdateResult> ","dev.racci.minix.api.updater.UpdateResult"]},{"name":"fun () -> Any?.toSafeString(): String","description":"dev.racci.minix.api.utils.kotlin.toSafeString","location":"Minix-API/dev.racci.minix.api.utils.kotlin/to-safe-string.html","searchKeys":["toSafeString","fun () -> Any?.toSafeString(): String","dev.racci.minix.api.utils.kotlin.toSafeString"]},{"name":"fun <E> MinixPlugin.expirationListOf(): ExpirationList<E>","description":"dev.racci.minix.api.utils.collections.expirationListOf","location":"Minix-API/dev.racci.minix.api.utils.collections/expiration-list-of.html","searchKeys":["expirationListOf","fun <E> MinixPlugin.expirationListOf(): ExpirationList<E>","dev.racci.minix.api.utils.collections.expirationListOf"]},{"name":"fun <E> MinixPlugin.expirationListOf(expireTime: Int, vararg elements: Pair<E, OnExpireCallback<E>>): ExpirationList<E>","description":"dev.racci.minix.api.utils.collections.expirationListOf","location":"Minix-API/dev.racci.minix.api.utils.collections/expiration-list-of.html","searchKeys":["expirationListOf","fun <E> MinixPlugin.expirationListOf(expireTime: Int, vararg elements: Pair<E, OnExpireCallback<E>>): ExpirationList<E>","dev.racci.minix.api.utils.collections.expirationListOf"]},{"name":"fun <E> WithPlugin<*>.expirationListOf(): ExpirationList<E>","description":"dev.racci.minix.api.utils.collections.expirationListOf","location":"Minix-API/dev.racci.minix.api.utils.collections/expiration-list-of.html","searchKeys":["expirationListOf","fun <E> WithPlugin<*>.expirationListOf(): ExpirationList<E>","dev.racci.minix.api.utils.collections.expirationListOf"]},{"name":"fun <E> WithPlugin<*>.expirationListOf(expireTime: Int, vararg elements: Pair<E, OnExpireCallback<E>>): ExpirationList<E>","description":"dev.racci.minix.api.utils.collections.expirationListOf","location":"Minix-API/dev.racci.minix.api.utils.collections/expiration-list-of.html","searchKeys":["expirationListOf","fun <E> WithPlugin<*>.expirationListOf(expireTime: Int, vararg elements: Pair<E, OnExpireCallback<E>>): ExpirationList<E>","dev.racci.minix.api.utils.collections.expirationListOf"]},{"name":"fun <E> expirationListOf(expireTime: Int, plugin: MinixPlugin, vararg elements: Pair<E, OnExpireCallback<E>>): ExpirationList<E>","description":"dev.racci.minix.api.utils.collections.expirationListOf","location":"Minix-API/dev.racci.minix.api.utils.collections/expiration-list-of.html","searchKeys":["expirationListOf","fun <E> expirationListOf(expireTime: Int, plugin: MinixPlugin, vararg elements: Pair<E, OnExpireCallback<E>>): ExpirationList<E>","dev.racci.minix.api.utils.collections.expirationListOf"]},{"name":"fun <Error class: unknown class>.dsl(block: SerializableItemMeta.() -> Unit): SerializableItemMeta","description":"dev.racci.minix.api.serializables.dsl","location":"Minix-API/dev.racci.minix.api.serializables/dsl.html","searchKeys":["dsl","fun <Error class: unknown class>.dsl(block: SerializableItemMeta.() -> Unit): SerializableItemMeta","dev.racci.minix.api.serializables.dsl"]},{"name":"fun <Error class: unknown class>.dsl(block: SerializableItemStack.() -> Unit): SerializableItemStack","description":"dev.racci.minix.api.serializables.dsl","location":"Minix-API/dev.racci.minix.api.serializables/dsl.html","searchKeys":["dsl","fun <Error class: unknown class>.dsl(block: SerializableItemStack.() -> Unit): SerializableItemStack","dev.racci.minix.api.serializables.dsl"]},{"name":"fun <Error class: unknown class>.dsl(block: SerializableSkullMeta.() -> Unit): SerializableSkullMeta","description":"dev.racci.minix.api.serializables.dsl","location":"Minix-API/dev.racci.minix.api.serializables/dsl.html","searchKeys":["dsl","fun <Error class: unknown class>.dsl(block: SerializableSkullMeta.() -> Unit): SerializableSkullMeta","dev.racci.minix.api.serializables.dsl"]},{"name":"fun <K, V> ExpirationMapImpl(plugin: MinixPlugin, initialMap: MutableMap<K, V> = WeakHashMap())","description":"dev.racci.minix.api.utils.collections.ExpirationMapImpl.ExpirationMapImpl","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-map-impl/-expiration-map-impl.html","searchKeys":["ExpirationMapImpl","fun <K, V> ExpirationMapImpl(plugin: MinixPlugin, initialMap: MutableMap<K, V> = WeakHashMap())","dev.racci.minix.api.utils.collections.ExpirationMapImpl.ExpirationMapImpl"]},{"name":"fun <K, V> MinixPlugin.expirationMapOf(): ExpirationMap<K, V>","description":"dev.racci.minix.api.utils.collections.expirationMapOf","location":"Minix-API/dev.racci.minix.api.utils.collections/expiration-map-of.html","searchKeys":["expirationMapOf","fun <K, V> MinixPlugin.expirationMapOf(): ExpirationMap<K, V>","dev.racci.minix.api.utils.collections.expirationMapOf"]},{"name":"fun <K, V> MinixPlugin.expirationMapOf(expireTime: Long, vararg elements: Pair<K, V>): ExpirationMap<K, V>","description":"dev.racci.minix.api.utils.collections.expirationMapOf","location":"Minix-API/dev.racci.minix.api.utils.collections/expiration-map-of.html","searchKeys":["expirationMapOf","fun <K, V> MinixPlugin.expirationMapOf(expireTime: Long, vararg elements: Pair<K, V>): ExpirationMap<K, V>","dev.racci.minix.api.utils.collections.expirationMapOf"]},{"name":"fun <K, V> MinixPlugin.expirationMapOf(expireTime: Long, vararg elements: Triple<K, V, OnExpireMapCallback<K, V>>): ExpirationMap<K, V>","description":"dev.racci.minix.api.utils.collections.expirationMapOf","location":"Minix-API/dev.racci.minix.api.utils.collections/expiration-map-of.html","searchKeys":["expirationMapOf","fun <K, V> MinixPlugin.expirationMapOf(expireTime: Long, vararg elements: Triple<K, V, OnExpireMapCallback<K, V>>): ExpirationMap<K, V>","dev.racci.minix.api.utils.collections.expirationMapOf"]},{"name":"fun <K, V> Multimap<K, V>.toMultiMap(): MultiMap<K, V>","description":"dev.racci.minix.api.utils.collections.MultiMap.Companion.toMultiMap","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/-companion/to-multi-map.html","searchKeys":["toMultiMap","fun <K, V> Multimap<K, V>.toMultiMap(): MultiMap<K, V>","dev.racci.minix.api.utils.collections.MultiMap.Companion.toMultiMap"]},{"name":"fun <K, V> MutableMap<K, V>.asObservable(): ObservableMap<K, V>","description":"dev.racci.minix.api.utils.collections.asObservable","location":"Minix-API/dev.racci.minix.api.utils.collections/as-observable.html","searchKeys":["asObservable","fun <K, V> MutableMap<K, V>.asObservable(): ObservableMap<K, V>","dev.racci.minix.api.utils.collections.asObservable"]},{"name":"fun <K, V> WithPlugin<*>.expirationMapOf(): ExpirationMap<K, V>","description":"dev.racci.minix.api.utils.collections.expirationMapOf","location":"Minix-API/dev.racci.minix.api.utils.collections/expiration-map-of.html","searchKeys":["expirationMapOf","fun <K, V> WithPlugin<*>.expirationMapOf(): ExpirationMap<K, V>","dev.racci.minix.api.utils.collections.expirationMapOf"]},{"name":"fun <K, V> WithPlugin<*>.expirationMapOf(expireTime: Long, vararg elements: Pair<K, V>): ExpirationMap<K, V>","description":"dev.racci.minix.api.utils.collections.expirationMapOf","location":"Minix-API/dev.racci.minix.api.utils.collections/expiration-map-of.html","searchKeys":["expirationMapOf","fun <K, V> WithPlugin<*>.expirationMapOf(expireTime: Long, vararg elements: Pair<K, V>): ExpirationMap<K, V>","dev.racci.minix.api.utils.collections.expirationMapOf"]},{"name":"fun <K, V> WithPlugin<*>.expirationMapOf(expireTime: Long, vararg elements: Triple<K, V, OnExpireMapCallback<K, V>>): ExpirationMap<K, V>","description":"dev.racci.minix.api.utils.collections.expirationMapOf","location":"Minix-API/dev.racci.minix.api.utils.collections/expiration-map-of.html","searchKeys":["expirationMapOf","fun <K, V> WithPlugin<*>.expirationMapOf(expireTime: Long, vararg elements: Triple<K, V, OnExpireMapCallback<K, V>>): ExpirationMap<K, V>","dev.racci.minix.api.utils.collections.expirationMapOf"]},{"name":"fun <K, V> cacheOf(build: K.() -> V): LoadingCache<K, V>","description":"dev.racci.minix.api.utils.collections.CollectionUtils.cacheOf","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/cache-of.html","searchKeys":["cacheOf","fun <K, V> cacheOf(build: K.() -> V): LoadingCache<K, V>","dev.racci.minix.api.utils.collections.CollectionUtils.cacheOf"]},{"name":"fun <K, V> expirationMapOf(expireTime: Long, plugin: MinixPlugin, vararg elements: Pair<K, V>): ExpirationMap<K, V>","description":"dev.racci.minix.api.utils.collections.expirationMapOf","location":"Minix-API/dev.racci.minix.api.utils.collections/expiration-map-of.html","searchKeys":["expirationMapOf","fun <K, V> expirationMapOf(expireTime: Long, plugin: MinixPlugin, vararg elements: Pair<K, V>): ExpirationMap<K, V>","dev.racci.minix.api.utils.collections.expirationMapOf"]},{"name":"fun <K, V> expirationMapOf(expireTime: Long, plugin: MinixPlugin, vararg elements: Triple<K, V, OnExpireMapCallback<K, V>>): ExpirationMap<K, V>","description":"dev.racci.minix.api.utils.collections.expirationMapOf","location":"Minix-API/dev.racci.minix.api.utils.collections/expiration-map-of.html","searchKeys":["expirationMapOf","fun <K, V> expirationMapOf(expireTime: Long, plugin: MinixPlugin, vararg elements: Triple<K, V, OnExpireMapCallback<K, V>>): ExpirationMap<K, V>","dev.racci.minix.api.utils.collections.expirationMapOf"]},{"name":"fun <K, V> multiMapOf(vararg entries: Pair<K, MutableCollection<V>>): MultiMap<K, V>","description":"dev.racci.minix.api.utils.collections.multiMapOf","location":"Minix-API/dev.racci.minix.api.utils.collections/multi-map-of.html","searchKeys":["multiMapOf","fun <K, V> multiMapOf(vararg entries: Pair<K, MutableCollection<V>>): MultiMap<K, V>","dev.racci.minix.api.utils.collections.multiMapOf"]},{"name":"fun <K, V> observableMapOf(mutableMap: MutableMap<K, V>): ObservableMap<K, V>","description":"dev.racci.minix.api.utils.collections.observableMapOf","location":"Minix-API/dev.racci.minix.api.utils.collections/observable-map-of.html","searchKeys":["observableMapOf","fun <K, V> observableMapOf(mutableMap: MutableMap<K, V>): ObservableMap<K, V>","dev.racci.minix.api.utils.collections.observableMapOf"]},{"name":"fun <K, V> observableMapOf(vararg items: Pair<K, V>): ObservableMap<K, V>","description":"dev.racci.minix.api.utils.collections.observableMapOf","location":"Minix-API/dev.racci.minix.api.utils.collections/observable-map-of.html","searchKeys":["observableMapOf","fun <K, V> observableMapOf(vararg items: Pair<K, V>): ObservableMap<K, V>","dev.racci.minix.api.utils.collections.observableMapOf"]},{"name":"fun <P : MinixPlugin> PluginData(plugin: P)","description":"dev.racci.minix.api.plugin.PluginData.PluginData","location":"Minix-API/dev.racci.minix.api.plugin/-plugin-data/-plugin-data.html","searchKeys":["PluginData","fun <P : MinixPlugin> PluginData(plugin: P)","dev.racci.minix.api.plugin.PluginData.PluginData"]},{"name":"fun <R> readInstanceProperty(instance: Any, propertyName: String, ignoreCase: Boolean = false): R?","description":"dev.racci.minix.api.utils.readInstanceProperty","location":"Minix-API/dev.racci.minix.api.utils/read-instance-property.html","searchKeys":["readInstanceProperty","fun <R> readInstanceProperty(instance: Any, propertyName: String, ignoreCase: Boolean = false): R?","dev.racci.minix.api.utils.readInstanceProperty"]},{"name":"fun <T : Any> T.clone(replaceArgs: Map<KProperty1<T, *>, Any> = emptyMap()): T","description":"dev.racci.minix.api.utils.clone","location":"Minix-API/dev.racci.minix.api.utils/clone.html","searchKeys":["clone","fun <T : Any> T.clone(replaceArgs: Map<KProperty1<T, *>, Any> = emptyMap()): T","dev.racci.minix.api.utils.clone"]},{"name":"fun <T : Event> Listener.event(type: KClass<T>, plugin: MinixPlugin, priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, forceAsync: Boolean = false, block: suspend T.() -> Unit)","description":"dev.racci.minix.api.extensions.event","location":"Minix-API/dev.racci.minix.api.extensions/event.html","searchKeys":["event","fun <T : Event> Listener.event(type: KClass<T>, plugin: MinixPlugin, priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, forceAsync: Boolean = false, block: suspend T.() -> Unit)","dev.racci.minix.api.extensions.event"]},{"name":"fun <T : Event> WithPlugin<*>.events(vararg events: KClass<out T>, priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, forceAsync: Boolean = false, listener: SimpleKListener = SimpleKListener(plugin), block: suspend T.() -> Unit)","description":"dev.racci.minix.api.extensions.events","location":"Minix-API/dev.racci.minix.api.extensions/events.html","searchKeys":["events","fun <T : Event> WithPlugin<*>.events(vararg events: KClass<out T>, priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, forceAsync: Boolean = false, listener: SimpleKListener = SimpleKListener(plugin), block: suspend T.() -> Unit)","dev.racci.minix.api.extensions.events"]},{"name":"fun <T : MinixPlugin> PluginDependentMinixLogger(plugin: T, loggingLevel: MinixLogger.LoggingLevel = LoggingLevel.INFO)","description":"dev.racci.minix.api.plugin.logger.PluginDependentMinixLogger.PluginDependentMinixLogger","location":"Minix-API/dev.racci.minix.api.plugin.logger/-plugin-dependent-minix-logger/-plugin-dependent-minix-logger.html","searchKeys":["PluginDependentMinixLogger","fun <T : MinixPlugin> PluginDependentMinixLogger(plugin: T, loggingLevel: MinixLogger.LoggingLevel = LoggingLevel.INFO)","dev.racci.minix.api.plugin.logger.PluginDependentMinixLogger.PluginDependentMinixLogger"]},{"name":"fun <T : Plugin> DependencyDelegate(pluginName: String, type: KClass<T>)","description":"dev.racci.minix.api.utils.minecraft.PluginUtils.DependencyDelegate.DependencyDelegate","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-plugin-utils/-dependency-delegate/-dependency-delegate.html","searchKeys":["DependencyDelegate","fun <T : Plugin> DependencyDelegate(pluginName: String, type: KClass<T>)","dev.racci.minix.api.utils.minecraft.PluginUtils.DependencyDelegate.DependencyDelegate"]},{"name":"fun <T : Plugin> MinixPlugin.depend(type: KClass<T>, pluginName: String): PluginUtils.DependencyDelegate<T>","description":"dev.racci.minix.api.utils.minecraft.PluginUtils.depend","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-plugin-utils/depend.html","searchKeys":["depend","fun <T : Plugin> MinixPlugin.depend(type: KClass<T>, pluginName: String): PluginUtils.DependencyDelegate<T>","dev.racci.minix.api.utils.minecraft.PluginUtils.depend"]},{"name":"fun <T : Plugin> MinixPlugin.softDepend(type: KClass<T>, pluginName: String): PluginUtils.SoftDependencyDelegate<T>","description":"dev.racci.minix.api.utils.minecraft.PluginUtils.softDepend","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-plugin-utils/soft-depend.html","searchKeys":["softDepend","fun <T : Plugin> MinixPlugin.softDepend(type: KClass<T>, pluginName: String): PluginUtils.SoftDependencyDelegate<T>","dev.racci.minix.api.utils.minecraft.PluginUtils.softDepend"]},{"name":"fun <T : Plugin> SoftDependencyDelegate(pluginName: String, type: KClass<T>)","description":"dev.racci.minix.api.utils.minecraft.PluginUtils.SoftDependencyDelegate.SoftDependencyDelegate","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-plugin-utils/-soft-dependency-delegate/-soft-dependency-delegate.html","searchKeys":["SoftDependencyDelegate","fun <T : Plugin> SoftDependencyDelegate(pluginName: String, type: KClass<T>)","dev.racci.minix.api.utils.minecraft.PluginUtils.SoftDependencyDelegate.SoftDependencyDelegate"]},{"name":"fun <T : VectorComparable<T>> PosRangeIterator(first: T, last: T, factor: (axis: IntArray) -> T)","description":"dev.racci.minix.api.utils.minecraft.PosRangeIterator.PosRangeIterator","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pos-range-iterator/-pos-range-iterator.html","searchKeys":["PosRangeIterator","fun <T : VectorComparable<T>> PosRangeIterator(first: T, last: T, factor: (axis: IntArray) -> T)","dev.racci.minix.api.utils.minecraft.PosRangeIterator.PosRangeIterator"]},{"name":"fun <T, POS : VectorComparable<POS>> PosRange(first: POS, last: POS, buildIterator: () -> Iterator<T>)","description":"dev.racci.minix.api.utils.minecraft.PosRange.PosRange","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pos-range/-pos-range.html","searchKeys":["PosRange","fun <T, POS : VectorComparable<POS>> PosRange(first: POS, last: POS, buildIterator: () -> Iterator<T>)","dev.racci.minix.api.utils.minecraft.PosRange.PosRange"]},{"name":"fun <T, POS : VectorComparable<POS>> RangeIteratorWithFactor(start: T, end: T, factor: (POS) -> T, posFactor: (T) -> POS)","description":"dev.racci.minix.api.utils.minecraft.RangeIteratorWithFactor.RangeIteratorWithFactor","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-range-iterator-with-factor/-range-iterator-with-factor.html","searchKeys":["RangeIteratorWithFactor","fun <T, POS : VectorComparable<POS>> RangeIteratorWithFactor(start: T, end: T, factor: (POS) -> T, posFactor: (T) -> POS)","dev.racci.minix.api.utils.minecraft.RangeIteratorWithFactor.RangeIteratorWithFactor"]},{"name":"fun <T> Any?.safeCast(type: Class<T>): T?","description":"dev.racci.minix.api.utils.safeCast","location":"Minix-API/dev.racci.minix.api.utils/safe-cast.html","searchKeys":["safeCast","fun <T> Any?.safeCast(type: Class<T>): T?","dev.racci.minix.api.utils.safeCast"]},{"name":"fun <T> Any?.unsafeCast(): T","description":"dev.racci.minix.api.utils.unsafeCast","location":"Minix-API/dev.racci.minix.api.utils/unsafe-cast.html","searchKeys":["unsafeCast","fun <T> Any?.unsafeCast(): T","dev.racci.minix.api.utils.unsafeCast"]},{"name":"fun <T> Any?.unsafeCast(type: Class<T>): T","description":"dev.racci.minix.api.utils.unsafeCast","location":"Minix-API/dev.racci.minix.api.utils/unsafe-cast.html","searchKeys":["unsafeCast","fun <T> Any?.unsafeCast(type: Class<T>): T","dev.racci.minix.api.utils.unsafeCast"]},{"name":"fun <T> Array<*>.getCast(index: Int): T","description":"dev.racci.minix.api.utils.collections.CollectionUtils.getCast","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/get-cast.html","searchKeys":["getCast","fun <T> Array<*>.getCast(index: Int): T","dev.racci.minix.api.utils.collections.CollectionUtils.getCast"]},{"name":"fun <T> CachedExposedDelegate(delegate: ExposedDelegate<T>)","description":"dev.racci.minix.api.utils.exposed.CachedExposedDelegate.CachedExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-cached-exposed-delegate/-cached-exposed-delegate.html","searchKeys":["CachedExposedDelegate","fun <T> CachedExposedDelegate(delegate: ExposedDelegate<T>)","dev.racci.minix.api.utils.exposed.CachedExposedDelegate.CachedExposedDelegate"]},{"name":"fun <T> Collection<*>.getCast(index: Int): T","description":"dev.racci.minix.api.utils.collections.CollectionUtils.getCast","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/get-cast.html","searchKeys":["getCast","fun <T> Collection<*>.getCast(index: Int): T","dev.racci.minix.api.utils.collections.CollectionUtils.getCast"]},{"name":"fun <T> ExposedDelegate<T>.cached(): CachedExposedDelegate<T>","description":"dev.racci.minix.api.utils.exposed.cached","location":"Minix-API/dev.racci.minix.api.utils.exposed/cached.html","searchKeys":["cached","fun <T> ExposedDelegate<T>.cached(): CachedExposedDelegate<T>","dev.racci.minix.api.utils.exposed.cached"]},{"name":"fun <T> Lazy<T>.ifInitialized(action: T.() -> Unit)","description":"dev.racci.minix.api.utils.kotlin.ifInitialized","location":"Minix-API/dev.racci.minix.api.utils.kotlin/if-initialized.html","searchKeys":["ifInitialized","fun <T> Lazy<T>.ifInitialized(action: T.() -> Unit)","dev.racci.minix.api.utils.kotlin.ifInitialized"]},{"name":"fun <T> Location.playEffect(effect: Effect, data: T)","description":"dev.racci.minix.api.extensions.playEffect","location":"Minix-API/dev.racci.minix.api.extensions/play-effect.html","searchKeys":["playEffect","fun <T> Location.playEffect(effect: Effect, data: T)","dev.racci.minix.api.extensions.playEffect"]},{"name":"fun <T> Location.playEffect(effect: Effect, data: T, radius: Int)","description":"dev.racci.minix.api.extensions.playEffect","location":"Minix-API/dev.racci.minix.api.extensions/play-effect.html","searchKeys":["playEffect","fun <T> Location.playEffect(effect: Effect, data: T, radius: Int)","dev.racci.minix.api.extensions.playEffect"]},{"name":"fun <T> MutableList<T>.asObservable(): ObservableList<T>","description":"dev.racci.minix.api.utils.collections.asObservable","location":"Minix-API/dev.racci.minix.api.utils.collections/as-observable.html","searchKeys":["asObservable","fun <T> MutableList<T>.asObservable(): ObservableList<T>","dev.racci.minix.api.utils.collections.asObservable"]},{"name":"fun <T> MutableSet<T>.asObservable(): ObservableSet<T>","description":"dev.racci.minix.api.utils.collections.asObservable","location":"Minix-API/dev.racci.minix.api.utils.collections/as-observable.html","searchKeys":["asObservable","fun <T> MutableSet<T>.asObservable(): ObservableSet<T>","dev.racci.minix.api.utils.collections.asObservable"]},{"name":"fun <T> ObservableMutableIterator(iterator: MutableIterator<T>, runListeners: ObservableListener<T>)","description":"dev.racci.minix.api.utils.collections.ObservableMutableIterator.ObservableMutableIterator","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-mutable-iterator/-observable-mutable-iterator.html","searchKeys":["ObservableMutableIterator","fun <T> ObservableMutableIterator(iterator: MutableIterator<T>, runListeners: ObservableListener<T>)","dev.racci.minix.api.utils.collections.ObservableMutableIterator.ObservableMutableIterator"]},{"name":"fun <T> ObservableMutableListIterator(iterator: MutableListIterator<T>, runListeners: ObservableListener<T>)","description":"dev.racci.minix.api.utils.collections.ObservableMutableListIterator.ObservableMutableListIterator","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-mutable-list-iterator/-observable-mutable-list-iterator.html","searchKeys":["ObservableMutableListIterator","fun <T> ObservableMutableListIterator(iterator: MutableListIterator<T>, runListeners: ObservableListener<T>)","dev.racci.minix.api.utils.collections.ObservableMutableListIterator.ObservableMutableListIterator"]},{"name":"fun <T> classConstructor(constructor: Constructor<T>, vararg args: Any?): T","description":"dev.racci.minix.api.utils.classConstructor","location":"Minix-API/dev.racci.minix.api.utils/class-constructor.html","searchKeys":["classConstructor","fun <T> classConstructor(constructor: Constructor<T>, vararg args: Any?): T","dev.racci.minix.api.utils.classConstructor"]},{"name":"fun <T> observableListOf(mutableList: MutableList<T>): ObservableList<T>","description":"dev.racci.minix.api.utils.collections.observableListOf","location":"Minix-API/dev.racci.minix.api.utils.collections/observable-list-of.html","searchKeys":["observableListOf","fun <T> observableListOf(mutableList: MutableList<T>): ObservableList<T>","dev.racci.minix.api.utils.collections.observableListOf"]},{"name":"fun <T> observableListOf(vararg items: T): ObservableList<T>","description":"dev.racci.minix.api.utils.collections.observableListOf","location":"Minix-API/dev.racci.minix.api.utils.collections/observable-list-of.html","searchKeys":["observableListOf","fun <T> observableListOf(vararg items: T): ObservableList<T>","dev.racci.minix.api.utils.collections.observableListOf"]},{"name":"fun <T> observableSetOf(mutableSet: MutableSet<T>): ObservableSet<T>","description":"dev.racci.minix.api.utils.collections.observableSetOf","location":"Minix-API/dev.racci.minix.api.utils.collections/observable-set-of.html","searchKeys":["observableSetOf","fun <T> observableSetOf(mutableSet: MutableSet<T>): ObservableSet<T>","dev.racci.minix.api.utils.collections.observableSetOf"]},{"name":"fun <T> observableSetOf(vararg items: T): ObservableSet<T>","description":"dev.racci.minix.api.utils.collections.observableSetOf","location":"Minix-API/dev.racci.minix.api.utils.collections/observable-set-of.html","searchKeys":["observableSetOf","fun <T> observableSetOf(vararg items: T): ObservableSet<T>","dev.racci.minix.api.utils.collections.observableSetOf"]},{"name":"fun <V> Map<String, V>.containsKeyIgnoreCase(key: String): Boolean","description":"dev.racci.minix.api.utils.collections.CollectionUtils.containsKeyIgnoreCase","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/contains-key-ignore-case.html","searchKeys":["containsKeyIgnoreCase","fun <V> Map<String, V>.containsKeyIgnoreCase(key: String): Boolean","dev.racci.minix.api.utils.collections.CollectionUtils.containsKeyIgnoreCase"]},{"name":"fun <V> Map<String, V>.getIgnoreCase(key: String): V?","description":"dev.racci.minix.api.utils.collections.CollectionUtils.getIgnoreCase","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/get-ignore-case.html","searchKeys":["getIgnoreCase","fun <V> Map<String, V>.getIgnoreCase(key: String): V?","dev.racci.minix.api.utils.collections.CollectionUtils.getIgnoreCase"]},{"name":"fun <V> MinixPlugin.onlinePlayerMapOf(): OnlinePlayerMap<V>","description":"dev.racci.minix.api.utils.collections.onlinePlayerMapOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-map-of.html","searchKeys":["onlinePlayerMapOf","fun <V> MinixPlugin.onlinePlayerMapOf(): OnlinePlayerMap<V>","dev.racci.minix.api.utils.collections.onlinePlayerMapOf"]},{"name":"fun <V> MinixPlugin.onlinePlayerMapOf(vararg pair: Pair<Player, V>): OnlinePlayerMap<V>","description":"dev.racci.minix.api.utils.collections.onlinePlayerMapOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-map-of.html","searchKeys":["onlinePlayerMapOf","fun <V> MinixPlugin.onlinePlayerMapOf(vararg pair: Pair<Player, V>): OnlinePlayerMap<V>","dev.racci.minix.api.utils.collections.onlinePlayerMapOf"]},{"name":"fun <V> MinixPlugin.onlinePlayerMapOf(vararg triple: Triple<Player, V, WhenPlayerQuitMapCallback<V>>): OnlinePlayerMap<V>","description":"dev.racci.minix.api.utils.collections.onlinePlayerMapOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-map-of.html","searchKeys":["onlinePlayerMapOf","fun <V> MinixPlugin.onlinePlayerMapOf(vararg triple: Triple<Player, V, WhenPlayerQuitMapCallback<V>>): OnlinePlayerMap<V>","dev.racci.minix.api.utils.collections.onlinePlayerMapOf"]},{"name":"fun <V> WithPlugin<*>.onlinePlayerMapOf(): OnlinePlayerMap<V>","description":"dev.racci.minix.api.utils.collections.onlinePlayerMapOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-map-of.html","searchKeys":["onlinePlayerMapOf","fun <V> WithPlugin<*>.onlinePlayerMapOf(): OnlinePlayerMap<V>","dev.racci.minix.api.utils.collections.onlinePlayerMapOf"]},{"name":"fun <V> WithPlugin<*>.onlinePlayerMapOf(vararg pair: Pair<Player, V>): OnlinePlayerMap<V>","description":"dev.racci.minix.api.utils.collections.onlinePlayerMapOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-map-of.html","searchKeys":["onlinePlayerMapOf","fun <V> WithPlugin<*>.onlinePlayerMapOf(vararg pair: Pair<Player, V>): OnlinePlayerMap<V>","dev.racci.minix.api.utils.collections.onlinePlayerMapOf"]},{"name":"fun <V> WithPlugin<*>.onlinePlayerMapOf(vararg triple: Triple<Player, V, WhenPlayerQuitMapCallback<V>>): OnlinePlayerMap<V>","description":"dev.racci.minix.api.utils.collections.onlinePlayerMapOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-map-of.html","searchKeys":["onlinePlayerMapOf","fun <V> WithPlugin<*>.onlinePlayerMapOf(vararg triple: Triple<Player, V, WhenPlayerQuitMapCallback<V>>): OnlinePlayerMap<V>","dev.racci.minix.api.utils.collections.onlinePlayerMapOf"]},{"name":"fun <V> onlinePlayerMapOf(vararg pair: Pair<Player, V>, plugin: MinixPlugin): OnlinePlayerMap<V>","description":"dev.racci.minix.api.utils.collections.onlinePlayerMapOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-map-of.html","searchKeys":["onlinePlayerMapOf","fun <V> onlinePlayerMapOf(vararg pair: Pair<Player, V>, plugin: MinixPlugin): OnlinePlayerMap<V>","dev.racci.minix.api.utils.collections.onlinePlayerMapOf"]},{"name":"fun <V> onlinePlayerMapOf(vararg triple: Triple<Player, V, WhenPlayerQuitMapCallback<V>>, plugin: MinixPlugin): OnlinePlayerMap<V>","description":"dev.racci.minix.api.utils.collections.onlinePlayerMapOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-map-of.html","searchKeys":["onlinePlayerMapOf","fun <V> onlinePlayerMapOf(vararg triple: Triple<Player, V, WhenPlayerQuitMapCallback<V>>, plugin: MinixPlugin): OnlinePlayerMap<V>","dev.racci.minix.api.utils.collections.onlinePlayerMapOf"]},{"name":"fun AlwaysUpdateProvider(latestFileURL: URL, latestFileName: String = \"file.jar\", latestReleaseType: ReleaseType = ReleaseType.RELEASE)","description":"dev.racci.minix.api.updater.providers.AlwaysUpdateProvider.AlwaysUpdateProvider","location":"Minix-API/dev.racci.minix.api.updater.providers/-always-update-provider/-always-update-provider.html","searchKeys":["AlwaysUpdateProvider","fun AlwaysUpdateProvider(latestFileURL: URL, latestFileName: String = \"file.jar\", latestReleaseType: ReleaseType = ReleaseType.RELEASE)","dev.racci.minix.api.updater.providers.AlwaysUpdateProvider.AlwaysUpdateProvider"]},{"name":"fun AlwaysUpdateProvider(url: String, latestFileName: String = \"file.jar\", releaseType: ReleaseType = ReleaseType.RELEASE)","description":"dev.racci.minix.api.updater.providers.AlwaysUpdateProvider.AlwaysUpdateProvider","location":"Minix-API/dev.racci.minix.api.updater.providers/-always-update-provider/-always-update-provider.html","searchKeys":["AlwaysUpdateProvider","fun AlwaysUpdateProvider(url: String, latestFileName: String = \"file.jar\", releaseType: ReleaseType = ReleaseType.RELEASE)","dev.racci.minix.api.updater.providers.AlwaysUpdateProvider.AlwaysUpdateProvider"]},{"name":"fun Any.unsafe(callback: UnsafeUtil.() -> Unit)","description":"dev.racci.minix.api.utils.UnsafeUtil.Companion.unsafe","location":"Minix-API/dev.racci.minix.api.utils/-unsafe-util/-companion/unsafe.html","searchKeys":["unsafe","fun Any.unsafe(callback: UnsafeUtil.() -> Unit)","dev.racci.minix.api.utils.UnsafeUtil.Companion.unsafe"]},{"name":"fun Array<Player>.broadcast(component: Player.() -> Component)","description":"dev.racci.minix.api.extensions.broadcast","location":"Minix-API/dev.racci.minix.api.extensions/broadcast.html","searchKeys":["broadcast","fun Array<Player>.broadcast(component: Player.() -> Component)","dev.racci.minix.api.extensions.broadcast"]},{"name":"fun Array<String>.containsIgnoreCase(element: String): Boolean","description":"dev.racci.minix.api.utils.collections.CollectionUtils.containsIgnoreCase","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/contains-ignore-case.html","searchKeys":["containsIgnoreCase","fun Array<String>.containsIgnoreCase(element: String): Boolean","dev.racci.minix.api.utils.collections.CollectionUtils.containsIgnoreCase"]},{"name":"fun Array<String>.find(name: String, ignoreCase: Boolean = false): String?","description":"dev.racci.minix.api.utils.collections.CollectionUtils.find","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/find.html","searchKeys":["find","fun Array<String>.find(name: String, ignoreCase: Boolean = false): String?","dev.racci.minix.api.utils.collections.CollectionUtils.find"]},{"name":"fun Array<String>.parse(): Array<Component>","description":"dev.racci.minix.api.extensions.parse","location":"Minix-API/dev.racci.minix.api.extensions/parse.html","searchKeys":["parse","fun Array<String>.parse(): Array<Component>","dev.racci.minix.api.extensions.parse"]},{"name":"fun BlastingRecipeIngredients(input: SerializableItemStack, experience: Float, cookingTime: Int)","description":"dev.racci.minix.api.serializables.recipes.BlastingRecipeIngredients.BlastingRecipeIngredients","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-blasting-recipe-ingredients/-blasting-recipe-ingredients.html","searchKeys":["BlastingRecipeIngredients","fun BlastingRecipeIngredients(input: SerializableItemStack, experience: Float, cookingTime: Int)","dev.racci.minix.api.serializables.recipes.BlastingRecipeIngredients.BlastingRecipeIngredients"]},{"name":"fun Block.asPos(): BlockPos","description":"dev.racci.minix.api.utils.minecraft.asPos","location":"Minix-API/dev.racci.minix.api.utils.minecraft/as-pos.html","searchKeys":["asPos","fun Block.asPos(): BlockPos","dev.racci.minix.api.utils.minecraft.asPos"]},{"name":"fun Block.sendBlockChange(blockData: BlockData, vararg players: Player)","description":"dev.racci.minix.api.extensions.sendBlockChange","location":"Minix-API/dev.racci.minix.api.extensions/send-block-change.html","searchKeys":["sendBlockChange","fun Block.sendBlockChange(blockData: BlockData, vararg players: Player)","dev.racci.minix.api.extensions.sendBlockChange"]},{"name":"fun Block.sendBlockChange(material: Material, blockDataUnit: BlockData.() -> Unit, vararg players: Player)","description":"dev.racci.minix.api.extensions.sendBlockChange","location":"Minix-API/dev.racci.minix.api.extensions/send-block-change.html","searchKeys":["sendBlockChange","fun Block.sendBlockChange(material: Material, blockDataUnit: BlockData.() -> Unit, vararg players: Player)","dev.racci.minix.api.extensions.sendBlockChange"]},{"name":"fun BlockData(block: Block, blockFace: BlockFace)","description":"dev.racci.minix.api.events.BlockData.BlockData","location":"Minix-API/dev.racci.minix.api.events/-block-data/-block-data.html","searchKeys":["BlockData","fun BlockData(block: Block, blockFace: BlockFace)","dev.racci.minix.api.events.BlockData.BlockData"]},{"name":"fun BlockExposedDelegate(column: Column<String>)","description":"dev.racci.minix.api.utils.exposed.BlockExposedDelegate.BlockExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-exposed-delegate/-block-exposed-delegate.html","searchKeys":["BlockExposedDelegate","fun BlockExposedDelegate(column: Column<String>)","dev.racci.minix.api.utils.exposed.BlockExposedDelegate.BlockExposedDelegate"]},{"name":"fun BlockExposedDelegateNullable(column: Column<String?>)","description":"dev.racci.minix.api.utils.exposed.BlockExposedDelegateNullable.BlockExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-exposed-delegate-nullable/-block-exposed-delegate-nullable.html","searchKeys":["BlockExposedDelegateNullable","fun BlockExposedDelegateNullable(column: Column<String?>)","dev.racci.minix.api.utils.exposed.BlockExposedDelegateNullable.BlockExposedDelegateNullable"]},{"name":"fun BlockMultiColumnExposedDelegate(worldColumn: Column<String>, xColumn: Column<Int>, yColumn: Column<Int>, zColumn: Column<Int>)","description":"dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegate.BlockMultiColumnExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-multi-column-exposed-delegate/-block-multi-column-exposed-delegate.html","searchKeys":["BlockMultiColumnExposedDelegate","fun BlockMultiColumnExposedDelegate(worldColumn: Column<String>, xColumn: Column<Int>, yColumn: Column<Int>, zColumn: Column<Int>)","dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegate.BlockMultiColumnExposedDelegate"]},{"name":"fun BlockMultiColumnExposedDelegateNullable(worldColumn: Column<String?>, xColumn: Column<Int?>, yColumn: Column<Int?>, zColumn: Column<Int?>)","description":"dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegateNullable.BlockMultiColumnExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-multi-column-exposed-delegate-nullable/-block-multi-column-exposed-delegate-nullable.html","searchKeys":["BlockMultiColumnExposedDelegateNullable","fun BlockMultiColumnExposedDelegateNullable(worldColumn: Column<String?>, xColumn: Column<Int?>, yColumn: Column<Int?>, zColumn: Column<Int?>)","dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegateNullable.BlockMultiColumnExposedDelegateNullable"]},{"name":"fun BlockPos(x: Int, y: Int, z: Int)","description":"dev.racci.minix.api.utils.minecraft.BlockPos.BlockPos","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-block-pos/-block-pos.html","searchKeys":["BlockPos","fun BlockPos(x: Int, y: Int, z: Int)","dev.racci.minix.api.utils.minecraft.BlockPos.BlockPos"]},{"name":"fun BlockPosExposedDelegate(column: Column<String>)","description":"dev.racci.minix.api.utils.exposed.BlockPosExposedDelegate.BlockPosExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-exposed-delegate/-block-pos-exposed-delegate.html","searchKeys":["BlockPosExposedDelegate","fun BlockPosExposedDelegate(column: Column<String>)","dev.racci.minix.api.utils.exposed.BlockPosExposedDelegate.BlockPosExposedDelegate"]},{"name":"fun BlockPosExposedDelegateNullable(column: Column<String?>)","description":"dev.racci.minix.api.utils.exposed.BlockPosExposedDelegateNullable.BlockPosExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-exposed-delegate-nullable/-block-pos-exposed-delegate-nullable.html","searchKeys":["BlockPosExposedDelegateNullable","fun BlockPosExposedDelegateNullable(column: Column<String?>)","dev.racci.minix.api.utils.exposed.BlockPosExposedDelegateNullable.BlockPosExposedDelegateNullable"]},{"name":"fun BlockPosMultiColumnExposedDelegate(xColumn: Column<Int>, yColumn: Column<Int>, zColumn: Column<Int>)","description":"dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegate.BlockPosMultiColumnExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-multi-column-exposed-delegate/-block-pos-multi-column-exposed-delegate.html","searchKeys":["BlockPosMultiColumnExposedDelegate","fun BlockPosMultiColumnExposedDelegate(xColumn: Column<Int>, yColumn: Column<Int>, zColumn: Column<Int>)","dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegate.BlockPosMultiColumnExposedDelegate"]},{"name":"fun BlockPosMultiColumnExposedDelegateNullable(xColumn: Column<Int?>, yColumn: Column<Int?>, zColumn: Column<Int?>)","description":"dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegateNullable.BlockPosMultiColumnExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-multi-column-exposed-delegate-nullable/-block-pos-multi-column-exposed-delegate-nullable.html","searchKeys":["BlockPosMultiColumnExposedDelegateNullable","fun BlockPosMultiColumnExposedDelegateNullable(xColumn: Column<Int?>, yColumn: Column<Int?>, zColumn: Column<Int?>)","dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegateNullable.BlockPosMultiColumnExposedDelegateNullable"]},{"name":"fun Boolean.asInt(): Int","description":"dev.racci.minix.api.extensions.asInt","location":"Minix-API/dev.racci.minix.api.extensions/as-int.html","searchKeys":["asInt","fun Boolean.asInt(): Int","dev.racci.minix.api.extensions.asInt"]},{"name":"fun Boolean?.asInt(): Int","description":"dev.racci.minix.api.extensions.asInt","location":"Minix-API/dev.racci.minix.api.extensions/as-int.html","searchKeys":["asInt","fun Boolean?.asInt(): Int","dev.racci.minix.api.extensions.asInt"]},{"name":"fun BukkitUpdateProvider(projectID: Int, apiKey: String? = null)","description":"dev.racci.minix.api.updater.providers.BukkitUpdateProvider.BukkitUpdateProvider","location":"Minix-API/dev.racci.minix.api.updater.providers/-bukkit-update-provider/-bukkit-update-provider.html","searchKeys":["BukkitUpdateProvider","fun BukkitUpdateProvider(projectID: Int, apiKey: String? = null)","dev.racci.minix.api.updater.providers.BukkitUpdateProvider.BukkitUpdateProvider"]},{"name":"fun CampfireRecipeIngredients(input: SerializableItemStack, experience: Float, cookingTime: Int)","description":"dev.racci.minix.api.serializables.recipes.CampfireRecipeIngredients.CampfireRecipeIngredients","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-campfire-recipe-ingredients/-campfire-recipe-ingredients.html","searchKeys":["CampfireRecipeIngredients","fun CampfireRecipeIngredients(input: SerializableItemStack, experience: Float, cookingTime: Int)","dev.racci.minix.api.serializables.recipes.CampfireRecipeIngredients.CampfireRecipeIngredients"]},{"name":"fun Cancellable.cancel()","description":"dev.racci.minix.api.extensions.cancel","location":"Minix-API/dev.racci.minix.api.extensions/cancel.html","searchKeys":["cancel","fun Cancellable.cancel()","dev.racci.minix.api.extensions.cancel"]},{"name":"fun ChatInput(plugin: MinixPlugin, callback: ChatInputCallBack, playerQuit: PlayerQuitFunction)","description":"dev.racci.minix.api.utils.minecraft.PlayerUtils.ChatInput.ChatInput","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-player-utils/-chat-input/-chat-input.html","searchKeys":["ChatInput","fun ChatInput(plugin: MinixPlugin, callback: ChatInputCallBack, playerQuit: PlayerQuitFunction)","dev.racci.minix.api.utils.minecraft.PlayerUtils.ChatInput.ChatInput"]},{"name":"fun Chunk.asPos(): ChunkPos","description":"dev.racci.minix.api.utils.minecraft.asPos","location":"Minix-API/dev.racci.minix.api.utils.minecraft/as-pos.html","searchKeys":["asPos","fun Chunk.asPos(): ChunkPos","dev.racci.minix.api.utils.minecraft.asPos"]},{"name":"fun ChunkExposedDelegate(column: Column<String>)","description":"dev.racci.minix.api.utils.exposed.ChunkExposedDelegate.ChunkExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-exposed-delegate/-chunk-exposed-delegate.html","searchKeys":["ChunkExposedDelegate","fun ChunkExposedDelegate(column: Column<String>)","dev.racci.minix.api.utils.exposed.ChunkExposedDelegate.ChunkExposedDelegate"]},{"name":"fun ChunkExposedDelegateNullable(column: Column<String?>)","description":"dev.racci.minix.api.utils.exposed.ChunkExposedDelegateNullable.ChunkExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-exposed-delegate-nullable/-chunk-exposed-delegate-nullable.html","searchKeys":["ChunkExposedDelegateNullable","fun ChunkExposedDelegateNullable(column: Column<String?>)","dev.racci.minix.api.utils.exposed.ChunkExposedDelegateNullable.ChunkExposedDelegateNullable"]},{"name":"fun ChunkMultiColumnExposedDelegate(worldColumn: Column<String>, xColumn: Column<Int>, zColumn: Column<Int>)","description":"dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegate.ChunkMultiColumnExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-multi-column-exposed-delegate/-chunk-multi-column-exposed-delegate.html","searchKeys":["ChunkMultiColumnExposedDelegate","fun ChunkMultiColumnExposedDelegate(worldColumn: Column<String>, xColumn: Column<Int>, zColumn: Column<Int>)","dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegate.ChunkMultiColumnExposedDelegate"]},{"name":"fun ChunkMultiColumnExposedDelegateNullable(worldColumn: Column<String?>, xColumn: Column<Int?>, zColumn: Column<Int?>)","description":"dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegateNullable.ChunkMultiColumnExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-multi-column-exposed-delegate-nullable/-chunk-multi-column-exposed-delegate-nullable.html","searchKeys":["ChunkMultiColumnExposedDelegateNullable","fun ChunkMultiColumnExposedDelegateNullable(worldColumn: Column<String?>, xColumn: Column<Int?>, zColumn: Column<Int?>)","dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegateNullable.ChunkMultiColumnExposedDelegateNullable"]},{"name":"fun ChunkPos(x: Int, z: Int)","description":"dev.racci.minix.api.utils.minecraft.ChunkPos.ChunkPos","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-chunk-pos/-chunk-pos.html","searchKeys":["ChunkPos","fun ChunkPos(x: Int, z: Int)","dev.racci.minix.api.utils.minecraft.ChunkPos.ChunkPos"]},{"name":"fun ChunkPosExposedDelegate(column: Column<String>)","description":"dev.racci.minix.api.utils.exposed.ChunkPosExposedDelegate.ChunkPosExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-exposed-delegate/-chunk-pos-exposed-delegate.html","searchKeys":["ChunkPosExposedDelegate","fun ChunkPosExposedDelegate(column: Column<String>)","dev.racci.minix.api.utils.exposed.ChunkPosExposedDelegate.ChunkPosExposedDelegate"]},{"name":"fun ChunkPosExposedDelegateNullable(column: Column<String?>)","description":"dev.racci.minix.api.utils.exposed.ChunkPosExposedDelegateNullable.ChunkPosExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-exposed-delegate-nullable/-chunk-pos-exposed-delegate-nullable.html","searchKeys":["ChunkPosExposedDelegateNullable","fun ChunkPosExposedDelegateNullable(column: Column<String?>)","dev.racci.minix.api.utils.exposed.ChunkPosExposedDelegateNullable.ChunkPosExposedDelegateNullable"]},{"name":"fun ChunkPosMultiColumnExposedDelegate(xColumn: Column<Int>, zColumn: Column<Int>)","description":"dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegate.ChunkPosMultiColumnExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-multi-column-exposed-delegate/-chunk-pos-multi-column-exposed-delegate.html","searchKeys":["ChunkPosMultiColumnExposedDelegate","fun ChunkPosMultiColumnExposedDelegate(xColumn: Column<Int>, zColumn: Column<Int>)","dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegate.ChunkPosMultiColumnExposedDelegate"]},{"name":"fun ChunkPosMultiColumnExposedDelegateNullable(xColumn: Column<Int?>, zColumn: Column<Int?>)","description":"dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegateNullable.ChunkPosMultiColumnExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-multi-column-exposed-delegate-nullable/-chunk-pos-multi-column-exposed-delegate-nullable.html","searchKeys":["ChunkPosMultiColumnExposedDelegateNullable","fun ChunkPosMultiColumnExposedDelegateNullable(xColumn: Column<Int?>, zColumn: Column<Int?>)","dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegateNullable.ChunkPosMultiColumnExposedDelegateNullable"]},{"name":"fun Closeable()","description":"dev.racci.minix.api.utils.Closeable.Closeable","location":"Minix-API/dev.racci.minix.api.utils/-closeable/-closeable.html","searchKeys":["Closeable","fun Closeable()","dev.racci.minix.api.utils.Closeable.Closeable"]},{"name":"fun Collection<Player>.broadcast(component: Player.() -> Component)","description":"dev.racci.minix.api.extensions.broadcast","location":"Minix-API/dev.racci.minix.api.extensions/broadcast.html","searchKeys":["broadcast","fun Collection<Player>.broadcast(component: Player.() -> Component)","dev.racci.minix.api.extensions.broadcast"]},{"name":"fun Collection<String>.containsIgnoreCase(element: String): Boolean","description":"dev.racci.minix.api.utils.collections.CollectionUtils.containsIgnoreCase","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/contains-ignore-case.html","searchKeys":["containsIgnoreCase","fun Collection<String>.containsIgnoreCase(element: String): Boolean","dev.racci.minix.api.utils.collections.CollectionUtils.containsIgnoreCase"]},{"name":"fun Collection<String>.find(name: String, ignoreCase: Boolean = false): String?","description":"dev.racci.minix.api.utils.collections.CollectionUtils.find","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/find.html","searchKeys":["find","fun Collection<String>.find(name: String, ignoreCase: Boolean = false): String?","dev.racci.minix.api.utils.collections.CollectionUtils.find"]},{"name":"fun Collection<String>.parse(): List<Component>","description":"dev.racci.minix.api.extensions.parse","location":"Minix-API/dev.racci.minix.api.extensions/parse.html","searchKeys":["parse","fun Collection<String>.parse(): List<Component>","dev.racci.minix.api.extensions.parse"]},{"name":"fun CommandSender.msg(message: ComponentLike)","description":"dev.racci.minix.api.extensions.msg","location":"Minix-API/dev.racci.minix.api.extensions/msg.html","searchKeys":["msg","fun CommandSender.msg(message: ComponentLike)","dev.racci.minix.api.extensions.msg"]},{"name":"fun CommandSender.msg(message: String)","description":"dev.racci.minix.api.extensions.msg","location":"Minix-API/dev.racci.minix.api.extensions/msg.html","searchKeys":["msg","fun CommandSender.msg(message: String)","dev.racci.minix.api.extensions.msg"]},{"name":"fun CommandSender.msg(messages: Array<ComponentLike>)","description":"dev.racci.minix.api.extensions.msg","location":"Minix-API/dev.racci.minix.api.extensions/msg.html","searchKeys":["msg","fun CommandSender.msg(messages: Array<ComponentLike>)","dev.racci.minix.api.extensions.msg"]},{"name":"fun CommandSender.msg(messages: Collection<ComponentLike>)","description":"dev.racci.minix.api.extensions.msg","location":"Minix-API/dev.racci.minix.api.extensions/msg.html","searchKeys":["msg","fun CommandSender.msg(messages: Collection<ComponentLike>)","dev.racci.minix.api.extensions.msg"]},{"name":"fun Component?.asInsert(): Inserting?","description":"dev.racci.minix.api.extensions.asInsert","location":"Minix-API/dev.racci.minix.api.extensions/as-insert.html","searchKeys":["asInsert","fun Component?.asInsert(): Inserting?","dev.racci.minix.api.extensions.asInsert"]},{"name":"fun Configurate()","description":"dev.racci.minix.api.serializables.RangeSerializer.Configurate.Configurate","location":"Minix-API/dev.racci.minix.api.serializables/-range-serializer/-configurate/-configurate.html","searchKeys":["Configurate","fun Configurate()","dev.racci.minix.api.serializables.RangeSerializer.Configurate.Configurate"]},{"name":"fun ConfigurationNode.nonVirtualNode(vararg path: Any): Result<ConfigurationNode>","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateProviderSerializer.Companion.nonVirtualNode","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-provider-serializer/-companion/non-virtual-node.html","searchKeys":["nonVirtualNode","fun ConfigurationNode.nonVirtualNode(vararg path: Any): Result<ConfigurationNode>","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateProviderSerializer.Companion.nonVirtualNode"]},{"name":"fun ConfigurationSection.putAll(map: Map<String, Any?>)","description":"dev.racci.minix.api.extensions.putAll","location":"Minix-API/dev.racci.minix.api.extensions/put-all.html","searchKeys":["putAll","fun ConfigurationSection.putAll(map: Map<String, Any?>)","dev.racci.minix.api.extensions.putAll"]},{"name":"fun ConfigurationSection.putAllIfAbsent(map: Map<String, Any?>): Int","description":"dev.racci.minix.api.extensions.putAllIfAbsent","location":"Minix-API/dev.racci.minix.api.extensions/put-all-if-absent.html","searchKeys":["putAllIfAbsent","fun ConfigurationSection.putAllIfAbsent(map: Map<String, Any?>): Int","dev.racci.minix.api.extensions.putAllIfAbsent"]},{"name":"fun ConfigurationSection.toMap(): Map<String, Any?>","description":"dev.racci.minix.api.extensions.toMap","location":"Minix-API/dev.racci.minix.api.extensions/to-map.html","searchKeys":["toMap","fun ConfigurationSection.toMap(): Map<String, Any?>","dev.racci.minix.api.extensions.toMap"]},{"name":"fun CoroutineRunnable()","description":"dev.racci.minix.api.scheduler.CoroutineRunnable.CoroutineRunnable","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-runnable/-coroutine-runnable.html","searchKeys":["CoroutineRunnable","fun CoroutineRunnable()","dev.racci.minix.api.scheduler.CoroutineRunnable.CoroutineRunnable"]},{"name":"fun Data(bytes: Long)","description":"dev.racci.minix.api.utils.data.Data.Data","location":"Minix-API/dev.racci.minix.api.utils.data/-data/-data.html","searchKeys":["Data","fun Data(bytes: Long)","dev.racci.minix.api.utils.data.Data.Data"]},{"name":"fun DataService()","description":"dev.racci.minix.api.services.DataService.DataService","location":"Minix-API/dev.racci.minix.api.services/-data-service/-data-service.html","searchKeys":["DataService","fun DataService()","dev.racci.minix.api.services.DataService.DataService"]},{"name":"fun DependencyErrorException(message: String)","description":"dev.racci.minix.api.exceptions.DependencyErrorException.DependencyErrorException","location":"Minix-API/dev.racci.minix.api.exceptions/-dependency-error-exception/-dependency-error-exception.html","searchKeys":["DependencyErrorException","fun DependencyErrorException(message: String)","dev.racci.minix.api.exceptions.DependencyErrorException.DependencyErrorException"]},{"name":"fun DoubleRange.randomOrMin(): Double","description":"dev.racci.minix.api.extensions.randomOrMin","location":"Minix-API/dev.racci.minix.api.extensions/random-or-min.html","searchKeys":["randomOrMin","fun DoubleRange.randomOrMin(): Double","dev.racci.minix.api.extensions.randomOrMin"]},{"name":"fun Entity.hasOwner(): Boolean","description":"dev.racci.minix.api.extensions.hasOwner","location":"Minix-API/dev.racci.minix.api.extensions/has-owner.html","searchKeys":["hasOwner","fun Entity.hasOwner(): Boolean","dev.racci.minix.api.extensions.hasOwner"]},{"name":"fun Entity.isTamed(): Boolean","description":"dev.racci.minix.api.extensions.isTamed","location":"Minix-API/dev.racci.minix.api.extensions/is-tamed.html","searchKeys":["isTamed","fun Entity.isTamed(): Boolean","dev.racci.minix.api.extensions.isTamed"]},{"name":"fun Entity<*>.block(column: Column<String>): BlockExposedDelegate","description":"dev.racci.minix.api.utils.exposed.block","location":"Minix-API/dev.racci.minix.api.utils.exposed/block.html","searchKeys":["block","fun Entity<*>.block(column: Column<String>): BlockExposedDelegate","dev.racci.minix.api.utils.exposed.block"]},{"name":"fun Entity<*>.block(column: Column<String?>): BlockExposedDelegateNullable","description":"dev.racci.minix.api.utils.exposed.block","location":"Minix-API/dev.racci.minix.api.utils.exposed/block.html","searchKeys":["block","fun Entity<*>.block(column: Column<String?>): BlockExposedDelegateNullable","dev.racci.minix.api.utils.exposed.block"]},{"name":"fun Entity<*>.block(worldColumn: Column<String>, xColumn: Column<Int>, yColumn: Column<Int>, zColumn: Column<Int>): BlockMultiColumnExposedDelegate","description":"dev.racci.minix.api.utils.exposed.block","location":"Minix-API/dev.racci.minix.api.utils.exposed/block.html","searchKeys":["block","fun Entity<*>.block(worldColumn: Column<String>, xColumn: Column<Int>, yColumn: Column<Int>, zColumn: Column<Int>): BlockMultiColumnExposedDelegate","dev.racci.minix.api.utils.exposed.block"]},{"name":"fun Entity<*>.blockPos(column: Column<String>): BlockPosExposedDelegate","description":"dev.racci.minix.api.utils.exposed.blockPos","location":"Minix-API/dev.racci.minix.api.utils.exposed/block-pos.html","searchKeys":["blockPos","fun Entity<*>.blockPos(column: Column<String>): BlockPosExposedDelegate","dev.racci.minix.api.utils.exposed.blockPos"]},{"name":"fun Entity<*>.blockPos(column: Column<String?>): BlockPosExposedDelegateNullable","description":"dev.racci.minix.api.utils.exposed.blockPos","location":"Minix-API/dev.racci.minix.api.utils.exposed/block-pos.html","searchKeys":["blockPos","fun Entity<*>.blockPos(column: Column<String?>): BlockPosExposedDelegateNullable","dev.racci.minix.api.utils.exposed.blockPos"]},{"name":"fun Entity<*>.blockPos(xColumn: Column<Int>, yColumn: Column<Int>, zColumn: Column<Int>): BlockPosMultiColumnExposedDelegate","description":"dev.racci.minix.api.utils.exposed.blockPos","location":"Minix-API/dev.racci.minix.api.utils.exposed/block-pos.html","searchKeys":["blockPos","fun Entity<*>.blockPos(xColumn: Column<Int>, yColumn: Column<Int>, zColumn: Column<Int>): BlockPosMultiColumnExposedDelegate","dev.racci.minix.api.utils.exposed.blockPos"]},{"name":"fun Entity<*>.chunk(column: Column<String>): ChunkExposedDelegate","description":"dev.racci.minix.api.utils.exposed.chunk","location":"Minix-API/dev.racci.minix.api.utils.exposed/chunk.html","searchKeys":["chunk","fun Entity<*>.chunk(column: Column<String>): ChunkExposedDelegate","dev.racci.minix.api.utils.exposed.chunk"]},{"name":"fun Entity<*>.chunk(worldColumn: Column<String>, xColumn: Column<Int>, zColumn: Column<Int>): ChunkMultiColumnExposedDelegate","description":"dev.racci.minix.api.utils.exposed.chunk","location":"Minix-API/dev.racci.minix.api.utils.exposed/chunk.html","searchKeys":["chunk","fun Entity<*>.chunk(worldColumn: Column<String>, xColumn: Column<Int>, zColumn: Column<Int>): ChunkMultiColumnExposedDelegate","dev.racci.minix.api.utils.exposed.chunk"]},{"name":"fun Entity<*>.chunk(worldColumn: Column<String?>, xColumn: Column<Int?>, zColumn: Column<Int?>): ChunkMultiColumnExposedDelegateNullable","description":"dev.racci.minix.api.utils.exposed.chunk","location":"Minix-API/dev.racci.minix.api.utils.exposed/chunk.html","searchKeys":["chunk","fun Entity<*>.chunk(worldColumn: Column<String?>, xColumn: Column<Int?>, zColumn: Column<Int?>): ChunkMultiColumnExposedDelegateNullable","dev.racci.minix.api.utils.exposed.chunk"]},{"name":"fun Entity<*>.chunkPos(column: Column<String>): ChunkPosExposedDelegate","description":"dev.racci.minix.api.utils.exposed.chunkPos","location":"Minix-API/dev.racci.minix.api.utils.exposed/chunk-pos.html","searchKeys":["chunkPos","fun Entity<*>.chunkPos(column: Column<String>): ChunkPosExposedDelegate","dev.racci.minix.api.utils.exposed.chunkPos"]},{"name":"fun Entity<*>.chunkPos(xColumn: Column<Int>, zColumn: Column<Int>): ChunkPosMultiColumnExposedDelegate","description":"dev.racci.minix.api.utils.exposed.chunkPos","location":"Minix-API/dev.racci.minix.api.utils.exposed/chunk-pos.html","searchKeys":["chunkPos","fun Entity<*>.chunkPos(xColumn: Column<Int>, zColumn: Column<Int>): ChunkPosMultiColumnExposedDelegate","dev.racci.minix.api.utils.exposed.chunkPos"]},{"name":"fun Entity<*>.chunkPos(xColumn: Column<Int?>, zColumn: Column<Int?>): ChunkPosMultiColumnExposedDelegateNullable","description":"dev.racci.minix.api.utils.exposed.chunkPos","location":"Minix-API/dev.racci.minix.api.utils.exposed/chunk-pos.html","searchKeys":["chunkPos","fun Entity<*>.chunkPos(xColumn: Column<Int?>, zColumn: Column<Int?>): ChunkPosMultiColumnExposedDelegateNullable","dev.racci.minix.api.utils.exposed.chunkPos"]},{"name":"fun Entity<*>.itemStack(column: Column<ExposedBlob>): ItemStackExposedDelegate","description":"dev.racci.minix.api.utils.exposed.itemStack","location":"Minix-API/dev.racci.minix.api.utils.exposed/item-stack.html","searchKeys":["itemStack","fun Entity<*>.itemStack(column: Column<ExposedBlob>): ItemStackExposedDelegate","dev.racci.minix.api.utils.exposed.itemStack"]},{"name":"fun Entity<*>.location(column: Column<String>): LocationExposedDelegate","description":"dev.racci.minix.api.utils.exposed.location","location":"Minix-API/dev.racci.minix.api.utils.exposed/location.html","searchKeys":["location","fun Entity<*>.location(column: Column<String>): LocationExposedDelegate","dev.racci.minix.api.utils.exposed.location"]},{"name":"fun Entity<*>.location(column: Column<String?>): LocationExposedDelegateNullable","description":"dev.racci.minix.api.utils.exposed.location","location":"Minix-API/dev.racci.minix.api.utils.exposed/location.html","searchKeys":["location","fun Entity<*>.location(column: Column<String?>): LocationExposedDelegateNullable","dev.racci.minix.api.utils.exposed.location"]},{"name":"fun Entity<*>.location(worldColumn: Column<String>, xColumn: Column<Double>, yColumn: Column<Double>, zColumn: Column<Double>, yawColumn: Column<Float>, pitchColumn: Column<Float>): LocationMultiColumnExposedDelegate","description":"dev.racci.minix.api.utils.exposed.location","location":"Minix-API/dev.racci.minix.api.utils.exposed/location.html","searchKeys":["location","fun Entity<*>.location(worldColumn: Column<String>, xColumn: Column<Double>, yColumn: Column<Double>, zColumn: Column<Double>, yawColumn: Column<Float>, pitchColumn: Column<Float>): LocationMultiColumnExposedDelegate","dev.racci.minix.api.utils.exposed.location"]},{"name":"fun Entity<*>.locationPos(column: Column<String>): LocationPosExposedDelegate","description":"dev.racci.minix.api.utils.exposed.locationPos","location":"Minix-API/dev.racci.minix.api.utils.exposed/location-pos.html","searchKeys":["locationPos","fun Entity<*>.locationPos(column: Column<String>): LocationPosExposedDelegate","dev.racci.minix.api.utils.exposed.locationPos"]},{"name":"fun Entity<*>.locationPos(xColumn: Column<Double>, yColumn: Column<Double>, zColumn: Column<Double>, yawColumn: Column<Float>, pitchColumn: Column<Float>): LocationPosMultiColumnExposedDelegate","description":"dev.racci.minix.api.utils.exposed.locationPos","location":"Minix-API/dev.racci.minix.api.utils.exposed/location-pos.html","searchKeys":["locationPos","fun Entity<*>.locationPos(xColumn: Column<Double>, yColumn: Column<Double>, zColumn: Column<Double>, yawColumn: Column<Float>, pitchColumn: Column<Float>): LocationPosMultiColumnExposedDelegate","dev.racci.minix.api.utils.exposed.locationPos"]},{"name":"fun Entity<*>.locationPos(xColumn: Column<Double?>, yColumn: Column<Double?>, zColumn: Column<Double?>, yawColumn: Column<Float?>, pitchColumn: Column<Float?>): LocationPosMultiColumnExposedDelegateNullable","description":"dev.racci.minix.api.utils.exposed.locationPos","location":"Minix-API/dev.racci.minix.api.utils.exposed/location-pos.html","searchKeys":["locationPos","fun Entity<*>.locationPos(xColumn: Column<Double?>, yColumn: Column<Double?>, zColumn: Column<Double?>, yawColumn: Column<Float?>, pitchColumn: Column<Float?>): LocationPosMultiColumnExposedDelegateNullable","dev.racci.minix.api.utils.exposed.locationPos"]},{"name":"fun Entity<*>.nullableBlock(worldColumn: Column<String?>, xColumn: Column<Int?>, yColumn: Column<Int?>, zColumn: Column<Int?>): BlockMultiColumnExposedDelegateNullable","description":"dev.racci.minix.api.utils.exposed.nullableBlock","location":"Minix-API/dev.racci.minix.api.utils.exposed/nullable-block.html","searchKeys":["nullableBlock","fun Entity<*>.nullableBlock(worldColumn: Column<String?>, xColumn: Column<Int?>, yColumn: Column<Int?>, zColumn: Column<Int?>): BlockMultiColumnExposedDelegateNullable","dev.racci.minix.api.utils.exposed.nullableBlock"]},{"name":"fun Entity<*>.nullableBlockPos(xColumn: Column<Int?>, yColumn: Column<Int?>, zColumn: Column<Int?>): BlockPosMultiColumnExposedDelegateNullable","description":"dev.racci.minix.api.utils.exposed.nullableBlockPos","location":"Minix-API/dev.racci.minix.api.utils.exposed/nullable-block-pos.html","searchKeys":["nullableBlockPos","fun Entity<*>.nullableBlockPos(xColumn: Column<Int?>, yColumn: Column<Int?>, zColumn: Column<Int?>): BlockPosMultiColumnExposedDelegateNullable","dev.racci.minix.api.utils.exposed.nullableBlockPos"]},{"name":"fun Entity<*>.nullableChunk(column: Column<String?>): ChunkExposedDelegateNullable","description":"dev.racci.minix.api.utils.exposed.nullableChunk","location":"Minix-API/dev.racci.minix.api.utils.exposed/nullable-chunk.html","searchKeys":["nullableChunk","fun Entity<*>.nullableChunk(column: Column<String?>): ChunkExposedDelegateNullable","dev.racci.minix.api.utils.exposed.nullableChunk"]},{"name":"fun Entity<*>.nullableChunkPos(column: Column<String?>): ChunkPosExposedDelegateNullable","description":"dev.racci.minix.api.utils.exposed.nullableChunkPos","location":"Minix-API/dev.racci.minix.api.utils.exposed/nullable-chunk-pos.html","searchKeys":["nullableChunkPos","fun Entity<*>.nullableChunkPos(column: Column<String?>): ChunkPosExposedDelegateNullable","dev.racci.minix.api.utils.exposed.nullableChunkPos"]},{"name":"fun Entity<*>.nullableItemStack(column: Column<ExposedBlob?>): ItemStackExposedDelegateNullable","description":"dev.racci.minix.api.utils.exposed.nullableItemStack","location":"Minix-API/dev.racci.minix.api.utils.exposed/nullable-item-stack.html","searchKeys":["nullableItemStack","fun Entity<*>.nullableItemStack(column: Column<ExposedBlob?>): ItemStackExposedDelegateNullable","dev.racci.minix.api.utils.exposed.nullableItemStack"]},{"name":"fun Entity<*>.nullableLocation(worldColumn: Column<String?>, xColumn: Column<Double?>, yColumn: Column<Double?>, zColumn: Column<Double?>, yawColumn: Column<Float?>, pitchColumn: Column<Float?>): LocationMultiColumnExposedDelegateNullable","description":"dev.racci.minix.api.utils.exposed.nullableLocation","location":"Minix-API/dev.racci.minix.api.utils.exposed/nullable-location.html","searchKeys":["nullableLocation","fun Entity<*>.nullableLocation(worldColumn: Column<String?>, xColumn: Column<Double?>, yColumn: Column<Double?>, zColumn: Column<Double?>, yawColumn: Column<Float?>, pitchColumn: Column<Float?>): LocationMultiColumnExposedDelegateNullable","dev.racci.minix.api.utils.exposed.nullableLocation"]},{"name":"fun Entity<*>.nullableLocationPos(column: Column<String?>): LocationPosExposedDelegateNullable","description":"dev.racci.minix.api.utils.exposed.nullableLocationPos","location":"Minix-API/dev.racci.minix.api.utils.exposed/nullable-location-pos.html","searchKeys":["nullableLocationPos","fun Entity<*>.nullableLocationPos(column: Column<String?>): LocationPosExposedDelegateNullable","dev.racci.minix.api.utils.exposed.nullableLocationPos"]},{"name":"fun Entity<*>.nullableOfflinePlayer(column: Column<UUID?>): OfflinePlayerExposedDelegateNullable","description":"dev.racci.minix.api.utils.exposed.nullableOfflinePlayer","location":"Minix-API/dev.racci.minix.api.utils.exposed/nullable-offline-player.html","searchKeys":["nullableOfflinePlayer","fun Entity<*>.nullableOfflinePlayer(column: Column<UUID?>): OfflinePlayerExposedDelegateNullable","dev.racci.minix.api.utils.exposed.nullableOfflinePlayer"]},{"name":"fun Entity<*>.nullableWorld(column: Column<String?>): WorldExposedDelegateNullable","description":"dev.racci.minix.api.utils.exposed.nullableWorld","location":"Minix-API/dev.racci.minix.api.utils.exposed/nullable-world.html","searchKeys":["nullableWorld","fun Entity<*>.nullableWorld(column: Column<String?>): WorldExposedDelegateNullable","dev.racci.minix.api.utils.exposed.nullableWorld"]},{"name":"fun Entity<*>.offlinePlayer(column: Column<UUID>): OfflinePlayerExposedDelegate","description":"dev.racci.minix.api.utils.exposed.offlinePlayer","location":"Minix-API/dev.racci.minix.api.utils.exposed/offline-player.html","searchKeys":["offlinePlayer","fun Entity<*>.offlinePlayer(column: Column<UUID>): OfflinePlayerExposedDelegate","dev.racci.minix.api.utils.exposed.offlinePlayer"]},{"name":"fun Entity<*>.world(column: Column<String>): WorldExposedDelegate","description":"dev.racci.minix.api.utils.exposed.world","location":"Minix-API/dev.racci.minix.api.utils.exposed/world.html","searchKeys":["world","fun Entity<*>.world(column: Column<String>): WorldExposedDelegate","dev.racci.minix.api.utils.exposed.world"]},{"name":"fun Enum<*>.formatted(separator: String = \" \", capitalize: Boolean = true): String","description":"dev.racci.minix.api.extensions.formatted","location":"Minix-API/dev.racci.minix.api.extensions/formatted.html","searchKeys":["formatted","fun Enum<*>.formatted(separator: String = \" \", capitalize: Boolean = true): String","dev.racci.minix.api.extensions.formatted"]},{"name":"fun ExpirationListImpl(plugin: MinixPlugin)","description":"dev.racci.minix.api.utils.collections.ExpirationListImpl.ExpirationListImpl","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list-impl/-expiration-list-impl.html","searchKeys":["ExpirationListImpl","fun ExpirationListImpl(plugin: MinixPlugin)","dev.racci.minix.api.utils.collections.ExpirationListImpl.ExpirationListImpl"]},{"name":"fun ExpiringArray(duration: Duration)","description":"dev.racci.minix.api.collections.ExpiringArray.ExpiringArray","location":"Minix-API/dev.racci.minix.api.collections/-expiring-array/-expiring-array.html","searchKeys":["ExpiringArray","fun ExpiringArray(duration: Duration)","dev.racci.minix.api.collections.ExpiringArray.ExpiringArray"]},{"name":"fun Extension()","description":"dev.racci.minix.api.extension.Extension.Extension","location":"Minix-API/dev.racci.minix.api.extension/-extension/-extension.html","searchKeys":["Extension","fun Extension()","dev.racci.minix.api.extension.Extension.Extension"]},{"name":"fun ExtensionCompanion()","description":"dev.racci.minix.api.extension.Extension.ExtensionCompanion.ExtensionCompanion","location":"Minix-API/dev.racci.minix.api.extension/-extension/-extension-companion/-extension-companion.html","searchKeys":["ExtensionCompanion","fun ExtensionCompanion()","dev.racci.minix.api.extension.Extension.ExtensionCompanion.ExtensionCompanion"]},{"name":"fun ExtensionStateEvent(extension: Extension<*>, state: ExtensionState)","description":"dev.racci.minix.api.extension.ExtensionStateEvent.ExtensionStateEvent","location":"Minix-API/dev.racci.minix.api.extension/-extension-state-event/-extension-state-event.html","searchKeys":["ExtensionStateEvent","fun ExtensionStateEvent(extension: Extension<*>, state: ExtensionState)","dev.racci.minix.api.extension.ExtensionStateEvent.ExtensionStateEvent"]},{"name":"fun ExtensionsBuilder()","description":"dev.racci.minix.api.plugin.MinixPlugin.ExtensionsBuilder.ExtensionsBuilder","location":"Minix-API/dev.racci.minix.api.plugin/-minix-plugin/-extensions-builder/-extensions-builder.html","searchKeys":["ExtensionsBuilder","fun ExtensionsBuilder()","dev.racci.minix.api.plugin.MinixPlugin.ExtensionsBuilder.ExtensionsBuilder"]},{"name":"fun File.size(): Long","description":"dev.racci.minix.api.utils.size","location":"Minix-API/dev.racci.minix.api.utils/size.html","searchKeys":["size","fun File.size(): Long","dev.racci.minix.api.utils.size"]},{"name":"fun FloatRange.randomOrMin(): Float","description":"dev.racci.minix.api.extensions.randomOrMin","location":"Minix-API/dev.racci.minix.api.extensions/random-or-min.html","searchKeys":["randomOrMin","fun FloatRange.randomOrMin(): Float","dev.racci.minix.api.extensions.randomOrMin"]},{"name":"fun FormattedMessage(input: () -> Any?, scope: String?, level: MinixLogger.LoggingLevel, throwable: Throwable?, textColour: TextColors?, whitespace: Whitespace = Whitespace.PRE, alignment: TextAlign = TextAlign.NONE, overflowWrap: OverflowWrap = OverflowWrap.NORMAL, width: Int = terminal.info.width)","description":"dev.racci.minix.api.plugin.logger.MinixLogger.FormattedMessage.FormattedMessage","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-formatted-message/-formatted-message.html","searchKeys":["FormattedMessage","fun FormattedMessage(input: () -> Any?, scope: String?, level: MinixLogger.LoggingLevel, throwable: Throwable?, textColour: TextColors?, whitespace: Whitespace = Whitespace.PRE, alignment: TextAlign = TextAlign.NONE, overflowWrap: OverflowWrap = OverflowWrap.NORMAL, width: Int = terminal.info.width)","dev.racci.minix.api.plugin.logger.MinixLogger.FormattedMessage.FormattedMessage"]},{"name":"fun FormattedMessage(input: String?, scope: String?, level: MinixLogger.LoggingLevel, throwable: Throwable?, textColour: TextColors?, whitespace: Whitespace = Whitespace.PRE, alignment: TextAlign = TextAlign.NONE, overflowWrap: OverflowWrap = OverflowWrap.NORMAL, width: Int = terminal.info.width)","description":"dev.racci.minix.api.plugin.logger.MinixLogger.FormattedMessage.FormattedMessage","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-formatted-message/-formatted-message.html","searchKeys":["FormattedMessage","fun FormattedMessage(input: String?, scope: String?, level: MinixLogger.LoggingLevel, throwable: Throwable?, textColour: TextColors?, whitespace: Whitespace = Whitespace.PRE, alignment: TextAlign = TextAlign.NONE, overflowWrap: OverflowWrap = OverflowWrap.NORMAL, width: Int = terminal.info.width)","dev.racci.minix.api.plugin.logger.MinixLogger.FormattedMessage.FormattedMessage"]},{"name":"fun FurnaceRecipeIngredients(input: SerializableItemStack, experience: Float, cookingTime: Int)","description":"dev.racci.minix.api.serializables.recipes.FurnaceRecipeIngredients.FurnaceRecipeIngredients","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-furnace-recipe-ingredients/-furnace-recipe-ingredients.html","searchKeys":["FurnaceRecipeIngredients","fun FurnaceRecipeIngredients(input: SerializableItemStack, experience: Float, cookingTime: Int)","dev.racci.minix.api.serializables.recipes.FurnaceRecipeIngredients.FurnaceRecipeIngredients"]},{"name":"fun GithubUpdateProvider(projectOwner: String, projectRepo: String, userAgent: String = projectRepo, jarSearchRegex: String = \".*\", md5SearchRegex: String = \".*\")","description":"dev.racci.minix.api.updater.providers.GithubUpdateProvider.GithubUpdateProvider","location":"Minix-API/dev.racci.minix.api.updater.providers/-github-update-provider/-github-update-provider.html","searchKeys":["GithubUpdateProvider","fun GithubUpdateProvider(projectOwner: String, projectRepo: String, userAgent: String = projectRepo, jarSearchRegex: String = \".*\", md5SearchRegex: String = \".*\")","dev.racci.minix.api.updater.providers.GithubUpdateProvider.GithubUpdateProvider"]},{"name":"fun IncorrectItemTypeException(message: String)","description":"dev.racci.minix.api.exceptions.IncorrectItemTypeException.IncorrectItemTypeException","location":"Minix-API/dev.racci.minix.api.exceptions/-incorrect-item-type-exception/-incorrect-item-type-exception.html","searchKeys":["IncorrectItemTypeException","fun IncorrectItemTypeException(message: String)","dev.racci.minix.api.exceptions.IncorrectItemTypeException.IncorrectItemTypeException"]},{"name":"fun InnerConfig()","description":"dev.racci.minix.api.data.MinixConfig.InnerConfig.InnerConfig","location":"Minix-API/dev.racci.minix.api.data/-minix-config/-inner-config/-inner-config.html","searchKeys":["InnerConfig","fun InnerConfig()","dev.racci.minix.api.data.MinixConfig.InnerConfig.InnerConfig"]},{"name":"fun Int.asBoolean(): Boolean","description":"dev.racci.minix.api.extensions.asBoolean","location":"Minix-API/dev.racci.minix.api.extensions/as-boolean.html","searchKeys":["asBoolean","fun Int.asBoolean(): Boolean","dev.racci.minix.api.extensions.asBoolean"]},{"name":"fun IntRange.randomOrMin(): Int","description":"dev.racci.minix.api.extensions.randomOrMin","location":"Minix-API/dev.racci.minix.api.extensions/random-or-min.html","searchKeys":["randomOrMin","fun IntRange.randomOrMin(): Int","dev.racci.minix.api.extensions.randomOrMin"]},{"name":"fun InvalidUpdateProviderException(message: String? = null, cause: Throwable? = null)","description":"dev.racci.minix.api.updater.providers.UpdateProvider.InvalidUpdateProviderException.InvalidUpdateProviderException","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-invalid-update-provider-exception/-invalid-update-provider-exception.html","searchKeys":["InvalidUpdateProviderException","fun InvalidUpdateProviderException(message: String? = null, cause: Throwable? = null)","dev.racci.minix.api.updater.providers.UpdateProvider.InvalidUpdateProviderException.InvalidUpdateProviderException"]},{"name":"fun InvalidVersionStringException(string: String? = \"The version string must be in the format: \")","description":"dev.racci.minix.api.updater.Version.InvalidVersionStringException.InvalidVersionStringException","location":"Minix-API/dev.racci.minix.api.updater/-version/-invalid-version-string-exception/-invalid-version-string-exception.html","searchKeys":["InvalidVersionStringException","fun InvalidVersionStringException(string: String? = \"The version string must be in the format: \")","dev.racci.minix.api.updater.Version.InvalidVersionStringException.InvalidVersionStringException"]},{"name":"fun Inventory.hasSpace(item: ItemStack, amount: Int = item.amount): Boolean","description":"dev.racci.minix.api.extensions.hasSpace","location":"Minix-API/dev.racci.minix.api.extensions/has-space.html","searchKeys":["hasSpace","fun Inventory.hasSpace(item: ItemStack, amount: Int = item.amount): Boolean","dev.racci.minix.api.extensions.hasSpace"]},{"name":"fun Inventory.spaceOf(item: ItemStack): Int","description":"dev.racci.minix.api.extensions.spaceOf","location":"Minix-API/dev.racci.minix.api.extensions/space-of.html","searchKeys":["spaceOf","fun Inventory.spaceOf(item: ItemStack): Int","dev.racci.minix.api.extensions.spaceOf"]},{"name":"fun ItemMeta.addTexture(texture: String?)","description":"dev.racci.minix.api.extensions.addTexture","location":"Minix-API/dev.racci.minix.api.extensions/add-texture.html","searchKeys":["addTexture","fun ItemMeta.addTexture(texture: String?)","dev.racci.minix.api.extensions.addTexture"]},{"name":"fun ItemStack.addTexture(texture: String?)","description":"dev.racci.minix.api.extensions.addTexture","location":"Minix-API/dev.racci.minix.api.extensions/add-texture.html","searchKeys":["addTexture","fun ItemStack.addTexture(texture: String?)","dev.racci.minix.api.extensions.addTexture"]},{"name":"fun ItemStack.displayName(displayName: Component): ItemMeta?","description":"dev.racci.minix.api.extensions.displayName","location":"Minix-API/dev.racci.minix.api.extensions/display-name.html","searchKeys":["displayName","fun ItemStack.displayName(displayName: Component): ItemMeta?","dev.racci.minix.api.extensions.displayName"]},{"name":"fun ItemStack.toSerializable(): SerializableItemStack","description":"dev.racci.minix.api.serializables.toSerializable","location":"Minix-API/dev.racci.minix.api.serializables/to-serializable.html","searchKeys":["toSerializable","fun ItemStack.toSerializable(): SerializableItemStack","dev.racci.minix.api.serializables.toSerializable"]},{"name":"fun ItemStackExposedDelegate(column: Column<ExposedBlob>)","description":"dev.racci.minix.api.utils.exposed.ItemStackExposedDelegate.ItemStackExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-item-stack-exposed-delegate/-item-stack-exposed-delegate.html","searchKeys":["ItemStackExposedDelegate","fun ItemStackExposedDelegate(column: Column<ExposedBlob>)","dev.racci.minix.api.utils.exposed.ItemStackExposedDelegate.ItemStackExposedDelegate"]},{"name":"fun ItemStackExposedDelegateNullable(column: Column<ExposedBlob?>)","description":"dev.racci.minix.api.utils.exposed.ItemStackExposedDelegateNullable.ItemStackExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-item-stack-exposed-delegate-nullable/-item-stack-exposed-delegate-nullable.html","searchKeys":["ItemStackExposedDelegateNullable","fun ItemStackExposedDelegateNullable(column: Column<ExposedBlob?>)","dev.racci.minix.api.utils.exposed.ItemStackExposedDelegateNullable.ItemStackExposedDelegateNullable"]},{"name":"fun JenkinsUpdateProvider(host: String, job: String, token: String? = null, artifactSearchRegex: String? = null)","description":"dev.racci.minix.api.updater.providers.JenkinsUpdateProvider.JenkinsUpdateProvider","location":"Minix-API/dev.racci.minix.api.updater.providers/-jenkins-update-provider/-jenkins-update-provider.html","searchKeys":["JenkinsUpdateProvider","fun JenkinsUpdateProvider(host: String, job: String, token: String? = null, artifactSearchRegex: String? = null)","dev.racci.minix.api.updater.providers.JenkinsUpdateProvider.JenkinsUpdateProvider"]},{"name":"fun KEvent(async: Boolean = false)","description":"dev.racci.minix.api.events.KEvent.KEvent","location":"Minix-API/dev.racci.minix.api.events/-k-event/-k-event.html","searchKeys":["KEvent","fun KEvent(async: Boolean = false)","dev.racci.minix.api.events.KEvent.KEvent"]},{"name":"fun KPlayerEvent(player: Player, async: Boolean = false)","description":"dev.racci.minix.api.events.KPlayerEvent.KPlayerEvent","location":"Minix-API/dev.racci.minix.api.events/-k-player-event/-k-player-event.html","searchKeys":["KPlayerEvent","fun KPlayerEvent(player: Player, async: Boolean = false)","dev.racci.minix.api.events.KPlayerEvent.KPlayerEvent"]},{"name":"fun KWorldEvent(world: World)","description":"dev.racci.minix.api.events.KWorldEvent.KWorldEvent","location":"Minix-API/dev.racci.minix.api.events/-k-world-event/-k-world-event.html","searchKeys":["KWorldEvent","fun KWorldEvent(world: World)","dev.racci.minix.api.events.KWorldEvent.KWorldEvent"]},{"name":"fun LangConfig()","description":"dev.racci.minix.api.data.LangConfig.LangConfig","location":"Minix-API/dev.racci.minix.api.data/-lang-config/-lang-config.html","searchKeys":["LangConfig","fun LangConfig()","dev.racci.minix.api.data.LangConfig.LangConfig"]},{"name":"fun LazyComponentReplacement(value: () -> Component)","description":"dev.racci.minix.api.utils.adventure.LazyComponentReplacement.LazyComponentReplacement","location":"Minix-API/dev.racci.minix.api.utils.adventure/-lazy-component-replacement/-lazy-component-replacement.html","searchKeys":["LazyComponentReplacement","fun LazyComponentReplacement(value: () -> Component)","dev.racci.minix.api.utils.adventure.LazyComponentReplacement.LazyComponentReplacement"]},{"name":"fun LazyStringReplacement(value: () -> String)","description":"dev.racci.minix.api.utils.adventure.LazyStringReplacement.LazyStringReplacement","location":"Minix-API/dev.racci.minix.api.utils.adventure/-lazy-string-replacement/-lazy-string-replacement.html","searchKeys":["LazyStringReplacement","fun LazyStringReplacement(value: () -> String)","dev.racci.minix.api.utils.adventure.LazyStringReplacement.LazyStringReplacement"]},{"name":"fun LevelConversionException(from: Any)","description":"dev.racci.minix.api.exceptions.LevelConversionException.LevelConversionException","location":"Minix-API/dev.racci.minix.api.exceptions/-level-conversion-exception/-level-conversion-exception.html","searchKeys":["LevelConversionException","fun LevelConversionException(from: Any)","dev.racci.minix.api.exceptions.LevelConversionException.LevelConversionException"]},{"name":"fun Listener.registerEvents(plugin: MinixPlugin)","description":"dev.racci.minix.api.extensions.registerEvents","location":"Minix-API/dev.racci.minix.api.extensions/register-events.html","searchKeys":["registerEvents","fun Listener.registerEvents(plugin: MinixPlugin)","dev.racci.minix.api.extensions.registerEvents"]},{"name":"fun Listener.unregisterListener()","description":"dev.racci.minix.api.extensions.unregisterListener","location":"Minix-API/dev.racci.minix.api.extensions/unregister-listener.html","searchKeys":["unregisterListener","fun Listener.unregisterListener()","dev.racci.minix.api.extensions.unregisterListener"]},{"name":"fun Loadable()","description":"dev.racci.minix.api.utils.Loadable.Loadable","location":"Minix-API/dev.racci.minix.api.utils/-loadable/-loadable.html","searchKeys":["Loadable","fun Loadable()","dev.racci.minix.api.utils.Loadable.Loadable"]},{"name":"fun Location.asBlockPos(): BlockPos","description":"dev.racci.minix.api.utils.minecraft.asBlockPos","location":"Minix-API/dev.racci.minix.api.utils.minecraft/as-block-pos.html","searchKeys":["asBlockPos","fun Location.asBlockPos(): BlockPos","dev.racci.minix.api.utils.minecraft.asBlockPos"]},{"name":"fun Location.asPos(): LocationPos","description":"dev.racci.minix.api.utils.minecraft.asPos","location":"Minix-API/dev.racci.minix.api.utils.minecraft/as-pos.html","searchKeys":["asPos","fun Location.asPos(): LocationPos","dev.racci.minix.api.utils.minecraft.asPos"]},{"name":"fun Location.dropItem(item: ItemStack): Item","description":"dev.racci.minix.api.extensions.dropItem","location":"Minix-API/dev.racci.minix.api.extensions/drop-item.html","searchKeys":["dropItem","fun Location.dropItem(item: ItemStack): Item","dev.racci.minix.api.extensions.dropItem"]},{"name":"fun Location.dropItemNaturally(item: ItemStack): Item","description":"dev.racci.minix.api.extensions.dropItemNaturally","location":"Minix-API/dev.racci.minix.api.extensions/drop-item-naturally.html","searchKeys":["dropItemNaturally","fun Location.dropItemNaturally(item: ItemStack): Item","dev.racci.minix.api.extensions.dropItemNaturally"]},{"name":"fun Location.generateTree(type: TreeType): Boolean","description":"dev.racci.minix.api.extensions.generateTree","location":"Minix-API/dev.racci.minix.api.extensions/generate-tree.html","searchKeys":["generateTree","fun Location.generateTree(type: TreeType): Boolean","dev.racci.minix.api.extensions.generateTree"]},{"name":"fun Location.playEffect(effect: Effect, data: Int)","description":"dev.racci.minix.api.extensions.playEffect","location":"Minix-API/dev.racci.minix.api.extensions/play-effect.html","searchKeys":["playEffect","fun Location.playEffect(effect: Effect, data: Int)","dev.racci.minix.api.extensions.playEffect"]},{"name":"fun Location.playEffect(effect: Effect, data: Int, radius: Int)","description":"dev.racci.minix.api.extensions.playEffect","location":"Minix-API/dev.racci.minix.api.extensions/play-effect.html","searchKeys":["playEffect","fun Location.playEffect(effect: Effect, data: Int, radius: Int)","dev.racci.minix.api.extensions.playEffect"]},{"name":"fun Location.playSound(sound: Sound, volume: Float, pitch: Float)","description":"dev.racci.minix.api.extensions.playSound","location":"Minix-API/dev.racci.minix.api.extensions/play-sound.html","searchKeys":["playSound","fun Location.playSound(sound: Sound, volume: Float, pitch: Float)","dev.racci.minix.api.extensions.playSound"]},{"name":"fun Location.spawnArrow(direction: Vector, speed: Float, spread: Float): Arrow","description":"dev.racci.minix.api.extensions.spawnArrow","location":"Minix-API/dev.racci.minix.api.extensions/spawn-arrow.html","searchKeys":["spawnArrow","fun Location.spawnArrow(direction: Vector, speed: Float, spread: Float): Arrow","dev.racci.minix.api.extensions.spawnArrow"]},{"name":"fun Location.strikeLightning(): LightningStrike","description":"dev.racci.minix.api.extensions.strikeLightning","location":"Minix-API/dev.racci.minix.api.extensions/strike-lightning.html","searchKeys":["strikeLightning","fun Location.strikeLightning(): LightningStrike","dev.racci.minix.api.extensions.strikeLightning"]},{"name":"fun Location.strikeLightningEffect(): LightningStrike","description":"dev.racci.minix.api.extensions.strikeLightningEffect","location":"Minix-API/dev.racci.minix.api.extensions/strike-lightning-effect.html","searchKeys":["strikeLightningEffect","fun Location.strikeLightningEffect(): LightningStrike","dev.racci.minix.api.extensions.strikeLightningEffect"]},{"name":"fun LocationExposedDelegate(column: Column<String>)","description":"dev.racci.minix.api.utils.exposed.LocationExposedDelegate.LocationExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-exposed-delegate/-location-exposed-delegate.html","searchKeys":["LocationExposedDelegate","fun LocationExposedDelegate(column: Column<String>)","dev.racci.minix.api.utils.exposed.LocationExposedDelegate.LocationExposedDelegate"]},{"name":"fun LocationExposedDelegateNullable(column: Column<String?>)","description":"dev.racci.minix.api.utils.exposed.LocationExposedDelegateNullable.LocationExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-exposed-delegate-nullable/-location-exposed-delegate-nullable.html","searchKeys":["LocationExposedDelegateNullable","fun LocationExposedDelegateNullable(column: Column<String?>)","dev.racci.minix.api.utils.exposed.LocationExposedDelegateNullable.LocationExposedDelegateNullable"]},{"name":"fun LocationMultiColumnExposedDelegate(worldColumn: Column<String>, xColumn: Column<Double>, yColumn: Column<Double>, zColumn: Column<Double>, yawColumn: Column<Float>, pitchColumn: Column<Float>)","description":"dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegate.LocationMultiColumnExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-multi-column-exposed-delegate/-location-multi-column-exposed-delegate.html","searchKeys":["LocationMultiColumnExposedDelegate","fun LocationMultiColumnExposedDelegate(worldColumn: Column<String>, xColumn: Column<Double>, yColumn: Column<Double>, zColumn: Column<Double>, yawColumn: Column<Float>, pitchColumn: Column<Float>)","dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegate.LocationMultiColumnExposedDelegate"]},{"name":"fun LocationMultiColumnExposedDelegateNullable(worldColumn: Column<String?>, xColumn: Column<Double?>, yColumn: Column<Double?>, zColumn: Column<Double?>, yawColumn: Column<Float?>, pitchColumn: Column<Float?>)","description":"dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegateNullable.LocationMultiColumnExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-multi-column-exposed-delegate-nullable/-location-multi-column-exposed-delegate-nullable.html","searchKeys":["LocationMultiColumnExposedDelegateNullable","fun LocationMultiColumnExposedDelegateNullable(worldColumn: Column<String?>, xColumn: Column<Double?>, yColumn: Column<Double?>, zColumn: Column<Double?>, yawColumn: Column<Float?>, pitchColumn: Column<Float?>)","dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegateNullable.LocationMultiColumnExposedDelegateNullable"]},{"name":"fun LocationPos(x: Double, y: Double, z: Double, yaw: Float, pitch: Float)","description":"dev.racci.minix.api.utils.minecraft.LocationPos.LocationPos","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-location-pos/-location-pos.html","searchKeys":["LocationPos","fun LocationPos(x: Double, y: Double, z: Double, yaw: Float, pitch: Float)","dev.racci.minix.api.utils.minecraft.LocationPos.LocationPos"]},{"name":"fun LocationPos.asBlockPos(): BlockPos","description":"dev.racci.minix.api.utils.minecraft.LocationPos.asBlockPos","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-location-pos/as-block-pos.html","searchKeys":["asBlockPos","fun LocationPos.asBlockPos(): BlockPos","dev.racci.minix.api.utils.minecraft.LocationPos.asBlockPos"]},{"name":"fun LocationPos.asBukkitBlock(world: World): Block","description":"dev.racci.minix.api.utils.minecraft.LocationPos.asBukkitBlock","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-location-pos/as-bukkit-block.html","searchKeys":["asBukkitBlock","fun LocationPos.asBukkitBlock(world: World): Block","dev.racci.minix.api.utils.minecraft.LocationPos.asBukkitBlock"]},{"name":"fun LocationPos.asBukkitLocation(world: World): Location","description":"dev.racci.minix.api.utils.minecraft.LocationPos.asBukkitLocation","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-location-pos/as-bukkit-location.html","searchKeys":["asBukkitLocation","fun LocationPos.asBukkitLocation(world: World): Location","dev.racci.minix.api.utils.minecraft.LocationPos.asBukkitLocation"]},{"name":"fun LocationPosExposedDelegate(column: Column<String>)","description":"dev.racci.minix.api.utils.exposed.LocationPosExposedDelegate.LocationPosExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-exposed-delegate/-location-pos-exposed-delegate.html","searchKeys":["LocationPosExposedDelegate","fun LocationPosExposedDelegate(column: Column<String>)","dev.racci.minix.api.utils.exposed.LocationPosExposedDelegate.LocationPosExposedDelegate"]},{"name":"fun LocationPosExposedDelegateNullable(column: Column<String?>)","description":"dev.racci.minix.api.utils.exposed.LocationPosExposedDelegateNullable.LocationPosExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-exposed-delegate-nullable/-location-pos-exposed-delegate-nullable.html","searchKeys":["LocationPosExposedDelegateNullable","fun LocationPosExposedDelegateNullable(column: Column<String?>)","dev.racci.minix.api.utils.exposed.LocationPosExposedDelegateNullable.LocationPosExposedDelegateNullable"]},{"name":"fun LocationPosMultiColumnExposedDelegate(xColumn: Column<Double>, yColumn: Column<Double>, zColumn: Column<Double>, yawColumn: Column<Float>, pitchColumn: Column<Float>)","description":"dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegate.LocationPosMultiColumnExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-multi-column-exposed-delegate/-location-pos-multi-column-exposed-delegate.html","searchKeys":["LocationPosMultiColumnExposedDelegate","fun LocationPosMultiColumnExposedDelegate(xColumn: Column<Double>, yColumn: Column<Double>, zColumn: Column<Double>, yawColumn: Column<Float>, pitchColumn: Column<Float>)","dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegate.LocationPosMultiColumnExposedDelegate"]},{"name":"fun LocationPosMultiColumnExposedDelegateNullable(xColumn: Column<Double?>, yColumn: Column<Double?>, zColumn: Column<Double?>, yawColumn: Column<Float?>, pitchColumn: Column<Float?>)","description":"dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegateNullable.LocationPosMultiColumnExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-multi-column-exposed-delegate-nullable/-location-pos-multi-column-exposed-delegate-nullable.html","searchKeys":["LocationPosMultiColumnExposedDelegateNullable","fun LocationPosMultiColumnExposedDelegateNullable(xColumn: Column<Double?>, yColumn: Column<Double?>, zColumn: Column<Double?>, yawColumn: Column<Float?>, pitchColumn: Column<Float?>)","dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegateNullable.LocationPosMultiColumnExposedDelegateNullable"]},{"name":"fun Long.gigabytes(): Data","description":"dev.racci.minix.api.utils.data.gigabytes","location":"Minix-API/dev.racci.minix.api.utils.data/gigabytes.html","searchKeys":["gigabytes","fun Long.gigabytes(): Data","dev.racci.minix.api.utils.data.gigabytes"]},{"name":"fun Long.kilobytes(): Data","description":"dev.racci.minix.api.utils.data.kilobytes","location":"Minix-API/dev.racci.minix.api.utils.data/kilobytes.html","searchKeys":["kilobytes","fun Long.kilobytes(): Data","dev.racci.minix.api.utils.data.kilobytes"]},{"name":"fun Long.megabytes(): Data","description":"dev.racci.minix.api.utils.data.megabytes","location":"Minix-API/dev.racci.minix.api.utils.data/megabytes.html","searchKeys":["megabytes","fun Long.megabytes(): Data","dev.racci.minix.api.utils.data.megabytes"]},{"name":"fun LongRange.randomOrMin(): Long","description":"dev.racci.minix.api.extensions.randomOrMin","location":"Minix-API/dev.racci.minix.api.extensions/random-or-min.html","searchKeys":["randomOrMin","fun LongRange.randomOrMin(): Long","dev.racci.minix.api.extensions.randomOrMin"]},{"name":"fun MappedConfig(parent: KClass<*>, file: String, serializers: Array<KClass<*>> = [])","description":"dev.racci.minix.api.annotations.MappedConfig.MappedConfig","location":"Minix-API/dev.racci.minix.api.annotations/-mapped-config/-mapped-config.html","searchKeys":["MappedConfig","fun MappedConfig(parent: KClass<*>, file: String, serializers: Array<KClass<*>> = [])","dev.racci.minix.api.annotations.MappedConfig.MappedConfig"]},{"name":"fun MappedExtension(parent: KClass<*>, name: String, dependencies: Array<KClass<*>> = [], bindToKClass: KClass<*> = Extension::class)","description":"dev.racci.minix.api.annotations.MappedExtension.MappedExtension","location":"Minix-API/dev.racci.minix.api.annotations/-mapped-extension/-mapped-extension.html","searchKeys":["MappedExtension","fun MappedExtension(parent: KClass<*>, name: String, dependencies: Array<KClass<*>> = [], bindToKClass: KClass<*> = Extension::class)","dev.racci.minix.api.annotations.MappedExtension.MappedExtension"]},{"name":"fun MappedPlugin(bStatsId: Int = -1, bindToKClass: KClass<*> = MinixPlugin::class, extensions: Array<KClass<*>> = [])","description":"dev.racci.minix.api.annotations.MappedPlugin.MappedPlugin","location":"Minix-API/dev.racci.minix.api.annotations/-mapped-plugin/-mapped-plugin.html","searchKeys":["MappedPlugin","fun MappedPlugin(bStatsId: Int = -1, bindToKClass: KClass<*> = MinixPlugin::class, extensions: Array<KClass<*>> = [])","dev.racci.minix.api.annotations.MappedPlugin.MappedPlugin"]},{"name":"fun MiniMessage.lazyPlaceholder(input: String, template: Array<out Pair<String, () -> Any>>): Component","description":"dev.racci.minix.api.extensions.lazyPlaceholder","location":"Minix-API/dev.racci.minix.api.extensions/lazy-placeholder.html","searchKeys":["lazyPlaceholder","fun MiniMessage.lazyPlaceholder(input: String, template: Array<out Pair<String, () -> Any>>): Component","dev.racci.minix.api.extensions.lazyPlaceholder"]},{"name":"fun Minix()","description":"dev.racci.minix.api.data.MinixConfig.Minix.Minix","location":"Minix-API/dev.racci.minix.api.data/-minix-config/-minix/-minix.html","searchKeys":["Minix","fun Minix()","dev.racci.minix.api.data.MinixConfig.Minix.Minix"]},{"name":"fun Minix()","description":"dev.racci.minix.api.plugin.Minix.Minix","location":"Minix-API/dev.racci.minix.api.plugin/-minix/-minix.html","searchKeys":["Minix","fun Minix()","dev.racci.minix.api.plugin.Minix.Minix"]},{"name":"fun MinixConfig()","description":"dev.racci.minix.api.data.MinixConfig.MinixConfig","location":"Minix-API/dev.racci.minix.api.data/-minix-config/-minix-config.html","searchKeys":["MinixConfig","fun MinixConfig()","dev.racci.minix.api.data.MinixConfig.MinixConfig"]},{"name":"fun MinixDsl()","description":"dev.racci.minix.api.annotations.MinixDsl.MinixDsl","location":"Minix-API/dev.racci.minix.api.annotations/-minix-dsl/-minix-dsl.html","searchKeys":["MinixDsl","fun MinixDsl()","dev.racci.minix.api.annotations.MinixDsl.MinixDsl"]},{"name":"fun MinixExperimental()","description":"dev.racci.minix.api.annotations.MinixExperimental.MinixExperimental","location":"Minix-API/dev.racci.minix.api.annotations/-minix-experimental/-minix-experimental.html","searchKeys":["MinixExperimental","fun MinixExperimental()","dev.racci.minix.api.annotations.MinixExperimental.MinixExperimental"]},{"name":"fun MinixInternal()","description":"dev.racci.minix.api.annotations.MinixInternal.MinixInternal","location":"Minix-API/dev.racci.minix.api.annotations/-minix-internal/-minix-internal.html","searchKeys":["MinixInternal","fun MinixInternal()","dev.racci.minix.api.annotations.MinixInternal.MinixInternal"]},{"name":"fun MinixLogger(level: Level)","description":"dev.racci.minix.api.plugin.logger.MinixLogger.MinixLogger","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-minix-logger.html","searchKeys":["MinixLogger","fun MinixLogger(level: Level)","dev.racci.minix.api.plugin.logger.MinixLogger.MinixLogger"]},{"name":"fun MinixLogger(level: Level)","description":"dev.racci.minix.api.plugin.logger.MinixLogger.MinixLogger","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-minix-logger.html","searchKeys":["MinixLogger","fun MinixLogger(level: Level)","dev.racci.minix.api.plugin.logger.MinixLogger.MinixLogger"]},{"name":"fun MinixLogger(level: Level)","description":"dev.racci.minix.api.plugin.logger.MinixLogger.MinixLogger","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-minix-logger.html","searchKeys":["MinixLogger","fun MinixLogger(level: Level)","dev.racci.minix.api.plugin.logger.MinixLogger.MinixLogger"]},{"name":"fun MinixLogger(level: MinixLogger.LoggingLevel)","description":"dev.racci.minix.api.plugin.logger.MinixLogger.MinixLogger","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-minix-logger.html","searchKeys":["MinixLogger","fun MinixLogger(level: MinixLogger.LoggingLevel)","dev.racci.minix.api.plugin.logger.MinixLogger.MinixLogger"]},{"name":"fun MinixPlugin()","description":"dev.racci.minix.api.plugin.MinixPlugin.MinixPlugin","location":"Minix-API/dev.racci.minix.api.plugin/-minix-plugin/-minix-plugin.html","searchKeys":["MinixPlugin","fun MinixPlugin()","dev.racci.minix.api.plugin.MinixPlugin.MinixPlugin"]},{"name":"fun MinixPlugin.findClazz(name: String): Class<*>","description":"dev.racci.minix.api.coroutine.findClazz","location":"Minix-API/dev.racci.minix.api.coroutine/find-clazz.html","searchKeys":["findClazz","fun MinixPlugin.findClazz(name: String): Class<*>","dev.racci.minix.api.coroutine.findClazz"]},{"name":"fun MinixPlugin.launch(dispatcher: CoroutineContext = minecraftDispatcher, parentScope: CoroutineScope? = null, f: suspend CoroutineScope.() -> Unit): Job","description":"dev.racci.minix.api.coroutine.launch","location":"Minix-API/dev.racci.minix.api.coroutine/launch.html","searchKeys":["launch","fun MinixPlugin.launch(dispatcher: CoroutineContext = minecraftDispatcher, parentScope: CoroutineScope? = null, f: suspend CoroutineScope.() -> Unit): Job","dev.racci.minix.api.coroutine.launch"]},{"name":"fun MinixPlugin.launchAsync(f: suspend CoroutineScope.() -> Unit): Job","description":"dev.racci.minix.api.coroutine.launchAsync","location":"Minix-API/dev.racci.minix.api.coroutine/launch-async.html","searchKeys":["launchAsync","fun MinixPlugin.launchAsync(f: suspend CoroutineScope.() -> Unit): Job","dev.racci.minix.api.coroutine.launchAsync"]},{"name":"fun MinixPlugin.onlinePlayerListOf(): OnlinePlayerList","description":"dev.racci.minix.api.utils.collections.onlinePlayerListOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-list-of.html","searchKeys":["onlinePlayerListOf","fun MinixPlugin.onlinePlayerListOf(): OnlinePlayerList","dev.racci.minix.api.utils.collections.onlinePlayerListOf"]},{"name":"fun MinixPlugin.onlinePlayerListOf(vararg pair: Pair<Player, WhenPlayerQuitCollectionCallback>): OnlinePlayerList","description":"dev.racci.minix.api.utils.collections.onlinePlayerListOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-list-of.html","searchKeys":["onlinePlayerListOf","fun MinixPlugin.onlinePlayerListOf(vararg pair: Pair<Player, WhenPlayerQuitCollectionCallback>): OnlinePlayerList","dev.racci.minix.api.utils.collections.onlinePlayerListOf"]},{"name":"fun MinixPlugin.onlinePlayerListOf(vararg players: Player): OnlinePlayerList","description":"dev.racci.minix.api.utils.collections.onlinePlayerListOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-list-of.html","searchKeys":["onlinePlayerListOf","fun MinixPlugin.onlinePlayerListOf(vararg players: Player): OnlinePlayerList","dev.racci.minix.api.utils.collections.onlinePlayerListOf"]},{"name":"fun MinixPlugin.onlinePlayerSetOf(): OnlinePlayerSet","description":"dev.racci.minix.api.utils.collections.onlinePlayerSetOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-set-of.html","searchKeys":["onlinePlayerSetOf","fun MinixPlugin.onlinePlayerSetOf(): OnlinePlayerSet","dev.racci.minix.api.utils.collections.onlinePlayerSetOf"]},{"name":"fun MinixPlugin.onlinePlayerSetOf(vararg pair: Pair<Player, WhenPlayerQuitCollectionCallback>): OnlinePlayerSet","description":"dev.racci.minix.api.utils.collections.onlinePlayerSetOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-set-of.html","searchKeys":["onlinePlayerSetOf","fun MinixPlugin.onlinePlayerSetOf(vararg pair: Pair<Player, WhenPlayerQuitCollectionCallback>): OnlinePlayerSet","dev.racci.minix.api.utils.collections.onlinePlayerSetOf"]},{"name":"fun MinixPlugin.onlinePlayerSetOf(vararg players: Player): OnlinePlayerSet","description":"dev.racci.minix.api.utils.collections.onlinePlayerSetOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-set-of.html","searchKeys":["onlinePlayerSetOf","fun MinixPlugin.onlinePlayerSetOf(vararg players: Player): OnlinePlayerSet","dev.racci.minix.api.utils.collections.onlinePlayerSetOf"]},{"name":"fun MinixPlugin.registerSuspendingEvents(listener: Listener)","description":"dev.racci.minix.api.coroutine.registerSuspendingEvents","location":"Minix-API/dev.racci.minix.api.coroutine/register-suspending-events.html","searchKeys":["registerSuspendingEvents","fun MinixPlugin.registerSuspendingEvents(listener: Listener)","dev.racci.minix.api.coroutine.registerSuspendingEvents"]},{"name":"fun MissingAnnotationException(kClass: KClass<*>, annotation: KClass<Annotation>)","description":"dev.racci.minix.api.exceptions.MissingAnnotationException.MissingAnnotationException","location":"Minix-API/dev.racci.minix.api.exceptions/-missing-annotation-exception/-missing-annotation-exception.html","searchKeys":["MissingAnnotationException","fun MissingAnnotationException(kClass: KClass<*>, annotation: KClass<Annotation>)","dev.racci.minix.api.exceptions.MissingAnnotationException.MissingAnnotationException"]},{"name":"fun MissingPluginException(message: String)","description":"dev.racci.minix.api.exceptions.MissingPluginException.MissingPluginException","location":"Minix-API/dev.racci.minix.api.exceptions/-missing-plugin-exception/-missing-plugin-exception.html","searchKeys":["MissingPluginException","fun MissingPluginException(message: String)","dev.racci.minix.api.exceptions.MissingPluginException.MissingPluginException"]},{"name":"fun NoTraceException(message: String? = null, cause: Throwable? = null)","description":"dev.racci.minix.api.exceptions.NoTraceException.NoTraceException","location":"Minix-API/dev.racci.minix.api.exceptions/-no-trace-exception/-no-trace-exception.html","searchKeys":["NoTraceException","fun NoTraceException(message: String? = null, cause: Throwable? = null)","dev.racci.minix.api.exceptions.NoTraceException.NoTraceException"]},{"name":"fun NotSuccessfullyQueriedException()","description":"dev.racci.minix.api.updater.providers.NotSuccessfullyQueriedException.NotSuccessfullyQueriedException","location":"Minix-API/dev.racci.minix.api.updater.providers/-not-successfully-queried-exception/-not-successfully-queried-exception.html","searchKeys":["NotSuccessfullyQueriedException","fun NotSuccessfullyQueriedException()","dev.racci.minix.api.updater.providers.NotSuccessfullyQueriedException.NotSuccessfullyQueriedException"]},{"name":"fun NullUpdateProvider()","description":"dev.racci.minix.api.updater.providers.NullUpdateProvider.NullUpdateProvider","location":"Minix-API/dev.racci.minix.api.updater.providers/-null-update-provider/-null-update-provider.html","searchKeys":["NullUpdateProvider","fun NullUpdateProvider()","dev.racci.minix.api.updater.providers.NullUpdateProvider.NullUpdateProvider"]},{"name":"fun ObservableCollection()","description":"dev.racci.minix.api.utils.collections.ObservableCollection.ObservableCollection","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-collection/-observable-collection.html","searchKeys":["ObservableCollection","fun ObservableCollection()","dev.racci.minix.api.utils.collections.ObservableCollection.ObservableCollection"]},{"name":"fun ObservableHolder()","description":"dev.racci.minix.api.utils.collections.ObservableHolder.ObservableHolder","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-holder/-observable-holder.html","searchKeys":["ObservableHolder","fun ObservableHolder()","dev.racci.minix.api.utils.collections.ObservableHolder.ObservableHolder"]},{"name":"fun OfflinePlayerExposedDelegate(column: Column<UUID>)","description":"dev.racci.minix.api.utils.exposed.OfflinePlayerExposedDelegate.OfflinePlayerExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-offline-player-exposed-delegate/-offline-player-exposed-delegate.html","searchKeys":["OfflinePlayerExposedDelegate","fun OfflinePlayerExposedDelegate(column: Column<UUID>)","dev.racci.minix.api.utils.exposed.OfflinePlayerExposedDelegate.OfflinePlayerExposedDelegate"]},{"name":"fun OfflinePlayerExposedDelegateNullable(column: Column<UUID?>)","description":"dev.racci.minix.api.utils.exposed.OfflinePlayerExposedDelegateNullable.OfflinePlayerExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-offline-player-exposed-delegate-nullable/-offline-player-exposed-delegate-nullable.html","searchKeys":["OfflinePlayerExposedDelegateNullable","fun OfflinePlayerExposedDelegateNullable(column: Column<UUID?>)","dev.racci.minix.api.utils.exposed.OfflinePlayerExposedDelegateNullable.OfflinePlayerExposedDelegateNullable"]},{"name":"fun OnlinePlayerList(plugin: MinixPlugin)","description":"dev.racci.minix.api.utils.collections.OnlinePlayerList.OnlinePlayerList","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-list/-online-player-list.html","searchKeys":["OnlinePlayerList","fun OnlinePlayerList(plugin: MinixPlugin)","dev.racci.minix.api.utils.collections.OnlinePlayerList.OnlinePlayerList"]},{"name":"fun OnlinePlayerMap(plugin: MinixPlugin)","description":"dev.racci.minix.api.utils.collections.OnlinePlayerMap.OnlinePlayerMap","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-map/-online-player-map.html","searchKeys":["OnlinePlayerMap","fun OnlinePlayerMap(plugin: MinixPlugin)","dev.racci.minix.api.utils.collections.OnlinePlayerMap.OnlinePlayerMap"]},{"name":"fun OnlinePlayerSet(plugin: MinixPlugin)","description":"dev.racci.minix.api.utils.collections.OnlinePlayerSet.OnlinePlayerSet","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-set/-online-player-set.html","searchKeys":["OnlinePlayerSet","fun OnlinePlayerSet(plugin: MinixPlugin)","dev.racci.minix.api.utils.collections.OnlinePlayerSet.OnlinePlayerSet"]},{"name":"fun Pair<Double, Double>.toInt(): Pair<Int, Int>","description":"dev.racci.minix.api.utils.minecraft.toInt","location":"Minix-API/dev.racci.minix.api.utils.minecraft/to-int.html","searchKeys":["toInt","fun Pair<Double, Double>.toInt(): Pair<Int, Int>","dev.racci.minix.api.utils.minecraft.toInt"]},{"name":"fun Pair<Int, Int>.toDouble(): Pair<Double, Double>","description":"dev.racci.minix.api.utils.minecraft.toDouble","location":"Minix-API/dev.racci.minix.api.utils.minecraft/to-double.html","searchKeys":["toDouble","fun Pair<Int, Int>.toDouble(): Pair<Double, Double>","dev.racci.minix.api.utils.minecraft.toDouble"]},{"name":"fun Path.size(): Long","description":"dev.racci.minix.api.utils.size","location":"Minix-API/dev.racci.minix.api.utils/size.html","searchKeys":["size","fun Path.size(): Long","dev.racci.minix.api.utils.size"]},{"name":"fun Pdc()","description":"dev.racci.minix.api.utils.minecraft.Pdc.Pdc","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pdc/-pdc.html","searchKeys":["Pdc","fun Pdc()","dev.racci.minix.api.utils.minecraft.Pdc.Pdc"]},{"name":"fun Permissible.allPermission(vararg permissions: String): Boolean","description":"dev.racci.minix.api.extensions.allPermission","location":"Minix-API/dev.racci.minix.api.extensions/all-permission.html","searchKeys":["allPermission","fun Permissible.allPermission(vararg permissions: String): Boolean","dev.racci.minix.api.extensions.allPermission"]},{"name":"fun Permissible.anyPermission(vararg permissions: String): Boolean","description":"dev.racci.minix.api.extensions.anyPermission","location":"Minix-API/dev.racci.minix.api.extensions/any-permission.html","searchKeys":["anyPermission","fun Permissible.anyPermission(vararg permissions: String): Boolean","dev.racci.minix.api.extensions.anyPermission"]},{"name":"fun Permissible.hasPermissionOrStar(permission: String): Boolean","description":"dev.racci.minix.api.extensions.hasPermissionOrStar","location":"Minix-API/dev.racci.minix.api.extensions/has-permission-or-star.html","searchKeys":["hasPermissionOrStar","fun Permissible.hasPermissionOrStar(permission: String): Boolean","dev.racci.minix.api.extensions.hasPermissionOrStar"]},{"name":"fun Player.chatInput(plugin: MinixPlugin, whenQuitWithoutInput: PlayerQuitFunction = {}, callback: ChatInputCallBack)","description":"dev.racci.minix.api.utils.minecraft.PlayerUtils.chatInput","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-player-utils/chat-input.html","searchKeys":["chatInput","fun Player.chatInput(plugin: MinixPlugin, whenQuitWithoutInput: PlayerQuitFunction = {}, callback: ChatInputCallBack)","dev.racci.minix.api.utils.minecraft.PlayerUtils.chatInput"]},{"name":"fun Player.msg(message: ComponentLike)","description":"dev.racci.minix.api.extensions.msg","location":"Minix-API/dev.racci.minix.api.extensions/msg.html","searchKeys":["msg","fun Player.msg(message: ComponentLike)","dev.racci.minix.api.extensions.msg"]},{"name":"fun Player.msg(message: String)","description":"dev.racci.minix.api.extensions.msg","location":"Minix-API/dev.racci.minix.api.extensions/msg.html","searchKeys":["msg","fun Player.msg(message: String)","dev.racci.minix.api.extensions.msg"]},{"name":"fun Player.msg(messages: Array<ComponentLike>)","description":"dev.racci.minix.api.extensions.msg","location":"Minix-API/dev.racci.minix.api.extensions/msg.html","searchKeys":["msg","fun Player.msg(messages: Array<ComponentLike>)","dev.racci.minix.api.extensions.msg"]},{"name":"fun Player.msg(messages: Collection<ComponentLike>)","description":"dev.racci.minix.api.extensions.msg","location":"Minix-API/dev.racci.minix.api.extensions/msg.html","searchKeys":["msg","fun Player.msg(messages: Collection<ComponentLike>)","dev.racci.minix.api.extensions.msg"]},{"name":"fun Player.whenMove(plugin: MinixPlugin, callback: PlayerMoveFunction)","description":"dev.racci.minix.api.utils.minecraft.PlayerUtils.whenMove","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-player-utils/when-move.html","searchKeys":["whenMove","fun Player.whenMove(plugin: MinixPlugin, callback: PlayerMoveFunction)","dev.racci.minix.api.utils.minecraft.PlayerUtils.whenMove"]},{"name":"fun Player.whenQuit(plugin: MinixPlugin, callback: PlayerQuitFunction)","description":"dev.racci.minix.api.utils.minecraft.PlayerUtils.whenQuit","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-player-utils/when-quit.html","searchKeys":["whenQuit","fun Player.whenQuit(plugin: MinixPlugin, callback: PlayerQuitFunction)","dev.racci.minix.api.utils.minecraft.PlayerUtils.whenQuit"]},{"name":"fun PlayerCallback(plugin: MinixPlugin, callback: PlayerCallbackFunction<R>)","description":"dev.racci.minix.api.utils.minecraft.PlayerUtils.PlayerCallback.PlayerCallback","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-player-utils/-player-callback/-player-callback.html","searchKeys":["PlayerCallback","fun PlayerCallback(plugin: MinixPlugin, callback: PlayerCallbackFunction<R>)","dev.racci.minix.api.utils.minecraft.PlayerUtils.PlayerCallback.PlayerCallback"]},{"name":"fun PlayerData(uuid: UUID)","description":"dev.racci.minix.api.data.PlayerData.PlayerData","location":"Minix-API/dev.racci.minix.api.data/-player-data/-player-data.html","searchKeys":["PlayerData","fun PlayerData(uuid: UUID)","dev.racci.minix.api.data.PlayerData.PlayerData"]},{"name":"fun PlayerDoubleLeftClickEvent(player: Player, item: ItemStack?, blockData: BlockData?, entity: Entity?)","description":"dev.racci.minix.api.events.PlayerDoubleLeftClickEvent.PlayerDoubleLeftClickEvent","location":"Minix-API/dev.racci.minix.api.events/-player-double-left-click-event/-player-double-left-click-event.html","searchKeys":["PlayerDoubleLeftClickEvent","fun PlayerDoubleLeftClickEvent(player: Player, item: ItemStack?, blockData: BlockData?, entity: Entity?)","dev.racci.minix.api.events.PlayerDoubleLeftClickEvent.PlayerDoubleLeftClickEvent"]},{"name":"fun PlayerDoubleOffhandEvent(player: Player, item: ItemStack?, offHandItem: ItemStack?, blockData: BlockData? = null, entity: Entity? = null)","description":"dev.racci.minix.api.events.PlayerDoubleOffhandEvent.PlayerDoubleOffhandEvent","location":"Minix-API/dev.racci.minix.api.events/-player-double-offhand-event/-player-double-offhand-event.html","searchKeys":["PlayerDoubleOffhandEvent","fun PlayerDoubleOffhandEvent(player: Player, item: ItemStack?, offHandItem: ItemStack?, blockData: BlockData? = null, entity: Entity? = null)","dev.racci.minix.api.events.PlayerDoubleOffhandEvent.PlayerDoubleOffhandEvent"]},{"name":"fun PlayerDoubleRightClickEvent(player: Player, item: ItemStack?, blockData: BlockData?, entity: Entity?)","description":"dev.racci.minix.api.events.PlayerDoubleRightClickEvent.PlayerDoubleRightClickEvent","location":"Minix-API/dev.racci.minix.api.events/-player-double-right-click-event/-player-double-right-click-event.html","searchKeys":["PlayerDoubleRightClickEvent","fun PlayerDoubleRightClickEvent(player: Player, item: ItemStack?, blockData: BlockData?, entity: Entity?)","dev.racci.minix.api.events.PlayerDoubleRightClickEvent.PlayerDoubleRightClickEvent"]},{"name":"fun PlayerEnterLiquidEvent(player: Player, previousType: LiquidType, newType: LiquidType)","description":"dev.racci.minix.api.events.PlayerEnterLiquidEvent.PlayerEnterLiquidEvent","location":"Minix-API/dev.racci.minix.api.events/-player-enter-liquid-event/-player-enter-liquid-event.html","searchKeys":["PlayerEnterLiquidEvent","fun PlayerEnterLiquidEvent(player: Player, previousType: LiquidType, newType: LiquidType)","dev.racci.minix.api.events.PlayerEnterLiquidEvent.PlayerEnterLiquidEvent"]},{"name":"fun PlayerExitLiquidEvent(player: Player, previousType: LiquidType, newType: LiquidType)","description":"dev.racci.minix.api.events.PlayerExitLiquidEvent.PlayerExitLiquidEvent","location":"Minix-API/dev.racci.minix.api.events/-player-exit-liquid-event/-player-exit-liquid-event.html","searchKeys":["PlayerExitLiquidEvent","fun PlayerExitLiquidEvent(player: Player, previousType: LiquidType, newType: LiquidType)","dev.racci.minix.api.events.PlayerExitLiquidEvent.PlayerExitLiquidEvent"]},{"name":"fun PlayerLeftClickEvent(player: Player, item: ItemStack?, blockData: BlockData?, entity: Entity?)","description":"dev.racci.minix.api.events.PlayerLeftClickEvent.PlayerLeftClickEvent","location":"Minix-API/dev.racci.minix.api.events/-player-left-click-event/-player-left-click-event.html","searchKeys":["PlayerLeftClickEvent","fun PlayerLeftClickEvent(player: Player, item: ItemStack?, blockData: BlockData?, entity: Entity?)","dev.racci.minix.api.events.PlayerLeftClickEvent.PlayerLeftClickEvent"]},{"name":"fun PlayerLightEvent(player: Player, lightLevel: Int)","description":"dev.racci.minix.api.events.PlayerLightEvent.PlayerLightEvent","location":"Minix-API/dev.racci.minix.api.events/-player-light-event/-player-light-event.html","searchKeys":["PlayerLightEvent","fun PlayerLightEvent(player: Player, lightLevel: Int)","dev.racci.minix.api.events.PlayerLightEvent.PlayerLightEvent"]},{"name":"fun PlayerMap()","description":"dev.racci.minix.api.collections.PlayerMap.PlayerMap","location":"Minix-API/dev.racci.minix.api.collections/-player-map/-player-map.html","searchKeys":["PlayerMap","fun PlayerMap()","dev.racci.minix.api.collections.PlayerMap.PlayerMap"]},{"name":"fun PlayerMoveFullXYZEvent(player: Player, from: Location, to: Location)","description":"dev.racci.minix.api.events.PlayerMoveFullXYZEvent.PlayerMoveFullXYZEvent","location":"Minix-API/dev.racci.minix.api.events/-player-move-full-x-y-z-event/-player-move-full-x-y-z-event.html","searchKeys":["PlayerMoveFullXYZEvent","fun PlayerMoveFullXYZEvent(player: Player, from: Location, to: Location)","dev.racci.minix.api.events.PlayerMoveFullXYZEvent.PlayerMoveFullXYZEvent"]},{"name":"fun PlayerMoveXYZEvent(player: Player, from: Location, to: Location)","description":"dev.racci.minix.api.events.PlayerMoveXYZEvent.PlayerMoveXYZEvent","location":"Minix-API/dev.racci.minix.api.events/-player-move-x-y-z-event/-player-move-x-y-z-event.html","searchKeys":["PlayerMoveXYZEvent","fun PlayerMoveXYZEvent(player: Player, from: Location, to: Location)","dev.racci.minix.api.events.PlayerMoveXYZEvent.PlayerMoveXYZEvent"]},{"name":"fun PlayerOffhandEvent(player: Player, item: ItemStack?, offHandItem: ItemStack?, blockData: BlockData?, entity: Entity?)","description":"dev.racci.minix.api.events.PlayerOffhandEvent.PlayerOffhandEvent","location":"Minix-API/dev.racci.minix.api.events/-player-offhand-event/-player-offhand-event.html","searchKeys":["PlayerOffhandEvent","fun PlayerOffhandEvent(player: Player, item: ItemStack?, offHandItem: ItemStack?, blockData: BlockData?, entity: Entity?)","dev.racci.minix.api.events.PlayerOffhandEvent.PlayerOffhandEvent"]},{"name":"fun PlayerRightClickEvent(player: Player, item: ItemStack?, blockData: BlockData?, entity: Entity?)","description":"dev.racci.minix.api.events.PlayerRightClickEvent.PlayerRightClickEvent","location":"Minix-API/dev.racci.minix.api.events/-player-right-click-event/-player-right-click-event.html","searchKeys":["PlayerRightClickEvent","fun PlayerRightClickEvent(player: Player, item: ItemStack?, blockData: BlockData?, entity: Entity?)","dev.racci.minix.api.events.PlayerRightClickEvent.PlayerRightClickEvent"]},{"name":"fun PlayerShiftDoubleLeftClickEvent(player: Player, item: ItemStack?, blockData: BlockData?, entity: Entity?)","description":"dev.racci.minix.api.events.PlayerShiftDoubleLeftClickEvent.PlayerShiftDoubleLeftClickEvent","location":"Minix-API/dev.racci.minix.api.events/-player-shift-double-left-click-event/-player-shift-double-left-click-event.html","searchKeys":["PlayerShiftDoubleLeftClickEvent","fun PlayerShiftDoubleLeftClickEvent(player: Player, item: ItemStack?, blockData: BlockData?, entity: Entity?)","dev.racci.minix.api.events.PlayerShiftDoubleLeftClickEvent.PlayerShiftDoubleLeftClickEvent"]},{"name":"fun PlayerShiftDoubleOffhandEvent(player: Player, item: ItemStack?, offHandItem: ItemStack?, blockData: BlockData? = null, entity: Entity? = null)","description":"dev.racci.minix.api.events.PlayerShiftDoubleOffhandEvent.PlayerShiftDoubleOffhandEvent","location":"Minix-API/dev.racci.minix.api.events/-player-shift-double-offhand-event/-player-shift-double-offhand-event.html","searchKeys":["PlayerShiftDoubleOffhandEvent","fun PlayerShiftDoubleOffhandEvent(player: Player, item: ItemStack?, offHandItem: ItemStack?, blockData: BlockData? = null, entity: Entity? = null)","dev.racci.minix.api.events.PlayerShiftDoubleOffhandEvent.PlayerShiftDoubleOffhandEvent"]},{"name":"fun PlayerShiftDoubleRightClickEvent(player: Player, item: ItemStack?, blockData: BlockData?, entity: Entity?)","description":"dev.racci.minix.api.events.PlayerShiftDoubleRightClickEvent.PlayerShiftDoubleRightClickEvent","location":"Minix-API/dev.racci.minix.api.events/-player-shift-double-right-click-event/-player-shift-double-right-click-event.html","searchKeys":["PlayerShiftDoubleRightClickEvent","fun PlayerShiftDoubleRightClickEvent(player: Player, item: ItemStack?, blockData: BlockData?, entity: Entity?)","dev.racci.minix.api.events.PlayerShiftDoubleRightClickEvent.PlayerShiftDoubleRightClickEvent"]},{"name":"fun PlayerShiftLeftClickEvent(player: Player, item: ItemStack?, blockData: BlockData? = null, entity: Entity? = null)","description":"dev.racci.minix.api.events.PlayerShiftLeftClickEvent.PlayerShiftLeftClickEvent","location":"Minix-API/dev.racci.minix.api.events/-player-shift-left-click-event/-player-shift-left-click-event.html","searchKeys":["PlayerShiftLeftClickEvent","fun PlayerShiftLeftClickEvent(player: Player, item: ItemStack?, blockData: BlockData? = null, entity: Entity? = null)","dev.racci.minix.api.events.PlayerShiftLeftClickEvent.PlayerShiftLeftClickEvent"]},{"name":"fun PlayerShiftOffhandEvent(player: Player, item: ItemStack?, offHandItem: ItemStack?, blockData: BlockData? = null, entity: Entity? = null)","description":"dev.racci.minix.api.events.PlayerShiftOffhandEvent.PlayerShiftOffhandEvent","location":"Minix-API/dev.racci.minix.api.events/-player-shift-offhand-event/-player-shift-offhand-event.html","searchKeys":["PlayerShiftOffhandEvent","fun PlayerShiftOffhandEvent(player: Player, item: ItemStack?, offHandItem: ItemStack?, blockData: BlockData? = null, entity: Entity? = null)","dev.racci.minix.api.events.PlayerShiftOffhandEvent.PlayerShiftOffhandEvent"]},{"name":"fun PlayerShiftRightClickEvent(player: Player, item: ItemStack?, blockData: BlockData? = null, entity: Entity? = null)","description":"dev.racci.minix.api.events.PlayerShiftRightClickEvent.PlayerShiftRightClickEvent","location":"Minix-API/dev.racci.minix.api.events/-player-shift-right-click-event/-player-shift-right-click-event.html","searchKeys":["PlayerShiftRightClickEvent","fun PlayerShiftRightClickEvent(player: Player, item: ItemStack?, blockData: BlockData? = null, entity: Entity? = null)","dev.racci.minix.api.events.PlayerShiftRightClickEvent.PlayerShiftRightClickEvent"]},{"name":"fun PlayerUnloadEvent(player: Player? = null, uuid: UUID = player!!.uniqueId)","description":"dev.racci.minix.api.events.PlayerUnloadEvent.PlayerUnloadEvent","location":"Minix-API/dev.racci.minix.api.events/-player-unload-event/-player-unload-event.html","searchKeys":["PlayerUnloadEvent","fun PlayerUnloadEvent(player: Player? = null, uuid: UUID = player!!.uniqueId)","dev.racci.minix.api.events.PlayerUnloadEvent.PlayerUnloadEvent"]},{"name":"fun Plugin.registerEvents(vararg listeners: Listener)","description":"dev.racci.minix.api.extensions.registerEvents","location":"Minix-API/dev.racci.minix.api.extensions/register-events.html","searchKeys":["registerEvents","fun Plugin.registerEvents(vararg listeners: Listener)","dev.racci.minix.api.extensions.registerEvents"]},{"name":"fun PluginCommand.setSuspendingExecutor(suspendingCommandExecutor: SuspendingCommandExecutor)","description":"dev.racci.minix.api.coroutine.setSuspendingExecutor","location":"Minix-API/dev.racci.minix.api.coroutine/set-suspending-executor.html","searchKeys":["setSuspendingExecutor","fun PluginCommand.setSuspendingExecutor(suspendingCommandExecutor: SuspendingCommandExecutor)","dev.racci.minix.api.coroutine.setSuspendingExecutor"]},{"name":"fun PluginCommand.setSuspendingTabCompleter(suspendingTabCompleter: SuspendingTabCompleter)","description":"dev.racci.minix.api.coroutine.setSuspendingTabCompleter","location":"Minix-API/dev.racci.minix.api.coroutine/set-suspending-tab-completer.html","searchKeys":["setSuspendingTabCompleter","fun PluginCommand.setSuspendingTabCompleter(suspendingTabCompleter: SuspendingTabCompleter)","dev.racci.minix.api.coroutine.setSuspendingTabCompleter"]},{"name":"fun PluginManager.callSuspendingEvent(event: Event, plugin: MinixPlugin): Collection<Job>","description":"dev.racci.minix.api.coroutine.callSuspendingEvent","location":"Minix-API/dev.racci.minix.api.coroutine/call-suspending-event.html","searchKeys":["callSuspendingEvent","fun PluginManager.callSuspendingEvent(event: Event, plugin: MinixPlugin): Collection<Job>","dev.racci.minix.api.coroutine.callSuspendingEvent"]},{"name":"fun PluginManager.registerSuspendingEvents(listener: Listener, plugin: MinixPlugin)","description":"dev.racci.minix.api.coroutine.registerSuspendingEvents","location":"Minix-API/dev.racci.minix.api.coroutine/register-suspending-events.html","searchKeys":["registerSuspendingEvents","fun PluginManager.registerSuspendingEvents(listener: Listener, plugin: MinixPlugin)","dev.racci.minix.api.coroutine.registerSuspendingEvents"]},{"name":"fun PluginUpdater()","description":"dev.racci.minix.api.data.PluginUpdater.PluginUpdater","location":"Minix-API/dev.racci.minix.api.data/-plugin-updater/-plugin-updater.html","searchKeys":["PluginUpdater","fun PluginUpdater()","dev.racci.minix.api.data.PluginUpdater.PluginUpdater"]},{"name":"fun PropertyFinder()","description":"dev.racci.minix.api.utils.PropertyFinder.PropertyFinder","location":"Minix-API/dev.racci.minix.api.utils/-property-finder/-property-finder.html","searchKeys":["PropertyFinder","fun PropertyFinder()","dev.racci.minix.api.utils.PropertyFinder.PropertyFinder"]},{"name":"fun RangeSerializer()","description":"dev.racci.minix.api.serializables.RangeSerializer.RangeSerializer","location":"Minix-API/dev.racci.minix.api.serializables/-range-serializer/-range-serializer.html","searchKeys":["RangeSerializer","fun RangeSerializer()","dev.racci.minix.api.serializables.RangeSerializer.RangeSerializer"]},{"name":"fun RequestTypeNotAvailableException(message: String?)","description":"dev.racci.minix.api.updater.providers.RequestTypeNotAvailableException.RequestTypeNotAvailableException","location":"Minix-API/dev.racci.minix.api.updater.providers/-request-type-not-available-exception/-request-type-not-available-exception.html","searchKeys":["RequestTypeNotAvailableException","fun RequestTypeNotAvailableException(message: String?)","dev.racci.minix.api.updater.providers.RequestTypeNotAvailableException.RequestTypeNotAvailableException"]},{"name":"fun RunAsync()","description":"dev.racci.minix.api.annotations.RunAsync.RunAsync","location":"Minix-API/dev.racci.minix.api.annotations/-run-async/-run-async.html","searchKeys":["RunAsync","fun RunAsync()","dev.racci.minix.api.annotations.RunAsync.RunAsync"]},{"name":"fun SerializableAttributeModifier()","description":"dev.racci.minix.api.serializables.SerializableAttributeModifier.SerializableAttributeModifier","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-attribute-modifier/-serializable-attribute-modifier.html","searchKeys":["SerializableAttributeModifier","fun SerializableAttributeModifier()","dev.racci.minix.api.serializables.SerializableAttributeModifier.SerializableAttributeModifier"]},{"name":"fun SerializableItemMeta(displayName: Component? = null, localizedName: String? = null, lore: ImmutableList<Component>? = null, customModelData: Int? = null, enchants: ImmutableMap<Enchantment, Int>? = null, itemFlags: ImmutableSet<ItemFlag>? = null, unbreakable: Boolean = false, attributeModifiers: MultiMap<Attribute, AttributeModifier>? = null, damage: Int? = null)","description":"dev.racci.minix.api.serializables.SerializableItemMeta.SerializableItemMeta","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-item-meta/-serializable-item-meta.html","searchKeys":["SerializableItemMeta","fun SerializableItemMeta(displayName: Component? = null, localizedName: String? = null, lore: ImmutableList<Component>? = null, customModelData: Int? = null, enchants: ImmutableMap<Enchantment, Int>? = null, itemFlags: ImmutableSet<ItemFlag>? = null, unbreakable: Boolean = false, attributeModifiers: MultiMap<Attribute, AttributeModifier>? = null, damage: Int? = null)","dev.racci.minix.api.serializables.SerializableItemMeta.SerializableItemMeta"]},{"name":"fun SerializableItemStack(type: Material? = null, amount: Int = 1, meta: SerializableItemMeta? = null, skullMeta: SerializableSkullMeta? = null, tag: String = \"\")","description":"dev.racci.minix.api.serializables.SerializableItemStack.SerializableItemStack","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-item-stack/-serializable-item-stack.html","searchKeys":["SerializableItemStack","fun SerializableItemStack(type: Material? = null, amount: Int = 1, meta: SerializableItemMeta? = null, skullMeta: SerializableSkullMeta? = null, tag: String = \"\")","dev.racci.minix.api.serializables.SerializableItemStack.SerializableItemStack"]},{"name":"fun SerializableRecipe(key: String, ingredients: SerializableRecipeIngredients, result: SerializableItemStack, group: String = \"\")","description":"dev.racci.minix.api.serializables.recipes.SerializableRecipe.SerializableRecipe","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-serializable-recipe/-serializable-recipe.html","searchKeys":["SerializableRecipe","fun SerializableRecipe(key: String, ingredients: SerializableRecipeIngredients, result: SerializableItemStack, group: String = \"\")","dev.racci.minix.api.serializables.recipes.SerializableRecipe.SerializableRecipe"]},{"name":"fun SerializableSkullMeta()","description":"dev.racci.minix.api.serializables.SerializableSkullMeta.SerializableSkullMeta","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-skull-meta/-serializable-skull-meta.html","searchKeys":["SerializableSkullMeta","fun SerializableSkullMeta()","dev.racci.minix.api.serializables.SerializableSkullMeta.SerializableSkullMeta"]},{"name":"fun ShapedRecipeIngredients(items: Map<String, SerializableItemStack>, configuration: String = \"\")","description":"dev.racci.minix.api.serializables.recipes.ShapedRecipeIngredients.ShapedRecipeIngredients","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-shaped-recipe-ingredients/-shaped-recipe-ingredients.html","searchKeys":["ShapedRecipeIngredients","fun ShapedRecipeIngredients(items: Map<String, SerializableItemStack>, configuration: String = \"\")","dev.racci.minix.api.serializables.recipes.ShapedRecipeIngredients.ShapedRecipeIngredients"]},{"name":"fun ShapelessRecipeIngredients(items: List<SerializableItemStack>)","description":"dev.racci.minix.api.serializables.recipes.ShapelessRecipeIngredients.ShapelessRecipeIngredients","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-shapeless-recipe-ingredients/-shapeless-recipe-ingredients.html","searchKeys":["ShapelessRecipeIngredients","fun ShapelessRecipeIngredients(items: List<SerializableItemStack>)","dev.racci.minix.api.serializables.recipes.ShapelessRecipeIngredients.ShapelessRecipeIngredients"]},{"name":"fun SimpleKListener(plugin: MinixPlugin)","description":"dev.racci.minix.api.extensions.SimpleKListener.SimpleKListener","location":"Minix-API/dev.racci.minix.api.extensions/-simple-k-listener/-simple-k-listener.html","searchKeys":["SimpleKListener","fun SimpleKListener(plugin: MinixPlugin)","dev.racci.minix.api.extensions.SimpleKListener.SimpleKListener"]},{"name":"fun SmithingRecipeIngredients(input: SerializableItemStack, addition: SerializableItemStack)","description":"dev.racci.minix.api.serializables.recipes.SmithingRecipeIngredients.SmithingRecipeIngredients","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-smithing-recipe-ingredients/-smithing-recipe-ingredients.html","searchKeys":["SmithingRecipeIngredients","fun SmithingRecipeIngredients(input: SerializableItemStack, addition: SerializableItemStack)","dev.racci.minix.api.serializables.recipes.SmithingRecipeIngredients.SmithingRecipeIngredients"]},{"name":"fun SmokingRecipeIngredients(input: SerializableItemStack, experience: Float, cookingTime: Int)","description":"dev.racci.minix.api.serializables.recipes.SmokingRecipeIngredients.SmokingRecipeIngredients","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-smoking-recipe-ingredients/-smoking-recipe-ingredients.html","searchKeys":["SmokingRecipeIngredients","fun SmokingRecipeIngredients(input: SerializableItemStack, experience: Float, cookingTime: Int)","dev.racci.minix.api.serializables.recipes.SmokingRecipeIngredients.SmokingRecipeIngredients"]},{"name":"fun SpigotUpdateProvider(projectID: Int, fileName: String = \".jar\")","description":"dev.racci.minix.api.updater.providers.SpigotUpdateProvider.SpigotUpdateProvider","location":"Minix-API/dev.racci.minix.api.updater.providers/-spigot-update-provider/-spigot-update-provider.html","searchKeys":["SpigotUpdateProvider","fun SpigotUpdateProvider(projectID: Int, fileName: String = \".jar\")","dev.racci.minix.api.updater.providers.SpigotUpdateProvider.SpigotUpdateProvider"]},{"name":"fun StoneCuttingRecipeIngredients(input: SerializableItemStack)","description":"dev.racci.minix.api.serializables.recipes.StoneCuttingRecipeIngredients.StoneCuttingRecipeIngredients","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-stone-cutting-recipe-ingredients/-stone-cutting-recipe-ingredients.html","searchKeys":["StoneCuttingRecipeIngredients","fun StoneCuttingRecipeIngredients(input: SerializableItemStack)","dev.racci.minix.api.serializables.recipes.StoneCuttingRecipeIngredients.StoneCuttingRecipeIngredients"]},{"name":"fun String.centralize(length: Int, spacer: String = \" \", prefix: String = \"\", suffix: String = \"\"): String","description":"dev.racci.minix.api.utils.primitive.centralize","location":"Minix-API/dev.racci.minix.api.utils.primitive/centralize.html","searchKeys":["centralize","fun String.centralize(length: Int, spacer: String = \" \", prefix: String = \"\", suffix: String = \"\"): String","dev.racci.minix.api.utils.primitive.centralize"]},{"name":"fun String.javaUnicodeToCharacter(): String","description":"dev.racci.minix.api.utils.primitive.javaUnicodeToCharacter","location":"Minix-API/dev.racci.minix.api.utils.primitive/java-unicode-to-character.html","searchKeys":["javaUnicodeToCharacter","fun String.javaUnicodeToCharacter(): String","dev.racci.minix.api.utils.primitive.javaUnicodeToCharacter"]},{"name":"fun String.parse(): Component","description":"dev.racci.minix.api.extensions.parse","location":"Minix-API/dev.racci.minix.api.extensions/parse.html","searchKeys":["parse","fun String.parse(): Component","dev.racci.minix.api.extensions.parse"]},{"name":"fun String.toNamespacedKey(): NamespacedKey","description":"dev.racci.minix.api.extensions.toNamespacedKey","location":"Minix-API/dev.racci.minix.api.extensions/to-namespaced-key.html","searchKeys":["toNamespacedKey","fun String.toNamespacedKey(): NamespacedKey","dev.racci.minix.api.extensions.toNamespacedKey"]},{"name":"fun UUID.serializer(): UUIDSerializer","description":"dev.racci.minix.api.extensions.serializer","location":"Minix-API/dev.racci.minix.api.extensions/serializer.html","searchKeys":["serializer","fun UUID.serializer(): UUIDSerializer","dev.racci.minix.api.extensions.serializer"]},{"name":"fun UnsafeUtil()","description":"dev.racci.minix.api.utils.UnsafeUtil.UnsafeUtil","location":"Minix-API/dev.racci.minix.api.utils/-unsafe-util/-unsafe-util.html","searchKeys":["UnsafeUtil","fun UnsafeUtil()","dev.racci.minix.api.utils.UnsafeUtil.UnsafeUtil"]},{"name":"fun UpdateFile(downloadURL: URL? = null, name: String? = null, fileName: String? = null, checksum: String? = null, changelog: String = \"\", gameVersion: String? = null, version: Version? = null, gameVersions: Array<String>? = null)","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.UpdateFile","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-file/-update-file.html","searchKeys":["UpdateFile","fun UpdateFile(downloadURL: URL? = null, name: String? = null, fileName: String? = null, checksum: String? = null, changelog: String = \"\", gameVersion: String? = null, version: Version? = null, gameVersions: Array<String>? = null)","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.UpdateFile"]},{"name":"fun UpdateProvider()","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateProvider","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-provider.html","searchKeys":["UpdateProvider","fun UpdateProvider()","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateProvider"]},{"name":"fun UpdateProviderSerializer()","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateProviderSerializer.UpdateProviderSerializer","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-provider-serializer/-update-provider-serializer.html","searchKeys":["UpdateProviderSerializer","fun UpdateProviderSerializer()","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateProviderSerializer.UpdateProviderSerializer"]},{"name":"fun Version(majorVersion: Int)","description":"dev.racci.minix.api.updater.Version.Version","location":"Minix-API/dev.racci.minix.api.updater/-version/-version.html","searchKeys":["Version","fun Version(majorVersion: Int)","dev.racci.minix.api.updater.Version.Version"]},{"name":"fun Version(majorVersion: Int, minorVersion: Int)","description":"dev.racci.minix.api.updater.Version.Version","location":"Minix-API/dev.racci.minix.api.updater/-version/-version.html","searchKeys":["Version","fun Version(majorVersion: Int, minorVersion: Int)","dev.racci.minix.api.updater.Version.Version"]},{"name":"fun Version(majorVersion: Int, minorVersion: Int, patchVersion: Int)","description":"dev.racci.minix.api.updater.Version.Version","location":"Minix-API/dev.racci.minix.api.updater/-version/-version.html","searchKeys":["Version","fun Version(majorVersion: Int, minorVersion: Int, patchVersion: Int)","dev.racci.minix.api.updater.Version.Version"]},{"name":"fun Version(rawVersion: String, ignoreTags: Boolean = false)","description":"dev.racci.minix.api.updater.Version.Version","location":"Minix-API/dev.racci.minix.api.updater/-version/-version.html","searchKeys":["Version","fun Version(rawVersion: String, ignoreTags: Boolean = false)","dev.racci.minix.api.updater.Version.Version"]},{"name":"fun WithPlugin<*>.launch(dispatcher: CoroutineContext, block: suspend CoroutineScope.() -> Unit): Job","description":"dev.racci.minix.api.extensions.launch","location":"Minix-API/dev.racci.minix.api.extensions/launch.html","searchKeys":["launch","fun WithPlugin<*>.launch(dispatcher: CoroutineContext, block: suspend CoroutineScope.() -> Unit): Job","dev.racci.minix.api.extensions.launch"]},{"name":"fun WithPlugin<*>.onlinePlayerListOf(): OnlinePlayerList","description":"dev.racci.minix.api.utils.collections.onlinePlayerListOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-list-of.html","searchKeys":["onlinePlayerListOf","fun WithPlugin<*>.onlinePlayerListOf(): OnlinePlayerList","dev.racci.minix.api.utils.collections.onlinePlayerListOf"]},{"name":"fun WithPlugin<*>.onlinePlayerListOf(vararg pair: Pair<Player, WhenPlayerQuitCollectionCallback>): OnlinePlayerList","description":"dev.racci.minix.api.utils.collections.onlinePlayerListOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-list-of.html","searchKeys":["onlinePlayerListOf","fun WithPlugin<*>.onlinePlayerListOf(vararg pair: Pair<Player, WhenPlayerQuitCollectionCallback>): OnlinePlayerList","dev.racci.minix.api.utils.collections.onlinePlayerListOf"]},{"name":"fun WithPlugin<*>.onlinePlayerListOf(vararg players: Player): OnlinePlayerList","description":"dev.racci.minix.api.utils.collections.onlinePlayerListOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-list-of.html","searchKeys":["onlinePlayerListOf","fun WithPlugin<*>.onlinePlayerListOf(vararg players: Player): OnlinePlayerList","dev.racci.minix.api.utils.collections.onlinePlayerListOf"]},{"name":"fun WithPlugin<*>.onlinePlayerSetOf(): OnlinePlayerSet","description":"dev.racci.minix.api.utils.collections.onlinePlayerSetOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-set-of.html","searchKeys":["onlinePlayerSetOf","fun WithPlugin<*>.onlinePlayerSetOf(): OnlinePlayerSet","dev.racci.minix.api.utils.collections.onlinePlayerSetOf"]},{"name":"fun WithPlugin<*>.onlinePlayerSetOf(vararg pair: Pair<Player, WhenPlayerQuitCollectionCallback>): OnlinePlayerSet","description":"dev.racci.minix.api.utils.collections.onlinePlayerSetOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-set-of.html","searchKeys":["onlinePlayerSetOf","fun WithPlugin<*>.onlinePlayerSetOf(vararg pair: Pair<Player, WhenPlayerQuitCollectionCallback>): OnlinePlayerSet","dev.racci.minix.api.utils.collections.onlinePlayerSetOf"]},{"name":"fun WithPlugin<*>.onlinePlayerSetOf(vararg players: Player): OnlinePlayerSet","description":"dev.racci.minix.api.utils.collections.onlinePlayerSetOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-set-of.html","searchKeys":["onlinePlayerSetOf","fun WithPlugin<*>.onlinePlayerSetOf(vararg players: Player): OnlinePlayerSet","dev.racci.minix.api.utils.collections.onlinePlayerSetOf"]},{"name":"fun WithPlugin<*>.registerEvents(vararg listeners: Listener)","description":"dev.racci.minix.api.extensions.registerEvents","location":"Minix-API/dev.racci.minix.api.extensions/register-events.html","searchKeys":["registerEvents","fun WithPlugin<*>.registerEvents(vararg listeners: Listener)","dev.racci.minix.api.extensions.registerEvents"]},{"name":"fun WorldCreator.create(): World","description":"dev.racci.minix.api.extensions.create","location":"Minix-API/dev.racci.minix.api.extensions/create.html","searchKeys":["create","fun WorldCreator.create(): World","dev.racci.minix.api.extensions.create"]},{"name":"fun WorldDayEvent(world: World)","description":"dev.racci.minix.api.events.WorldDayEvent.WorldDayEvent","location":"Minix-API/dev.racci.minix.api.events/-world-day-event/-world-day-event.html","searchKeys":["WorldDayEvent","fun WorldDayEvent(world: World)","dev.racci.minix.api.events.WorldDayEvent.WorldDayEvent"]},{"name":"fun WorldExposedDelegate(column: Column<String>)","description":"dev.racci.minix.api.utils.exposed.WorldExposedDelegate.WorldExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-world-exposed-delegate/-world-exposed-delegate.html","searchKeys":["WorldExposedDelegate","fun WorldExposedDelegate(column: Column<String>)","dev.racci.minix.api.utils.exposed.WorldExposedDelegate.WorldExposedDelegate"]},{"name":"fun WorldExposedDelegateNullable(column: Column<String?>)","description":"dev.racci.minix.api.utils.exposed.WorldExposedDelegateNullable.WorldExposedDelegateNullable","location":"Minix-API/dev.racci.minix.api.utils.exposed/-world-exposed-delegate-nullable/-world-exposed-delegate-nullable.html","searchKeys":["WorldExposedDelegateNullable","fun WorldExposedDelegateNullable(column: Column<String?>)","dev.racci.minix.api.utils.exposed.WorldExposedDelegateNullable.WorldExposedDelegateNullable"]},{"name":"fun WorldNightEvent(world: World)","description":"dev.racci.minix.api.events.WorldNightEvent.WorldNightEvent","location":"Minix-API/dev.racci.minix.api.events/-world-night-event/-world-night-event.html","searchKeys":["WorldNightEvent","fun WorldNightEvent(world: World)","dev.racci.minix.api.events.WorldNightEvent.WorldNightEvent"]},{"name":"fun addAll(key: K, vararg values: V)","description":"dev.racci.minix.api.utils.collections.MultiMap.addAll","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/add-all.html","searchKeys":["addAll","fun addAll(key: K, vararg values: V)","dev.racci.minix.api.utils.collections.MultiMap.addAll"]},{"name":"fun addAll(vararg elements: T): Boolean","description":"dev.racci.minix.api.utils.collections.ObservableList.addAll","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-list/add-all.html","searchKeys":["addAll","fun addAll(vararg elements: T): Boolean","dev.racci.minix.api.utils.collections.ObservableList.addAll"]},{"name":"fun addRecipe(recipe: Recipe): Boolean","description":"dev.racci.minix.api.extensions.addRecipe","location":"Minix-API/dev.racci.minix.api.extensions/add-recipe.html","searchKeys":["addRecipe","fun addRecipe(recipe: Recipe): Boolean","dev.racci.minix.api.extensions.addRecipe"]},{"name":"fun applyTo(meta: ItemMeta)","description":"dev.racci.minix.api.serializables.SerializableSkullMeta.applyTo","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-skull-meta/apply-to.html","searchKeys":["applyTo","fun applyTo(meta: ItemMeta)","dev.racci.minix.api.serializables.SerializableSkullMeta.applyTo"]},{"name":"fun asBukkitBlock(world: World): Block","description":"dev.racci.minix.api.utils.minecraft.BlockPos.asBukkitBlock","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-block-pos/as-bukkit-block.html","searchKeys":["asBukkitBlock","fun asBukkitBlock(world: World): Block","dev.racci.minix.api.utils.minecraft.BlockPos.asBukkitBlock"]},{"name":"fun asBukkitChunk(world: World): Chunk","description":"dev.racci.minix.api.utils.minecraft.ChunkPos.asBukkitChunk","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-chunk-pos/as-bukkit-chunk.html","searchKeys":["asBukkitChunk","fun asBukkitChunk(world: World): Chunk","dev.racci.minix.api.utils.minecraft.ChunkPos.asBukkitChunk"]},{"name":"fun asBukkitLocation(world: World): Location","description":"dev.racci.minix.api.utils.minecraft.BlockPos.asBukkitLocation","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-block-pos/as-bukkit-location.html","searchKeys":["asBukkitLocation","fun asBukkitLocation(world: World): Location","dev.racci.minix.api.utils.minecraft.BlockPos.asBukkitLocation"]},{"name":"fun asChunkPos(): ChunkPos","description":"dev.racci.minix.api.utils.minecraft.BlockPos.asChunkPos","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-block-pos/as-chunk-pos.html","searchKeys":["asChunkPos","fun asChunkPos(): ChunkPos","dev.racci.minix.api.utils.minecraft.BlockPos.asChunkPos"]},{"name":"fun asLocationPos(): LocationPos","description":"dev.racci.minix.api.utils.minecraft.BlockPos.asLocationPos","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-block-pos/as-location-pos.html","searchKeys":["asLocationPos","fun asLocationPos(): LocationPos","dev.racci.minix.api.utils.minecraft.BlockPos.asLocationPos"]},{"name":"fun blockPosOf(x: Int, y: Int, z: Int): BlockPos","description":"dev.racci.minix.api.utils.minecraft.blockPosOf","location":"Minix-API/dev.racci.minix.api.utils.minecraft/block-pos-of.html","searchKeys":["blockPosOf","fun blockPosOf(x: Int, y: Int, z: Int): BlockPos","dev.racci.minix.api.utils.minecraft.blockPosOf"]},{"name":"fun broadcast(component: Component): Int","description":"dev.racci.minix.api.extensions.broadcast","location":"Minix-API/dev.racci.minix.api.extensions/broadcast.html","searchKeys":["broadcast","fun broadcast(component: Component): Int","dev.racci.minix.api.extensions.broadcast"]},{"name":"fun broadcast(players: Iterable<Player> = onlinePlayers, component: Player.() -> Component)","description":"dev.racci.minix.api.extensions.broadcast","location":"Minix-API/dev.racci.minix.api.extensions/broadcast.html","searchKeys":["broadcast","fun broadcast(players: Iterable<Player> = onlinePlayers, component: Player.() -> Component)","dev.racci.minix.api.extensions.broadcast"]},{"name":"fun calculatePythagoras(vararg positions: Pair<Double, Double>): Pair<Double, Double>","description":"dev.racci.minix.api.utils.minecraft.calculatePythagoras","location":"Minix-API/dev.racci.minix.api.utils.minecraft/calculate-pythagoras.html","searchKeys":["calculatePythagoras","fun calculatePythagoras(vararg positions: Pair<Double, Double>): Pair<Double, Double>","dev.racci.minix.api.utils.minecraft.calculatePythagoras"]},{"name":"fun callEvent(eventKClass: KClass<out Event>, builder: List<KParameter>.() -> Map<KParameter, Any?>): Boolean","description":"dev.racci.minix.api.extensions.callEvent","location":"Minix-API/dev.racci.minix.api.extensions/call-event.html","searchKeys":["callEvent","fun callEvent(eventKClass: KClass<out Event>, builder: List<KParameter>.() -> Map<KParameter, Any?>): Boolean","dev.racci.minix.api.extensions.callEvent"]},{"name":"fun cancel()","description":"dev.racci.minix.api.scheduler.CoroutineRunnable.cancel","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-runnable/cancel.html","searchKeys":["cancel","fun cancel()","dev.racci.minix.api.scheduler.CoroutineRunnable.cancel"]},{"name":"fun catch(vararg exceptionTypes: KClass<out Any>, callback: Exception.() -> Unit)","description":"dev.racci.minix.api.utils.UnsafeUtil.catch","location":"Minix-API/dev.racci.minix.api.utils/-unsafe-util/catch.html","searchKeys":["catch","fun catch(vararg exceptionTypes: KClass<out Any>, callback: Exception.() -> Unit)","dev.racci.minix.api.utils.UnsafeUtil.catch"]},{"name":"fun chunkPosOf(x: Int, z: Int): ChunkPos","description":"dev.racci.minix.api.utils.minecraft.chunkPosOf","location":"Minix-API/dev.racci.minix.api.utils.minecraft/chunk-pos-of.html","searchKeys":["chunkPosOf","fun chunkPosOf(x: Int, z: Int): ChunkPos","dev.racci.minix.api.utils.minecraft.chunkPosOf"]},{"name":"fun clear()","description":"dev.racci.minix.api.utils.collections.MultiMap.clear","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/clear.html","searchKeys":["clear","fun clear()","dev.racci.minix.api.utils.collections.MultiMap.clear"]},{"name":"fun clearQuiting()","description":"dev.racci.minix.api.utils.collections.OnlinePlayerMap.clearQuiting","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-map/clear-quiting.html","searchKeys":["clearQuiting","fun clearQuiting()","dev.racci.minix.api.utils.collections.OnlinePlayerMap.clearQuiting"]},{"name":"fun command(command: String): Boolean","description":"dev.racci.minix.api.extensions.Console.command","location":"Minix-API/dev.racci.minix.api.extensions/-console/command.html","searchKeys":["command","fun command(command: String): Boolean","dev.racci.minix.api.extensions.Console.command"]},{"name":"fun containsKey(key: Any?): Boolean","description":"dev.racci.minix.api.utils.collections.MultiMap.containsKey","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/contains-key.html","searchKeys":["containsKey","fun containsKey(key: Any?): Boolean","dev.racci.minix.api.utils.collections.MultiMap.containsKey"]},{"name":"fun convert(block: Block): LiquidType","description":"dev.racci.minix.api.events.LiquidType.Companion.convert","location":"Minix-API/dev.racci.minix.api.events/-liquid-type/-companion/convert.html","searchKeys":["convert","fun convert(block: Block): LiquidType","dev.racci.minix.api.events.LiquidType.Companion.convert"]},{"name":"fun convert(bucket: Material): LiquidType","description":"dev.racci.minix.api.events.LiquidType.Companion.convert","location":"Minix-API/dev.racci.minix.api.events/-liquid-type/-companion/convert.html","searchKeys":["convert","fun convert(bucket: Material): LiquidType","dev.racci.minix.api.events.LiquidType.Companion.convert"]},{"name":"fun convertRowColumnToSlot(pair: Pair<Int, Int>): Int","description":"dev.racci.minix.api.utils.minecraft.InventoryUtils.convertRowColumnToSlot","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-inventory-utils/convert-row-column-to-slot.html","searchKeys":["convertRowColumnToSlot","fun convertRowColumnToSlot(pair: Pair<Int, Int>): Int","dev.racci.minix.api.utils.minecraft.InventoryUtils.convertRowColumnToSlot"]},{"name":"fun convertRowColumnToSlot(row: Int, column: Int): Int","description":"dev.racci.minix.api.utils.minecraft.InventoryUtils.convertRowColumnToSlot","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-inventory-utils/convert-row-column-to-slot.html","searchKeys":["convertRowColumnToSlot","fun convertRowColumnToSlot(row: Int, column: Int): Int","dev.racci.minix.api.utils.minecraft.InventoryUtils.convertRowColumnToSlot"]},{"name":"fun convertSlotToRowColumn(slot: Int): Pair<Int, Int>","description":"dev.racci.minix.api.utils.minecraft.InventoryUtils.convertSlotToRowColumn","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-inventory-utils/convert-slot-to-row-column.html","searchKeys":["convertSlotToRowColumn","fun convertSlotToRowColumn(slot: Int): Pair<Int, Int>","dev.racci.minix.api.utils.minecraft.InventoryUtils.convertSlotToRowColumn"]},{"name":"fun danger(callback: Callback)","description":"dev.racci.minix.api.utils.UnsafeUtil.danger","location":"Minix-API/dev.racci.minix.api.utils/-unsafe-util/danger.html","searchKeys":["danger","fun danger(callback: Callback)","dev.racci.minix.api.utils.UnsafeUtil.danger"]},{"name":"fun exists(className: String): Boolean","description":"dev.racci.minix.api.utils.exists","location":"Minix-API/dev.racci.minix.api.utils/exists.html","searchKeys":["exists","fun exists(className: String): Boolean","dev.racci.minix.api.utils.exists"]},{"name":"fun finally(callback: Callback)","description":"dev.racci.minix.api.utils.UnsafeUtil.finally","location":"Minix-API/dev.racci.minix.api.utils/-unsafe-util/finally.html","searchKeys":["finally","fun finally(callback: Callback)","dev.racci.minix.api.utils.UnsafeUtil.finally"]},{"name":"fun forEach(block: (K, Collection<V>?) -> Unit)","description":"dev.racci.minix.api.utils.collections.MultiMap.forEach","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/for-each.html","searchKeys":["forEach","fun forEach(block: (K, Collection<V>?) -> Unit)","dev.racci.minix.api.utils.collections.MultiMap.forEach"]},{"name":"fun forEachIndexed(block: (index: Int, K, Collection<V>?) -> Unit)","description":"dev.racci.minix.api.utils.collections.MultiMap.forEachIndexed","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/for-each-indexed.html","searchKeys":["forEachIndexed","fun forEachIndexed(block: (index: Int, K, Collection<V>?) -> Unit)","dev.racci.minix.api.utils.collections.MultiMap.forEachIndexed"]},{"name":"fun formatRaw(placeholders: Map<String, String>)","description":"dev.racci.minix.api.utils.adventure.PartialComponent.formatRaw","location":"Minix-API/dev.racci.minix.api.utils.adventure/-partial-component/format-raw.html","searchKeys":["formatRaw","fun formatRaw(placeholders: Map<String, String>)","dev.racci.minix.api.utils.adventure.PartialComponent.formatRaw"]},{"name":"fun fromAttributeModifier(modifier: AttributeModifier): SerializableAttributeModifier","description":"dev.racci.minix.api.serializables.SerializableAttributeModifier.Companion.fromAttributeModifier","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-attribute-modifier/-companion/from-attribute-modifier.html","searchKeys":["fromAttributeModifier","fun fromAttributeModifier(modifier: AttributeModifier): SerializableAttributeModifier","dev.racci.minix.api.serializables.SerializableAttributeModifier.Companion.fromAttributeModifier"]},{"name":"fun fromGigabytes(gigabytes: Long): Data","description":"dev.racci.minix.api.utils.data.Data.Companion.fromGigabytes","location":"Minix-API/dev.racci.minix.api.utils.data/-data/-companion/from-gigabytes.html","searchKeys":["fromGigabytes","fun fromGigabytes(gigabytes: Long): Data","dev.racci.minix.api.utils.data.Data.Companion.fromGigabytes"]},{"name":"fun fromJava(log: Level): MinixLogger.LoggingLevel","description":"dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.Companion.fromJava","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-logging-level/-companion/from-java.html","searchKeys":["fromJava","fun fromJava(log: Level): MinixLogger.LoggingLevel","dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.Companion.fromJava"]},{"name":"fun fromKilobytes(kilobytes: Long): Data","description":"dev.racci.minix.api.utils.data.Data.Companion.fromKilobytes","location":"Minix-API/dev.racci.minix.api.utils.data/-data/-companion/from-kilobytes.html","searchKeys":["fromKilobytes","fun fromKilobytes(kilobytes: Long): Data","dev.racci.minix.api.utils.data.Data.Companion.fromKilobytes"]},{"name":"fun fromLog4J(log: Level): MinixLogger.LoggingLevel","description":"dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.Companion.fromLog4J","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-logging-level/-companion/from-log4-j.html","searchKeys":["fromLog4J","fun fromLog4J(log: Level): MinixLogger.LoggingLevel","dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.Companion.fromLog4J"]},{"name":"fun fromMegabytes(megabytes: Long): Data","description":"dev.racci.minix.api.utils.data.Data.Companion.fromMegabytes","location":"Minix-API/dev.racci.minix.api.utils.data/-data/-companion/from-megabytes.html","searchKeys":["fromMegabytes","fun fromMegabytes(megabytes: Long): Data","dev.racci.minix.api.utils.data.Data.Companion.fromMegabytes"]},{"name":"fun fromName(versionName: String): MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.fromName","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/from-name.html","searchKeys":["fromName","fun fromName(versionName: String): MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.fromName"]},{"name":"fun fromProtocol(protocolVersion: Int): MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.fromProtocol","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/from-protocol.html","searchKeys":["fromProtocol","fun fromProtocol(protocolVersion: Int): MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.fromProtocol"]},{"name":"fun fromSlF4(log: Level): MinixLogger.LoggingLevel","description":"dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.Companion.fromSlF4","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-logging-level/-companion/from-sl-f4.html","searchKeys":["fromSlF4","fun fromSlF4(log: Level): MinixLogger.LoggingLevel","dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.Companion.fromSlF4"]},{"name":"fun get(): T","description":"dev.racci.minix.api.utils.Closeable.get","location":"Minix-API/dev.racci.minix.api.utils/-closeable/get.html","searchKeys":["get","fun get(): T","dev.racci.minix.api.utils.Closeable.get"]},{"name":"fun get(force: Boolean = false): T?","description":"dev.racci.minix.api.utils.Loadable.get","location":"Minix-API/dev.racci.minix.api.utils/-loadable/get.html","searchKeys":["get","fun get(force: Boolean = false): T?","dev.racci.minix.api.utils.Loadable.get"]},{"name":"fun getBow(arrow: Arrow): ItemStack?","description":"dev.racci.minix.api.utils.minecraft.ProjectileUtils.getBow","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-projectile-utils/get-bow.html","searchKeys":["getBow","fun getBow(arrow: Arrow): ItemStack?","dev.racci.minix.api.utils.minecraft.ProjectileUtils.getBow"]},{"name":"fun getBuildParameter(tags: List<String>, parameter: String): Long","description":"dev.racci.minix.api.updater.Version.Companion.getBuildParameter","location":"Minix-API/dev.racci.minix.api.updater/-version/-companion/get-build-parameter.html","searchKeys":["getBuildParameter","fun getBuildParameter(tags: List<String>, parameter: String): Long","dev.racci.minix.api.updater.Version.Companion.getBuildParameter"]},{"name":"fun getHandlerList(): HandlerList","description":"dev.racci.minix.api.events.PlayerDoubleLeftClickEvent.Companion.getHandlerList","location":"Minix-API/dev.racci.minix.api.events/-player-double-left-click-event/-companion/get-handler-list.html","searchKeys":["getHandlerList","fun getHandlerList(): HandlerList","dev.racci.minix.api.events.PlayerDoubleLeftClickEvent.Companion.getHandlerList"]},{"name":"fun getHandlerList(): HandlerList","description":"dev.racci.minix.api.events.PlayerDoubleOffhandEvent.Companion.getHandlerList","location":"Minix-API/dev.racci.minix.api.events/-player-double-offhand-event/-companion/get-handler-list.html","searchKeys":["getHandlerList","fun getHandlerList(): HandlerList","dev.racci.minix.api.events.PlayerDoubleOffhandEvent.Companion.getHandlerList"]},{"name":"fun getHandlerList(): HandlerList","description":"dev.racci.minix.api.events.PlayerDoubleRightClickEvent.Companion.getHandlerList","location":"Minix-API/dev.racci.minix.api.events/-player-double-right-click-event/-companion/get-handler-list.html","searchKeys":["getHandlerList","fun getHandlerList(): HandlerList","dev.racci.minix.api.events.PlayerDoubleRightClickEvent.Companion.getHandlerList"]},{"name":"fun getHandlerList(): HandlerList","description":"dev.racci.minix.api.events.PlayerEnterLiquidEvent.Companion.getHandlerList","location":"Minix-API/dev.racci.minix.api.events/-player-enter-liquid-event/-companion/get-handler-list.html","searchKeys":["getHandlerList","fun getHandlerList(): HandlerList","dev.racci.minix.api.events.PlayerEnterLiquidEvent.Companion.getHandlerList"]},{"name":"fun getHandlerList(): HandlerList","description":"dev.racci.minix.api.events.PlayerExitLiquidEvent.Companion.getHandlerList","location":"Minix-API/dev.racci.minix.api.events/-player-exit-liquid-event/-companion/get-handler-list.html","searchKeys":["getHandlerList","fun getHandlerList(): HandlerList","dev.racci.minix.api.events.PlayerExitLiquidEvent.Companion.getHandlerList"]},{"name":"fun getHandlerList(): HandlerList","description":"dev.racci.minix.api.events.PlayerLeftClickEvent.Companion.getHandlerList","location":"Minix-API/dev.racci.minix.api.events/-player-left-click-event/-companion/get-handler-list.html","searchKeys":["getHandlerList","fun getHandlerList(): HandlerList","dev.racci.minix.api.events.PlayerLeftClickEvent.Companion.getHandlerList"]},{"name":"fun getHandlerList(): HandlerList","description":"dev.racci.minix.api.events.PlayerLightEvent.Companion.getHandlerList","location":"Minix-API/dev.racci.minix.api.events/-player-light-event/-companion/get-handler-list.html","searchKeys":["getHandlerList","fun getHandlerList(): HandlerList","dev.racci.minix.api.events.PlayerLightEvent.Companion.getHandlerList"]},{"name":"fun getHandlerList(): HandlerList","description":"dev.racci.minix.api.events.PlayerMoveFullXYZEvent.Companion.getHandlerList","location":"Minix-API/dev.racci.minix.api.events/-player-move-full-x-y-z-event/-companion/get-handler-list.html","searchKeys":["getHandlerList","fun getHandlerList(): HandlerList","dev.racci.minix.api.events.PlayerMoveFullXYZEvent.Companion.getHandlerList"]},{"name":"fun getHandlerList(): HandlerList","description":"dev.racci.minix.api.events.PlayerMoveXYZEvent.Companion.getHandlerList","location":"Minix-API/dev.racci.minix.api.events/-player-move-x-y-z-event/-companion/get-handler-list.html","searchKeys":["getHandlerList","fun getHandlerList(): HandlerList","dev.racci.minix.api.events.PlayerMoveXYZEvent.Companion.getHandlerList"]},{"name":"fun getHandlerList(): HandlerList","description":"dev.racci.minix.api.events.PlayerOffhandEvent.Companion.getHandlerList","location":"Minix-API/dev.racci.minix.api.events/-player-offhand-event/-companion/get-handler-list.html","searchKeys":["getHandlerList","fun getHandlerList(): HandlerList","dev.racci.minix.api.events.PlayerOffhandEvent.Companion.getHandlerList"]},{"name":"fun getHandlerList(): HandlerList","description":"dev.racci.minix.api.events.PlayerRightClickEvent.Companion.getHandlerList","location":"Minix-API/dev.racci.minix.api.events/-player-right-click-event/-companion/get-handler-list.html","searchKeys":["getHandlerList","fun getHandlerList(): HandlerList","dev.racci.minix.api.events.PlayerRightClickEvent.Companion.getHandlerList"]},{"name":"fun getHandlerList(): HandlerList","description":"dev.racci.minix.api.events.PlayerShiftDoubleLeftClickEvent.Companion.getHandlerList","location":"Minix-API/dev.racci.minix.api.events/-player-shift-double-left-click-event/-companion/get-handler-list.html","searchKeys":["getHandlerList","fun getHandlerList(): HandlerList","dev.racci.minix.api.events.PlayerShiftDoubleLeftClickEvent.Companion.getHandlerList"]},{"name":"fun getHandlerList(): HandlerList","description":"dev.racci.minix.api.events.PlayerShiftDoubleOffhandEvent.Companion.getHandlerList","location":"Minix-API/dev.racci.minix.api.events/-player-shift-double-offhand-event/-companion/get-handler-list.html","searchKeys":["getHandlerList","fun getHandlerList(): HandlerList","dev.racci.minix.api.events.PlayerShiftDoubleOffhandEvent.Companion.getHandlerList"]},{"name":"fun getHandlerList(): HandlerList","description":"dev.racci.minix.api.events.PlayerShiftDoubleRightClickEvent.Companion.getHandlerList","location":"Minix-API/dev.racci.minix.api.events/-player-shift-double-right-click-event/-companion/get-handler-list.html","searchKeys":["getHandlerList","fun getHandlerList(): HandlerList","dev.racci.minix.api.events.PlayerShiftDoubleRightClickEvent.Companion.getHandlerList"]},{"name":"fun getHandlerList(): HandlerList","description":"dev.racci.minix.api.events.PlayerShiftLeftClickEvent.Companion.getHandlerList","location":"Minix-API/dev.racci.minix.api.events/-player-shift-left-click-event/-companion/get-handler-list.html","searchKeys":["getHandlerList","fun getHandlerList(): HandlerList","dev.racci.minix.api.events.PlayerShiftLeftClickEvent.Companion.getHandlerList"]},{"name":"fun getHandlerList(): HandlerList","description":"dev.racci.minix.api.events.PlayerShiftOffhandEvent.Companion.getHandlerList","location":"Minix-API/dev.racci.minix.api.events/-player-shift-offhand-event/-companion/get-handler-list.html","searchKeys":["getHandlerList","fun getHandlerList(): HandlerList","dev.racci.minix.api.events.PlayerShiftOffhandEvent.Companion.getHandlerList"]},{"name":"fun getHandlerList(): HandlerList","description":"dev.racci.minix.api.events.PlayerShiftRightClickEvent.Companion.getHandlerList","location":"Minix-API/dev.racci.minix.api.events/-player-shift-right-click-event/-companion/get-handler-list.html","searchKeys":["getHandlerList","fun getHandlerList(): HandlerList","dev.racci.minix.api.events.PlayerShiftRightClickEvent.Companion.getHandlerList"]},{"name":"fun getHandlerList(): HandlerList","description":"dev.racci.minix.api.events.PlayerUnloadEvent.Companion.getHandlerList","location":"Minix-API/dev.racci.minix.api.events/-player-unload-event/-companion/get-handler-list.html","searchKeys":["getHandlerList","fun getHandlerList(): HandlerList","dev.racci.minix.api.events.PlayerUnloadEvent.Companion.getHandlerList"]},{"name":"fun getHandlerList(): HandlerList","description":"dev.racci.minix.api.events.WorldDayEvent.Companion.getHandlerList","location":"Minix-API/dev.racci.minix.api.events/-world-day-event/-companion/get-handler-list.html","searchKeys":["getHandlerList","fun getHandlerList(): HandlerList","dev.racci.minix.api.events.WorldDayEvent.Companion.getHandlerList"]},{"name":"fun getHandlerList(): HandlerList","description":"dev.racci.minix.api.events.WorldNightEvent.Companion.getHandlerList","location":"Minix-API/dev.racci.minix.api.events/-world-night-event/-companion/get-handler-list.html","searchKeys":["getHandlerList","fun getHandlerList(): HandlerList","dev.racci.minix.api.events.WorldNightEvent.Companion.getHandlerList"]},{"name":"fun getKoin(): Koin","description":"dev.racci.minix.api.utils.getKoin","location":"Minix-API/dev.racci.minix.api.utils/get-koin.html","searchKeys":["getKoin","fun getKoin(): Koin","dev.racci.minix.api.utils.getKoin"]},{"name":"fun getMultiplierFromPercent(percent: Double): Double","description":"dev.racci.minix.api.utils.primitive.MathUtils.getMultiplierFromPercent","location":"Minix-API/dev.racci.minix.api.utils.primitive/-math-utils/get-multiplier-from-percent.html","searchKeys":["getMultiplierFromPercent","fun getMultiplierFromPercent(percent: Double): Double","dev.racci.minix.api.utils.primitive.MathUtils.getMultiplierFromPercent"]},{"name":"fun getOpposite(face: BlockFace): BlockFace","description":"dev.racci.minix.api.utils.minecraft.BlockUtils.getOpposite","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-block-utils/get-opposite.html","searchKeys":["getOpposite","fun getOpposite(face: BlockFace): BlockFace","dev.racci.minix.api.utils.minecraft.BlockUtils.getOpposite"]},{"name":"fun getPlacedAgainstFace(existing: Block, newBlock: Block?): BlockFace","description":"dev.racci.minix.api.utils.minecraft.BlockUtils.getPlacedAgainstFace","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-block-utils/get-placed-against-face.html","searchKeys":["getPlacedAgainstFace","fun getPlacedAgainstFace(existing: Block, newBlock: Block?): BlockFace","dev.racci.minix.api.utils.minecraft.BlockUtils.getPlacedAgainstFace"]},{"name":"fun getService(): E","description":"dev.racci.minix.api.extension.Extension.ExtensionCompanion.getService","location":"Minix-API/dev.racci.minix.api.extension/-extension/-extension-companion/get-service.html","searchKeys":["getService","fun getService(): E","dev.racci.minix.api.extension.Extension.ExtensionCompanion.getService"]},{"name":"fun getString(itemStack: ItemStack, key: String): String?","description":"dev.racci.minix.api.utils.minecraft.ItemNBT.getString","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-item-n-b-t/get-string.html","searchKeys":["getString","fun getString(itemStack: ItemStack, key: String): String?","dev.racci.minix.api.utils.minecraft.ItemNBT.getString"]},{"name":"fun getSupportingBlock(directional: Block): Block","description":"dev.racci.minix.api.utils.minecraft.BlockUtils.getSupportingBlock","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-block-utils/get-supporting-block.html","searchKeys":["getSupportingBlock","fun getSupportingBlock(directional: Block): Block","dev.racci.minix.api.utils.minecraft.BlockUtils.getSupportingBlock"]},{"name":"fun getVein(start: Block, materials: List<Material>, limit: Int): ArrayList<Block>","description":"dev.racci.minix.api.utils.minecraft.BlockUtils.getVein","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-block-utils/get-vein.html","searchKeys":["getVein","fun getVein(start: Block, materials: List<Material>, limit: Int): ArrayList<Block>","dev.racci.minix.api.utils.minecraft.BlockUtils.getVein"]},{"name":"fun hasExplicitlyChangedBlock(): Boolean","description":"dev.racci.minix.api.events.PlayerMoveXYZEvent.hasExplicitlyChangedBlock","location":"Minix-API/dev.racci.minix.api.events/-player-move-x-y-z-event/has-explicitly-changed-block.html","searchKeys":["hasExplicitlyChangedBlock","fun hasExplicitlyChangedBlock(): Boolean","dev.racci.minix.api.events.PlayerMoveXYZEvent.hasExplicitlyChangedBlock"]},{"name":"fun hasOwner(entity: Entity): Boolean","description":"dev.racci.minix.api.utils.minecraft.TameUtils.hasOwner","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-tame-utils/has-owner.html","searchKeys":["hasOwner","fun hasOwner(entity: Entity): Boolean","dev.racci.minix.api.utils.minecraft.TameUtils.hasOwner"]},{"name":"fun humanReadableSize(): String","description":"dev.racci.minix.api.utils.data.Data.humanReadableSize","location":"Minix-API/dev.racci.minix.api.utils.data/-data/human-readable-size.html","searchKeys":["humanReadableSize","fun humanReadableSize(): String","dev.racci.minix.api.utils.data.Data.humanReadableSize"]},{"name":"fun inject(): Lazy<E>","description":"dev.racci.minix.api.extension.Extension.ExtensionCompanion.inject","location":"Minix-API/dev.racci.minix.api.extension/-extension/-extension-companion/inject.html","searchKeys":["inject","fun inject(): Lazy<E>","dev.racci.minix.api.extension.Extension.ExtensionCompanion.inject"]},{"name":"fun isEnabled(level: MinixLogger.LoggingLevel): Boolean","description":"dev.racci.minix.api.plugin.logger.MinixLogger.isEnabled","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/is-enabled.html","searchKeys":["isEnabled","fun isEnabled(level: MinixLogger.LoggingLevel): Boolean","dev.racci.minix.api.plugin.logger.MinixLogger.isEnabled"]},{"name":"fun isLiquid(block: Block): Int","description":"dev.racci.minix.api.utils.minecraft.BlockUtils.isLiquid","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-block-utils/is-liquid.html","searchKeys":["isLiquid","fun isLiquid(block: Block): Int","dev.racci.minix.api.utils.minecraft.BlockUtils.isLiquid"]},{"name":"fun isOwner(player: Player, entity: Entity): Boolean","description":"dev.racci.minix.api.utils.minecraft.TameUtils.isOwner","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-tame-utils/is-owner.html","searchKeys":["isOwner","fun isOwner(player: Player, entity: Entity): Boolean","dev.racci.minix.api.utils.minecraft.TameUtils.isOwner"]},{"name":"fun isSameMajorVersion(other: MCVersion): Boolean","description":"dev.racci.minix.api.utils.minecraft.MCVersion.isSameMajorVersion","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/is-same-major-version.html","searchKeys":["isSameMajorVersion","fun isSameMajorVersion(other: MCVersion): Boolean","dev.racci.minix.api.utils.minecraft.MCVersion.isSameMajorVersion"]},{"name":"fun isTamed(entity: Entity): Boolean","description":"dev.racci.minix.api.utils.minecraft.TameUtils.isTamed","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-tame-utils/is-tamed.html","searchKeys":["isTamed","fun isTamed(entity: Entity): Boolean","dev.racci.minix.api.utils.minecraft.TameUtils.isTamed"]},{"name":"fun load(force: Boolean = false): T?","description":"dev.racci.minix.api.utils.Loadable.load","location":"Minix-API/dev.racci.minix.api.utils/-loadable/load.html","searchKeys":["load","fun load(force: Boolean = false): T?","dev.racci.minix.api.utils.Loadable.load"]},{"name":"fun loadModule(createdAtStart: Boolean = false, moduleDeclaration: ModuleDeclaration): Module","description":"dev.racci.minix.api.utils.loadModule","location":"Minix-API/dev.racci.minix.api.utils/load-module.html","searchKeys":["loadModule","fun loadModule(createdAtStart: Boolean = false, moduleDeclaration: ModuleDeclaration): Module","dev.racci.minix.api.utils.loadModule"]},{"name":"fun locationPosOf(x: Double, y: Double, z: Double, yaw: Float = 0.0f, pitch: Float = 0.0f): LocationPos","description":"dev.racci.minix.api.utils.minecraft.locationPosOf","location":"Minix-API/dev.racci.minix.api.utils.minecraft/location-pos-of.html","searchKeys":["locationPosOf","fun locationPosOf(x: Double, y: Double, z: Double, yaw: Float = 0.0f, pitch: Float = 0.0f): LocationPos","dev.racci.minix.api.utils.minecraft.locationPosOf"]},{"name":"fun matchPlayer(name: String): List<Player>","description":"dev.racci.minix.api.extensions.matchPlayer","location":"Minix-API/dev.racci.minix.api.extensions/match-player.html","searchKeys":["matchPlayer","fun matchPlayer(name: String): List<Player>","dev.racci.minix.api.extensions.matchPlayer"]},{"name":"fun multiplyByPercent(value: Double, percent: Double): Double","description":"dev.racci.minix.api.utils.primitive.MathUtils.multiplyByPercent","location":"Minix-API/dev.racci.minix.api.utils.primitive/-math-utils/multiply-by-percent.html","searchKeys":["multiplyByPercent","fun multiplyByPercent(value: Double, percent: Double): Double","dev.racci.minix.api.utils.primitive.MathUtils.multiplyByPercent"]},{"name":"fun named(name: String): CoroutineRunnable","description":"dev.racci.minix.api.scheduler.CoroutineRunnable.named","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-runnable/named.html","searchKeys":["named","fun named(name: String): CoroutineRunnable","dev.racci.minix.api.scheduler.CoroutineRunnable.named"]},{"name":"fun now(): Instant","description":"dev.racci.minix.api.utils.now","location":"Minix-API/dev.racci.minix.api.utils/now.html","searchKeys":["now","fun now(): Instant","dev.racci.minix.api.utils.now"]},{"name":"fun of(raw: String): PartialComponent","description":"dev.racci.minix.api.utils.adventure.PartialComponent.Companion.of","location":"Minix-API/dev.racci.minix.api.utils.adventure/-partial-component/-companion/of.html","searchKeys":["of","fun of(raw: String): PartialComponent","dev.racci.minix.api.utils.adventure.PartialComponent.Companion.of"]},{"name":"fun offlinePlayer(name: String): OfflinePlayer","description":"dev.racci.minix.api.extensions.offlinePlayer","location":"Minix-API/dev.racci.minix.api.extensions/offline-player.html","searchKeys":["offlinePlayer","fun offlinePlayer(name: String): OfflinePlayer","dev.racci.minix.api.extensions.offlinePlayer"]},{"name":"fun offlinePlayer(uuid: UUID): OfflinePlayer","description":"dev.racci.minix.api.extensions.offlinePlayer","location":"Minix-API/dev.racci.minix.api.extensions/offline-player.html","searchKeys":["offlinePlayer","fun offlinePlayer(uuid: UUID): OfflinePlayer","dev.racci.minix.api.extensions.offlinePlayer"]},{"name":"fun onlinePlayer(name: String): Player?","description":"dev.racci.minix.api.extensions.onlinePlayer","location":"Minix-API/dev.racci.minix.api.extensions/online-player.html","searchKeys":["onlinePlayer","fun onlinePlayer(name: String): Player?","dev.racci.minix.api.extensions.onlinePlayer"]},{"name":"fun onlinePlayer(uuid: UUID): Player?","description":"dev.racci.minix.api.extensions.onlinePlayer","location":"Minix-API/dev.racci.minix.api.extensions/online-player.html","searchKeys":["onlinePlayer","fun onlinePlayer(uuid: UUID): Player?","dev.racci.minix.api.extensions.onlinePlayer"]},{"name":"fun onlinePlayerListOf(vararg pair: Pair<Player, WhenPlayerQuitCollectionCallback>, plugin: MinixPlugin): OnlinePlayerList","description":"dev.racci.minix.api.utils.collections.onlinePlayerListOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-list-of.html","searchKeys":["onlinePlayerListOf","fun onlinePlayerListOf(vararg pair: Pair<Player, WhenPlayerQuitCollectionCallback>, plugin: MinixPlugin): OnlinePlayerList","dev.racci.minix.api.utils.collections.onlinePlayerListOf"]},{"name":"fun onlinePlayerListOf(vararg players: Player, plugin: MinixPlugin): OnlinePlayerList","description":"dev.racci.minix.api.utils.collections.onlinePlayerListOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-list-of.html","searchKeys":["onlinePlayerListOf","fun onlinePlayerListOf(vararg players: Player, plugin: MinixPlugin): OnlinePlayerList","dev.racci.minix.api.utils.collections.onlinePlayerListOf"]},{"name":"fun onlinePlayerSetOf(vararg pair: Pair<Player, WhenPlayerQuitCollectionCallback>, plugin: MinixPlugin): OnlinePlayerSet","description":"dev.racci.minix.api.utils.collections.onlinePlayerSetOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-set-of.html","searchKeys":["onlinePlayerSetOf","fun onlinePlayerSetOf(vararg pair: Pair<Player, WhenPlayerQuitCollectionCallback>, plugin: MinixPlugin): OnlinePlayerSet","dev.racci.minix.api.utils.collections.onlinePlayerSetOf"]},{"name":"fun onlinePlayerSetOf(vararg players: Player, plugin: MinixPlugin): OnlinePlayerSet","description":"dev.racci.minix.api.utils.collections.onlinePlayerSetOf","location":"Minix-API/dev.racci.minix.api.utils.collections/online-player-set-of.html","searchKeys":["onlinePlayerSetOf","fun onlinePlayerSetOf(vararg players: Player, plugin: MinixPlugin): OnlinePlayerSet","dev.racci.minix.api.utils.collections.onlinePlayerSetOf"]},{"name":"fun parseLegacy(list: List<String>?): List<Component>","description":"dev.racci.minix.api.utils.primitive.LegacyUtils.parseLegacy","location":"Minix-API/dev.racci.minix.api.utils.primitive/-legacy-utils/parse-legacy.html","searchKeys":["parseLegacy","fun parseLegacy(list: List<String>?): List<Component>","dev.racci.minix.api.utils.primitive.LegacyUtils.parseLegacy"]},{"name":"fun parseLegacy(string: String): Component","description":"dev.racci.minix.api.utils.primitive.LegacyUtils.parseLegacy","location":"Minix-API/dev.racci.minix.api.utils.primitive/-legacy-utils/parse-legacy.html","searchKeys":["parseLegacy","fun parseLegacy(string: String): Component","dev.racci.minix.api.utils.primitive.LegacyUtils.parseLegacy"]},{"name":"fun player(name: String): Player?","description":"dev.racci.minix.api.extensions.player","location":"Minix-API/dev.racci.minix.api.extensions/player.html","searchKeys":["player","fun player(name: String): Player?","dev.racci.minix.api.extensions.player"]},{"name":"fun player(uuid: UUID): Player?","description":"dev.racci.minix.api.extensions.player","location":"Minix-API/dev.racci.minix.api.extensions/player.html","searchKeys":["player","fun player(uuid: UUID): Player?","dev.racci.minix.api.extensions.player"]},{"name":"fun playerExact(name: String): Player?","description":"dev.racci.minix.api.extensions.playerExact","location":"Minix-API/dev.racci.minix.api.extensions/player-exact.html","searchKeys":["playerExact","fun playerExact(name: String): Player?","dev.racci.minix.api.extensions.playerExact"]},{"name":"fun put(key: K, value: V)","description":"dev.racci.minix.api.utils.collections.MultiMap.put","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/put.html","searchKeys":["put","fun put(key: K, value: V)","dev.racci.minix.api.utils.collections.MultiMap.put"]},{"name":"fun put(key: Player, value: V, whenPlayerQuit: WhenPlayerQuitMapCallback<V>): V?","description":"dev.racci.minix.api.utils.collections.OnlinePlayerMap.put","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-map/put.html","searchKeys":["put","fun put(key: Player, value: V, whenPlayerQuit: WhenPlayerQuitMapCallback<V>): V?","dev.racci.minix.api.utils.collections.OnlinePlayerMap.put"]},{"name":"fun putIfAbsent(key: K, value: V)","description":"dev.racci.minix.api.utils.collections.MultiMap.putIfAbsent","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/put-if-absent.html","searchKeys":["putIfAbsent","fun putIfAbsent(key: K, value: V)","dev.racci.minix.api.utils.collections.MultiMap.putIfAbsent"]},{"name":"fun quit(player: Player)","description":"dev.racci.minix.api.utils.collections.OnlinePlayerMap.quit","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-map/quit.html","searchKeys":["quit","fun quit(player: Player)","dev.racci.minix.api.utils.collections.OnlinePlayerMap.quit"]},{"name":"fun recipesFor(item: ItemStack): List<Recipe>","description":"dev.racci.minix.api.extensions.recipesFor","location":"Minix-API/dev.racci.minix.api.extensions/recipes-for.html","searchKeys":["recipesFor","fun recipesFor(item: ItemStack): List<Recipe>","dev.racci.minix.api.extensions.recipesFor"]},{"name":"fun reloadWhitelist()","description":"dev.racci.minix.api.extensions.reloadWhitelist","location":"Minix-API/dev.racci.minix.api.extensions/reload-whitelist.html","searchKeys":["reloadWhitelist","fun reloadWhitelist()","dev.racci.minix.api.extensions.reloadWhitelist"]},{"name":"fun remove(key: Any?): Collection<V>?","description":"dev.racci.minix.api.utils.collections.MultiMap.remove","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/remove.html","searchKeys":["remove","fun remove(key: Any?): Collection<V>?","dev.racci.minix.api.utils.collections.MultiMap.remove"]},{"name":"fun remove(key: K, value: V): Boolean","description":"dev.racci.minix.api.utils.collections.MultiMap.remove","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/remove.html","searchKeys":["remove","fun remove(key: K, value: V): Boolean","dev.racci.minix.api.utils.collections.MultiMap.remove"]},{"name":"fun removeTag(itemStack: ItemStack, key: String): ItemStack?","description":"dev.racci.minix.api.utils.minecraft.ItemNBT.removeTag","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-item-n-b-t/remove-tag.html","searchKeys":["removeTag","fun removeTag(itemStack: ItemStack, key: String): ItemStack?","dev.racci.minix.api.utils.minecraft.ItemNBT.removeTag"]},{"name":"fun replace(key: K, oldValue: V, newValue: V): Boolean","description":"dev.racci.minix.api.utils.collections.MultiMap.replace","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/replace.html","searchKeys":["replace","fun replace(key: K, oldValue: V, newValue: V): Boolean","dev.racci.minix.api.utils.collections.MultiMap.replace"]},{"name":"fun runAsyncTask(plugin: MinixPlugin): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineRunnable.runAsyncTask","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-runnable/run-async-task.html","searchKeys":["runAsyncTask","fun runAsyncTask(plugin: MinixPlugin): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineRunnable.runAsyncTask"]},{"name":"fun runAsyncTaskLater(plugin: MinixPlugin, delay: Duration): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineRunnable.runAsyncTaskLater","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-runnable/run-async-task-later.html","searchKeys":["runAsyncTaskLater","fun runAsyncTaskLater(plugin: MinixPlugin, delay: Duration): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineRunnable.runAsyncTaskLater"]},{"name":"fun runAsyncTaskTimer(plugin: MinixPlugin, delay: Duration, period: Duration): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineRunnable.runAsyncTaskTimer","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-runnable/run-async-task-timer.html","searchKeys":["runAsyncTaskTimer","fun runAsyncTaskTimer(plugin: MinixPlugin, delay: Duration, period: Duration): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineRunnable.runAsyncTaskTimer"]},{"name":"fun runTask(plugin: MinixPlugin): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineRunnable.runTask","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-runnable/run-task.html","searchKeys":["runTask","fun runTask(plugin: MinixPlugin): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineRunnable.runTask"]},{"name":"fun runTaskLater(plugin: MinixPlugin, delay: Duration): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineRunnable.runTaskLater","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-runnable/run-task-later.html","searchKeys":["runTaskLater","fun runTaskLater(plugin: MinixPlugin, delay: Duration): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineRunnable.runTaskLater"]},{"name":"fun runTaskTimer(plugin: MinixPlugin, delay: Duration, period: Duration): CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineRunnable.runTaskTimer","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-runnable/run-task-timer.html","searchKeys":["runTaskTimer","fun runTaskTimer(plugin: MinixPlugin, delay: Duration, period: Duration): CoroutineTask","dev.racci.minix.api.scheduler.CoroutineRunnable.runTaskTimer"]},{"name":"fun setBoolean(itemStack: ItemStack, key: String, value: Boolean): ItemStack?","description":"dev.racci.minix.api.utils.minecraft.ItemNBT.setBoolean","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-item-n-b-t/set-boolean.html","searchKeys":["setBoolean","fun setBoolean(itemStack: ItemStack, key: String, value: Boolean): ItemStack?","dev.racci.minix.api.utils.minecraft.ItemNBT.setBoolean"]},{"name":"fun setLevel(level: MinixLogger.LoggingLevel): MinixLogger.LoggingLevel","description":"dev.racci.minix.api.plugin.logger.MinixLogger.setLevel","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/set-level.html","searchKeys":["setLevel","fun setLevel(level: MinixLogger.LoggingLevel): MinixLogger.LoggingLevel","dev.racci.minix.api.plugin.logger.MinixLogger.setLevel"]},{"name":"fun setString(itemStack: ItemStack, key: String, value: String): ItemStack?","description":"dev.racci.minix.api.utils.minecraft.ItemNBT.setString","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-item-n-b-t/set-string.html","searchKeys":["setString","fun setString(itemStack: ItemStack, key: String, value: String): ItemStack?","dev.racci.minix.api.utils.minecraft.ItemNBT.setString"]},{"name":"fun size(): Int","description":"dev.racci.minix.api.utils.collections.MultiMap.size","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/size.html","searchKeys":["size","fun size(): Int","dev.racci.minix.api.utils.collections.MultiMap.size"]},{"name":"fun size(file: File, maxDepth: Int = Int.MAX_VALUE): Long","description":"dev.racci.minix.api.utils.FileSystemUtils.size","location":"Minix-API/dev.racci.minix.api.utils/-file-system-utils/size.html","searchKeys":["size","fun size(file: File, maxDepth: Int = Int.MAX_VALUE): Long","dev.racci.minix.api.utils.FileSystemUtils.size"]},{"name":"fun toAttributeModifier(): AttributeModifier","description":"dev.racci.minix.api.serializables.SerializableAttributeModifier.toAttributeModifier","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-attribute-modifier/to-attribute-modifier.html","searchKeys":["toAttributeModifier","fun toAttributeModifier(): AttributeModifier","dev.racci.minix.api.serializables.SerializableAttributeModifier.toAttributeModifier"]},{"name":"fun toCraftingRecipe(): Recipe","description":"dev.racci.minix.api.serializables.recipes.SerializableRecipe.toCraftingRecipe","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-serializable-recipe/to-crafting-recipe.html","searchKeys":["toCraftingRecipe","fun toCraftingRecipe(): Recipe","dev.racci.minix.api.serializables.recipes.SerializableRecipe.toCraftingRecipe"]},{"name":"fun toInt(): Int","description":"dev.racci.minix.api.updater.Version.toInt","location":"Minix-API/dev.racci.minix.api.updater/-version/to-int.html","searchKeys":["toInt","fun toInt(): Int","dev.racci.minix.api.updater.Version.toInt"]},{"name":"fun toItemStack(item: ItemStack = ItemStack(type ?: Material.AIR)): ItemStack","description":"dev.racci.minix.api.serializables.SerializableItemStack.toItemStack","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-item-stack/to-item-stack.html","searchKeys":["toItemStack","fun toItemStack(item: ItemStack = ItemStack(type ?: Material.AIR)): ItemStack","dev.racci.minix.api.serializables.SerializableItemStack.toItemStack"]},{"name":"fun toJava(): Level","description":"dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.toJava","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-logging-level/to-java.html","searchKeys":["toJava","fun toJava(): Level","dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.toJava"]},{"name":"fun toLog4J(): Level","description":"dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.toLog4J","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-logging-level/to-log4-j.html","searchKeys":["toLog4J","fun toLog4J(): Level","dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.toLog4J"]},{"name":"fun toRoman(number: Int): String?","description":"dev.racci.minix.api.utils.primitive.NumberUtils.toRoman","location":"Minix-API/dev.racci.minix.api.utils.primitive/-number-utils/to-roman.html","searchKeys":["toRoman","fun toRoman(number: Int): String?","dev.racci.minix.api.utils.primitive.NumberUtils.toRoman"]},{"name":"fun toSlF4(): Level","description":"dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.toSlF4","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-logging-level/to-sl-f4.html","searchKeys":["toSlF4","fun toSlF4(): Level","dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.toSlF4"]},{"name":"fun toVec3(): Vec3","description":"dev.racci.minix.api.utils.minecraft.BlockPos.toVec3","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-block-pos/to-vec3.html","searchKeys":["toVec3","fun toVec3(): Vec3","dev.racci.minix.api.utils.minecraft.BlockPos.toVec3"]},{"name":"fun unload(): Boolean","description":"dev.racci.minix.api.utils.Loadable.unload","location":"Minix-API/dev.racci.minix.api.utils/-loadable/unload.html","searchKeys":["unload","fun unload(): Boolean","dev.racci.minix.api.utils.Loadable.unload"]},{"name":"fun valueOf(protocolVersion: Int): MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.valueOf","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/value-of.html","searchKeys":["valueOf","fun valueOf(protocolVersion: Int): MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.valueOf"]},{"name":"fun valueOf(versionName: String): MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.valueOf","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/value-of.html","searchKeys":["valueOf","fun valueOf(versionName: String): MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.valueOf"]},{"name":"fun world(name: String): World?","description":"dev.racci.minix.api.extensions.world","location":"Minix-API/dev.racci.minix.api.extensions/world.html","searchKeys":["world","fun world(name: String): World?","dev.racci.minix.api.extensions.world"]},{"name":"infix fun <F, S, T> Pair<F, S>.to(other: T): Triple<F, S, T>","description":"dev.racci.minix.api.utils.kotlin.to","location":"Minix-API/dev.racci.minix.api.utils.kotlin/to.html","searchKeys":["to","infix fun <F, S, T> Pair<F, S>.to(other: T): Triple<F, S, T>","dev.racci.minix.api.utils.kotlin.to"]},{"name":"infix fun <T> T.and(other: T): PersistentList<T>","description":"dev.racci.minix.api.utils.kotlin.and","location":"Minix-API/dev.racci.minix.api.utils.kotlin/and.html","searchKeys":["and","infix fun <T> T.and(other: T): PersistentList<T>","dev.racci.minix.api.utils.kotlin.and"]},{"name":"infix fun Component.message(audience: Audience)","description":"dev.racci.minix.api.extensions.message","location":"Minix-API/dev.racci.minix.api.extensions/message.html","searchKeys":["message","infix fun Component.message(audience: Audience)","dev.racci.minix.api.extensions.message"]},{"name":"infix fun Component.message(recipient: CommandSender)","description":"dev.racci.minix.api.extensions.message","location":"Minix-API/dev.racci.minix.api.extensions/message.html","searchKeys":["message","infix fun Component.message(recipient: CommandSender)","dev.racci.minix.api.extensions.message"]},{"name":"infix fun KClass<*>.doesOverride(function: KFunction<*>): Boolean","description":"dev.racci.minix.api.utils.kotlin.doesOverride","location":"Minix-API/dev.racci.minix.api.utils.kotlin/does-override.html","searchKeys":["doesOverride","infix fun KClass<*>.doesOverride(function: KFunction<*>): Boolean","dev.racci.minix.api.utils.kotlin.doesOverride"]},{"name":"infix fun KClass<*>.doesOverride(functionName: String): Boolean","description":"dev.racci.minix.api.utils.kotlin.doesOverride","location":"Minix-API/dev.racci.minix.api.utils.kotlin/does-override.html","searchKeys":["doesOverride","infix fun KClass<*>.doesOverride(functionName: String): Boolean","dev.racci.minix.api.utils.kotlin.doesOverride"]},{"name":"infix fun KClass<*>.doesOverride(property: KProperty1<*, *>): Boolean","description":"dev.racci.minix.api.utils.kotlin.doesOverride","location":"Minix-API/dev.racci.minix.api.utils.kotlin/does-override.html","searchKeys":["doesOverride","infix fun KClass<*>.doesOverride(property: KProperty1<*, *>): Boolean","dev.racci.minix.api.utils.kotlin.doesOverride"]},{"name":"infix fun MCVersion.sameMajor(other: MCVersion): Boolean","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.sameMajor","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/same-major.html","searchKeys":["sameMajor","infix fun MCVersion.sameMajor(other: MCVersion): Boolean","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.sameMajor"]},{"name":"infix fun PartialComponent.message(recipient: CommandSender)","description":"dev.racci.minix.api.utils.adventure.PartialComponent.Companion.message","location":"Minix-API/dev.racci.minix.api.utils.adventure/-partial-component/-companion/message.html","searchKeys":["message","infix fun PartialComponent.message(recipient: CommandSender)","dev.racci.minix.api.utils.adventure.PartialComponent.Companion.message"]},{"name":"infix fun Player.isOwner(entity: Entity): Boolean","description":"dev.racci.minix.api.extensions.isOwner","location":"Minix-API/dev.racci.minix.api.extensions/is-owner.html","searchKeys":["isOwner","infix fun Player.isOwner(entity: Entity): Boolean","dev.racci.minix.api.extensions.isOwner"]},{"name":"infix fun String.message(recipient: CommandSender)","description":"dev.racci.minix.api.extensions.message","location":"Minix-API/dev.racci.minix.api.extensions/message.html","searchKeys":["message","infix fun String.message(recipient: CommandSender)","dev.racci.minix.api.extensions.message"]},{"name":"infix inline fun <P : MinixPlugin> add(noinline builder: ExtensionUnit<P>)","description":"dev.racci.minix.api.plugin.MinixPlugin.ExtensionsBuilder.add","location":"Minix-API/dev.racci.minix.api.plugin/-minix-plugin/-extensions-builder/add.html","searchKeys":["add","infix inline fun <P : MinixPlugin> add(noinline builder: ExtensionUnit<P>)","dev.racci.minix.api.plugin.MinixPlugin.ExtensionsBuilder.add"]},{"name":"inline fun <E : Enum<*>> Enum.Companion.fromOrdinal(ordinal: Int, orElse: (Int) -> E = { throw LevelConversionException(\"Couldn't convert $ordinal to an enum of ${E::class.simpleName}\") }): E","description":"dev.racci.minix.api.utils.kotlin.fromOrdinal","location":"Minix-API/dev.racci.minix.api.utils.kotlin/from-ordinal.html","searchKeys":["fromOrdinal","inline fun <E : Enum<*>> Enum.Companion.fromOrdinal(ordinal: Int, orElse: (Int) -> E = { throw LevelConversionException(\"Couldn't convert $ordinal to an enum of ${E::class.simpleName}\") }): E","dev.racci.minix.api.utils.kotlin.fromOrdinal"]},{"name":"inline fun <E> MinixPlugin.expirationListOf(expireTime: Int, vararg elements: E): ExpirationList<E>","description":"dev.racci.minix.api.utils.collections.expirationListOf","location":"Minix-API/dev.racci.minix.api.utils.collections/expiration-list-of.html","searchKeys":["expirationListOf","inline fun <E> MinixPlugin.expirationListOf(expireTime: Int, vararg elements: E): ExpirationList<E>","dev.racci.minix.api.utils.collections.expirationListOf"]},{"name":"inline fun <E> WithPlugin<*>.expirationListOf(expireTime: Int, vararg elements: E): ExpirationList<E>","description":"dev.racci.minix.api.utils.collections.expirationListOf","location":"Minix-API/dev.racci.minix.api.utils.collections/expiration-list-of.html","searchKeys":["expirationListOf","inline fun <E> WithPlugin<*>.expirationListOf(expireTime: Int, vararg elements: E): ExpirationList<E>","dev.racci.minix.api.utils.collections.expirationListOf"]},{"name":"inline fun <E> expirationListOf(expireTime: Int, plugin: MinixPlugin, vararg elements: E): ExpirationList<E>","description":"dev.racci.minix.api.utils.collections.expirationListOf","location":"Minix-API/dev.racci.minix.api.utils.collections/expiration-list-of.html","searchKeys":["expirationListOf","inline fun <E> expirationListOf(expireTime: Int, plugin: MinixPlugin, vararg elements: E): ExpirationList<E>","dev.racci.minix.api.utils.collections.expirationListOf"]},{"name":"inline fun <F : Function<Unit>> observe(vararg action: ObservableAction?, listener: F)","description":"dev.racci.minix.api.utils.collections.ObservableHolder.observe","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-holder/observe.html","searchKeys":["observe","inline fun <F : Function<Unit>> observe(vararg action: ObservableAction?, listener: F)","dev.racci.minix.api.utils.collections.ObservableHolder.observe"]},{"name":"inline fun <F : Function<Unit>> runListeners(vararg params: Any?)","description":"dev.racci.minix.api.utils.collections.ObservableHolder.runListeners","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-holder/run-listeners.html","searchKeys":["runListeners","inline fun <F : Function<Unit>> runListeners(vararg params: Any?)","dev.racci.minix.api.utils.collections.ObservableHolder.runListeners"]},{"name":"inline fun <K, V> MutableMap<K, V>.clear(onRemove: (K, V) -> Unit)","description":"dev.racci.minix.api.utils.collections.CollectionUtils.clear","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/clear.html","searchKeys":["clear","inline fun <K, V> MutableMap<K, V>.clear(onRemove: (K, V) -> Unit)","dev.racci.minix.api.utils.collections.CollectionUtils.clear"]},{"name":"inline fun <K, V> MutableMap<K, V>.clear(onRemove: V.() -> Unit)","description":"dev.racci.minix.api.utils.collections.CollectionUtils.clear","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/clear.html","searchKeys":["clear","inline fun <K, V> MutableMap<K, V>.clear(onRemove: V.() -> Unit)","dev.racci.minix.api.utils.collections.CollectionUtils.clear"]},{"name":"inline fun <K, V> MutableMap<K, V>.computeAndRemove(key: K, onRemove: (K, V) -> Unit)","description":"dev.racci.minix.api.utils.collections.CollectionUtils.computeAndRemove","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/compute-and-remove.html","searchKeys":["computeAndRemove","inline fun <K, V> MutableMap<K, V>.computeAndRemove(key: K, onRemove: (K, V) -> Unit)","dev.racci.minix.api.utils.collections.CollectionUtils.computeAndRemove"]},{"name":"inline fun <K, V> MutableMap<K, V>.computeAndRemove(key: K, onRemove: V.() -> Unit)","description":"dev.racci.minix.api.utils.collections.CollectionUtils.computeAndRemove","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/compute-and-remove.html","searchKeys":["computeAndRemove","inline fun <K, V> MutableMap<K, V>.computeAndRemove(key: K, onRemove: V.() -> Unit)","dev.racci.minix.api.utils.collections.CollectionUtils.computeAndRemove"]},{"name":"inline fun <K, V> cacheOf(noinline build: K.() -> V, builder: Caffeine<K, V>.() -> Unit): LoadingCache<K, V>","description":"dev.racci.minix.api.utils.collections.CollectionUtils.cacheOf","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/cache-of.html","searchKeys":["cacheOf","inline fun <K, V> cacheOf(noinline build: K.() -> V, builder: Caffeine<K, V>.() -> Unit): LoadingCache<K, V>","dev.racci.minix.api.utils.collections.CollectionUtils.cacheOf"]},{"name":"inline fun <M : ItemMeta> ItemStack.editItemMeta(block: M.() -> Unit): M?","description":"dev.racci.minix.api.extensions.editItemMeta","location":"Minix-API/dev.racci.minix.api.extensions/edit-item-meta.html","searchKeys":["editItemMeta","inline fun <M : ItemMeta> ItemStack.editItemMeta(block: M.() -> Unit): M?","dev.racci.minix.api.extensions.editItemMeta"]},{"name":"inline fun <P : MinixPlugin, T : MinixConfig<P>> Lazy<DataService>.inject(): Lazy<T>","description":"dev.racci.minix.api.services.DataService.Companion.inject","location":"Minix-API/dev.racci.minix.api.services/-data-service/-companion/inject.html","searchKeys":["inject","inline fun <P : MinixPlugin, T : MinixConfig<P>> Lazy<DataService>.inject(): Lazy<T>","dev.racci.minix.api.services.DataService.Companion.inject"]},{"name":"inline fun <P : MinixPlugin, T : MinixConfig<P>> get(): T","description":"dev.racci.minix.api.services.DataService.get","location":"Minix-API/dev.racci.minix.api.services/-data-service/get.html","searchKeys":["get","inline fun <P : MinixPlugin, T : MinixConfig<P>> get(): T","dev.racci.minix.api.services.DataService.get"]},{"name":"inline fun <P : MinixPlugin, T : MinixConfig<P>> getOrNull(): T?","description":"dev.racci.minix.api.services.DataService.getOrNull","location":"Minix-API/dev.racci.minix.api.services/-data-service/get-or-null.html","searchKeys":["getOrNull","inline fun <P : MinixPlugin, T : MinixConfig<P>> getOrNull(): T?","dev.racci.minix.api.services.DataService.getOrNull"]},{"name":"inline fun <P : MinixPlugin, T : MinixConfig<P>> inject(): Lazy<T>","description":"dev.racci.minix.api.services.DataService.inject","location":"Minix-API/dev.racci.minix.api.services/-data-service/inject.html","searchKeys":["inject","inline fun <P : MinixPlugin, T : MinixConfig<P>> inject(): Lazy<T>","dev.racci.minix.api.services.DataService.inject"]},{"name":"inline fun <R> WithPlugin<*>.completable(dispatcher: CoroutineContext, crossinline block: suspend () -> R): CompletableFuture<R>","description":"dev.racci.minix.api.extensions.completable","location":"Minix-API/dev.racci.minix.api.extensions/completable.html","searchKeys":["completable","inline fun <R> WithPlugin<*>.completable(dispatcher: CoroutineContext, crossinline block: suspend () -> R): CompletableFuture<R>","dev.racci.minix.api.extensions.completable"]},{"name":"inline fun <R> WithPlugin<*>.completableAsync(crossinline block: suspend () -> R): CompletableFuture<R>","description":"dev.racci.minix.api.extensions.completableAsync","location":"Minix-API/dev.racci.minix.api.extensions/completable-async.html","searchKeys":["completableAsync","inline fun <R> WithPlugin<*>.completableAsync(crossinline block: suspend () -> R): CompletableFuture<R>","dev.racci.minix.api.extensions.completableAsync"]},{"name":"inline fun <R> WithPlugin<*>.completableSync(crossinline block: suspend () -> R): CompletableFuture<R>","description":"dev.racci.minix.api.extensions.completableSync","location":"Minix-API/dev.racci.minix.api.extensions/completable-sync.html","searchKeys":["completableSync","inline fun <R> WithPlugin<*>.completableSync(crossinline block: suspend () -> R): CompletableFuture<R>","dev.racci.minix.api.extensions.completableSync"]},{"name":"inline fun <R> WithPlugin<*>.deferred(dispatcher: CoroutineContext, crossinline block: suspend () -> R): Deferred<R>","description":"dev.racci.minix.api.extensions.deferred","location":"Minix-API/dev.racci.minix.api.extensions/deferred.html","searchKeys":["deferred","inline fun <R> WithPlugin<*>.deferred(dispatcher: CoroutineContext, crossinline block: suspend () -> R): Deferred<R>","dev.racci.minix.api.extensions.deferred"]},{"name":"inline fun <R> WithPlugin<*>.deferredAsync(crossinline block: suspend () -> R): Deferred<R>","description":"dev.racci.minix.api.extensions.deferredAsync","location":"Minix-API/dev.racci.minix.api.extensions/deferred-async.html","searchKeys":["deferredAsync","inline fun <R> WithPlugin<*>.deferredAsync(crossinline block: suspend () -> R): Deferred<R>","dev.racci.minix.api.extensions.deferredAsync"]},{"name":"inline fun <R> WithPlugin<*>.deferredSync(crossinline block: suspend () -> R): Deferred<R>","description":"dev.racci.minix.api.extensions.deferredSync","location":"Minix-API/dev.racci.minix.api.extensions/deferred-sync.html","searchKeys":["deferredSync","inline fun <R> WithPlugin<*>.deferredSync(crossinline block: suspend () -> R): Deferred<R>","dev.racci.minix.api.extensions.deferredSync"]},{"name":"inline fun <T : () -> R, R> T.ifFulfilled(boolean: Boolean? = null, block: () -> Boolean = { false })","description":"dev.racci.minix.api.utils.kotlin.ifFulfilled","location":"Minix-API/dev.racci.minix.api.utils.kotlin/if-fulfilled.html","searchKeys":["ifFulfilled","inline fun <T : () -> R, R> T.ifFulfilled(boolean: Boolean? = null, block: () -> Boolean = { false })","dev.racci.minix.api.utils.kotlin.ifFulfilled"]},{"name":"inline fun <T : Any> Any?.safeCast(type: KClass<T> = T::class): T?","description":"dev.racci.minix.api.utils.safeCast","location":"Minix-API/dev.racci.minix.api.utils/safe-cast.html","searchKeys":["safeCast","inline fun <T : Any> Any?.safeCast(type: KClass<T> = T::class): T?","dev.racci.minix.api.utils.safeCast"]},{"name":"inline fun <T : Any> Any?.unsafeCast(type: KClass<T> = T::class): T","description":"dev.racci.minix.api.utils.unsafeCast","location":"Minix-API/dev.racci.minix.api.utils/unsafe-cast.html","searchKeys":["unsafeCast","inline fun <T : Any> Any?.unsafeCast(type: KClass<T> = T::class): T","dev.racci.minix.api.utils.unsafeCast"]},{"name":"inline fun <T : Any> T.invokeIfOverrides(methodName: String, block: (T) -> Unit): Boolean","description":"dev.racci.minix.api.utils.kotlin.invokeIfOverrides","location":"Minix-API/dev.racci.minix.api.utils.kotlin/invoke-if-overrides.html","searchKeys":["invokeIfOverrides","inline fun <T : Any> T.invokeIfOverrides(methodName: String, block: (T) -> Unit): Boolean","dev.racci.minix.api.utils.kotlin.invokeIfOverrides"]},{"name":"inline fun <T : Any> convert(): T","description":"dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.convert","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-logging-level/convert.html","searchKeys":["convert","inline fun <T : Any> convert(): T","dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.convert"]},{"name":"inline fun <T : Component> T.noItalic(): T","description":"dev.racci.minix.api.extensions.noItalic","location":"Minix-API/dev.racci.minix.api.extensions/no-italic.html","searchKeys":["noItalic","inline fun <T : Component> T.noItalic(): T","dev.racci.minix.api.extensions.noItalic"]},{"name":"inline fun <T : Enum<T>> enumContains(name: String): Boolean","description":"dev.racci.minix.api.utils.primitive.EnumUtils.enumContains","location":"Minix-API/dev.racci.minix.api.utils.primitive/-enum-utils/enum-contains.html","searchKeys":["enumContains","inline fun <T : Enum<T>> enumContains(name: String): Boolean","dev.racci.minix.api.utils.primitive.EnumUtils.enumContains"]},{"name":"inline fun <T : Enum<T>> getByName(name: String?): T?","description":"dev.racci.minix.api.utils.primitive.EnumUtils.getByName","location":"Minix-API/dev.racci.minix.api.utils.primitive/-enum-utils/get-by-name.html","searchKeys":["getByName","inline fun <T : Enum<T>> getByName(name: String?): T?","dev.racci.minix.api.utils.primitive.EnumUtils.getByName"]},{"name":"inline fun <T : Event> Extension<*>.event(priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, forceAsync: Boolean = false, noinline block: suspend T.() -> Unit)","description":"dev.racci.minix.api.extensions.event","location":"Minix-API/dev.racci.minix.api.extensions/event.html","searchKeys":["event","inline fun <T : Event> Extension<*>.event(priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, forceAsync: Boolean = false, noinline block: suspend T.() -> Unit)","dev.racci.minix.api.extensions.event"]},{"name":"inline fun <T : Event> Listener.event(plugin: MinixPlugin, priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, forceAsync: Boolean = false, noinline block: suspend T.() -> Unit)","description":"dev.racci.minix.api.extensions.event","location":"Minix-API/dev.racci.minix.api.extensions/event.html","searchKeys":["event","inline fun <T : Event> Listener.event(plugin: MinixPlugin, priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, forceAsync: Boolean = false, noinline block: suspend T.() -> Unit)","dev.racci.minix.api.extensions.event"]},{"name":"inline fun <T : Event> MinixPlugin.eventFlow(assign: Player? = null, priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, forceAsync: Boolean = false, channel: Channel<T> = Channel(Channel.CONFLATED), listener: Listener = events {}, assignListener: Listener = events {}): Flow<T>","description":"dev.racci.minix.api.flow.eventFlow","location":"Minix-API/dev.racci.minix.api.flow/event-flow.html","searchKeys":["eventFlow","inline fun <T : Event> MinixPlugin.eventFlow(assign: Player? = null, priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, forceAsync: Boolean = false, channel: Channel<T> = Channel(Channel.CONFLATED), listener: Listener = events {}, assignListener: Listener = events {}): Flow<T>","dev.racci.minix.api.flow.eventFlow"]},{"name":"inline fun <T : Event> PluginManager.callEvent(noinline builder: List<KParameter>.() -> Map<KParameter, Any?>): Boolean","description":"dev.racci.minix.api.extensions.callEvent","location":"Minix-API/dev.racci.minix.api.extensions/call-event.html","searchKeys":["callEvent","inline fun <T : Event> PluginManager.callEvent(noinline builder: List<KParameter>.() -> Map<KParameter, Any?>): Boolean","dev.racci.minix.api.extensions.callEvent"]},{"name":"inline fun <T : Event> WithPlugin<*>.event(priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, forceAsync: Boolean = false, noinline block: suspend T.() -> Unit)","description":"dev.racci.minix.api.extensions.event","location":"Minix-API/dev.racci.minix.api.extensions/event.html","searchKeys":["event","inline fun <T : Event> WithPlugin<*>.event(priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, forceAsync: Boolean = false, noinline block: suspend T.() -> Unit)","dev.racci.minix.api.extensions.event"]},{"name":"inline fun <T : Event> WithPlugin<*>.eventFlow(assign: Player? = null, priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, forceAsync: Boolean = false, channel: Channel<T> = Channel(Channel.CONFLATED), listener: Listener = plugin.events {}, assignListener: Listener = plugin.events {}): Flow<T>","description":"dev.racci.minix.api.flow.eventFlow","location":"Minix-API/dev.racci.minix.api.flow/event-flow.html","searchKeys":["eventFlow","inline fun <T : Event> WithPlugin<*>.eventFlow(assign: Player? = null, priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, forceAsync: Boolean = false, channel: Channel<T> = Channel(Channel.CONFLATED), listener: Listener = plugin.events {}, assignListener: Listener = plugin.events {}): Flow<T>","dev.racci.minix.api.flow.eventFlow"]},{"name":"inline fun <T : Event> WithPlugin<*>.subEvent(priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, forceAsync: Boolean = false, noinline block: suspend (T) -> Unit)","description":"dev.racci.minix.api.extensions.subEvent","location":"Minix-API/dev.racci.minix.api.extensions/sub-event.html","searchKeys":["subEvent","inline fun <T : Event> WithPlugin<*>.subEvent(priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, forceAsync: Boolean = false, noinline block: suspend (T) -> Unit)","dev.racci.minix.api.extensions.subEvent"]},{"name":"inline fun <T : Event> eventFlow(type: KClass<T>, plugin: MinixPlugin, assign: Player? = null, priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, forceAsync: Boolean = false, channel: Channel<T> = Channel(Channel.CONFLATED), listener: Listener = SimpleKListener(plugin), assignListener: Listener = SimpleKListener(plugin)): Flow<T>","description":"dev.racci.minix.api.flow.eventFlow","location":"Minix-API/dev.racci.minix.api.flow/event-flow.html","searchKeys":["eventFlow","inline fun <T : Event> eventFlow(type: KClass<T>, plugin: MinixPlugin, assign: Player? = null, priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, forceAsync: Boolean = false, channel: Channel<T> = Channel(Channel.CONFLATED), listener: Listener = SimpleKListener(plugin), assignListener: Listener = SimpleKListener(plugin)): Flow<T>","dev.racci.minix.api.flow.eventFlow"]},{"name":"inline fun <T : PlayerEvent> MinixPlugin.playerEventFlow(player: Player, priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, channel: Channel<T> = Channel(Channel.CONFLATED), listener: Listener = SimpleKListener(this)): Flow<T>","description":"dev.racci.minix.api.flow.playerEventFlow","location":"Minix-API/dev.racci.minix.api.flow/player-event-flow.html","searchKeys":["playerEventFlow","inline fun <T : PlayerEvent> MinixPlugin.playerEventFlow(player: Player, priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, channel: Channel<T> = Channel(Channel.CONFLATED), listener: Listener = SimpleKListener(this)): Flow<T>","dev.racci.minix.api.flow.playerEventFlow"]},{"name":"inline fun <T : PlayerEvent> WithPlugin<*>.playerEventFlow(player: Player, priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, channel: Channel<T> = Channel(Channel.CONFLATED), listener: Listener = SimpleKListener(plugin)): Flow<T>","description":"dev.racci.minix.api.flow.playerEventFlow","location":"Minix-API/dev.racci.minix.api.flow/player-event-flow.html","searchKeys":["playerEventFlow","inline fun <T : PlayerEvent> WithPlugin<*>.playerEventFlow(player: Player, priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, channel: Channel<T> = Channel(Channel.CONFLATED), listener: Listener = SimpleKListener(plugin)): Flow<T>","dev.racci.minix.api.flow.playerEventFlow"]},{"name":"inline fun <T : PlayerEvent> playerEventFlow(player: Player, plugin: MinixPlugin, priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, channel: Channel<T> = Channel(Channel.CONFLATED), listener: Listener = SimpleKListener(plugin)): Flow<T>","description":"dev.racci.minix.api.flow.playerEventFlow","location":"Minix-API/dev.racci.minix.api.flow/player-event-flow.html","searchKeys":["playerEventFlow","inline fun <T : PlayerEvent> playerEventFlow(player: Player, plugin: MinixPlugin, priority: EventPriority = EventPriority.NORMAL, ignoreCancelled: Boolean = false, channel: Channel<T> = Channel(Channel.CONFLATED), listener: Listener = SimpleKListener(plugin)): Flow<T>","dev.racci.minix.api.flow.playerEventFlow"]},{"name":"inline fun <T : Plugin> MinixPlugin.depend(pluginName: String): PluginUtils.DependencyDelegate<T>","description":"dev.racci.minix.api.utils.minecraft.PluginUtils.depend","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-plugin-utils/depend.html","searchKeys":["depend","inline fun <T : Plugin> MinixPlugin.depend(pluginName: String): PluginUtils.DependencyDelegate<T>","dev.racci.minix.api.utils.minecraft.PluginUtils.depend"]},{"name":"inline fun <T : Plugin> MinixPlugin.softDepend(pluginName: String): PluginUtils.SoftDependencyDelegate<T>","description":"dev.racci.minix.api.utils.minecraft.PluginUtils.softDepend","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-plugin-utils/soft-depend.html","searchKeys":["softDepend","inline fun <T : Plugin> MinixPlugin.softDepend(pluginName: String): PluginUtils.SoftDependencyDelegate<T>","dev.racci.minix.api.utils.minecraft.PluginUtils.softDepend"]},{"name":"inline fun <T : Throwable, R> catchAndReturn(err: (T) -> Unit = { it.printStackTrace() }, run: () -> R): R?","description":"dev.racci.minix.api.utils.kotlin.catchAndReturn","location":"Minix-API/dev.racci.minix.api.utils.kotlin/catch-and-return.html","searchKeys":["catchAndReturn","inline fun <T : Throwable, R> catchAndReturn(err: (T) -> Unit = { it.printStackTrace() }, run: () -> R): R?","dev.racci.minix.api.utils.kotlin.catchAndReturn"]},{"name":"inline fun <T : Throwable, U : Any> catch(default: U, run: () -> U): U","description":"dev.racci.minix.api.utils.kotlin.catch","location":"Minix-API/dev.racci.minix.api.utils.kotlin/catch.html","searchKeys":["catch","inline fun <T : Throwable, U : Any> catch(default: U, run: () -> U): U","dev.racci.minix.api.utils.kotlin.catch"]},{"name":"inline fun <T : Throwable, U : Any> catch(err: (T) -> U, run: () -> U): U","description":"dev.racci.minix.api.utils.kotlin.catch","location":"Minix-API/dev.racci.minix.api.utils.kotlin/catch.html","searchKeys":["catch","inline fun <T : Throwable, U : Any> catch(err: (T) -> U, run: () -> U): U","dev.racci.minix.api.utils.kotlin.catch"]},{"name":"inline fun <T : Throwable> booleanCatch(errorCallback: (T) -> Boolean = { true }, run: () -> Any?): Boolean","description":"dev.racci.minix.api.utils.kotlin.booleanCatch","location":"Minix-API/dev.racci.minix.api.utils.kotlin/boolean-catch.html","searchKeys":["booleanCatch","inline fun <T : Throwable> booleanCatch(errorCallback: (T) -> Boolean = { true }, run: () -> Any?): Boolean","dev.racci.minix.api.utils.kotlin.booleanCatch"]},{"name":"inline fun <T : Throwable> catch(err: (T) -> Unit = { it.printStackTrace() }, run: () -> Unit)","description":"dev.racci.minix.api.utils.kotlin.catch","location":"Minix-API/dev.racci.minix.api.utils.kotlin/catch.html","searchKeys":["catch","inline fun <T : Throwable> catch(err: (T) -> Unit = { it.printStackTrace() }, run: () -> Unit)","dev.racci.minix.api.utils.kotlin.catch"]},{"name":"inline fun <T> Any?.tryCast(block: T.() -> Unit): Boolean","description":"dev.racci.minix.api.utils.tryCast","location":"Minix-API/dev.racci.minix.api.utils/try-cast.html","searchKeys":["tryCast","inline fun <T> Any?.tryCast(block: T.() -> Unit): Boolean","dev.racci.minix.api.utils.tryCast"]},{"name":"inline fun <T> Array<*>.getCastOrDef(index: Int, def: () -> T): T","description":"dev.racci.minix.api.utils.collections.CollectionUtils.getCastOrDef","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/get-cast-or-def.html","searchKeys":["getCastOrDef","inline fun <T> Array<*>.getCastOrDef(index: Int, def: () -> T): T","dev.racci.minix.api.utils.collections.CollectionUtils.getCastOrDef"]},{"name":"inline fun <T> Array<*>.getCastOrNull(index: Int): T?","description":"dev.racci.minix.api.utils.collections.CollectionUtils.getCastOrNull","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/get-cast-or-null.html","searchKeys":["getCastOrNull","inline fun <T> Array<*>.getCastOrNull(index: Int): T?","dev.racci.minix.api.utils.collections.CollectionUtils.getCastOrNull"]},{"name":"inline fun <T> Collection<*>.getCastOrDef(index: Int, def: () -> T): T","description":"dev.racci.minix.api.utils.collections.CollectionUtils.getCastOrDef","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/get-cast-or-def.html","searchKeys":["getCastOrDef","inline fun <T> Collection<*>.getCastOrDef(index: Int, def: () -> T): T","dev.racci.minix.api.utils.collections.CollectionUtils.getCastOrDef"]},{"name":"inline fun <T> Collection<*>.getCastOrNull(index: Int): T?","description":"dev.racci.minix.api.utils.collections.CollectionUtils.getCastOrNull","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/get-cast-or-null.html","searchKeys":["getCastOrNull","inline fun <T> Collection<*>.getCastOrNull(index: Int): T?","dev.racci.minix.api.utils.collections.CollectionUtils.getCastOrNull"]},{"name":"inline fun <T> Collection<T>?.ifNotEmpty(block: (Collection<T>) -> Unit): Collection<T>?","description":"dev.racci.minix.api.utils.kotlin.ifNotEmpty","location":"Minix-API/dev.racci.minix.api.utils.kotlin/if-not-empty.html","searchKeys":["ifNotEmpty","inline fun <T> Collection<T>?.ifNotEmpty(block: (Collection<T>) -> Unit): Collection<T>?","dev.racci.minix.api.utils.kotlin.ifNotEmpty"]},{"name":"inline fun <T> Map<*, *>.getCast(key: Any): T","description":"dev.racci.minix.api.utils.collections.CollectionUtils.getCast","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/get-cast.html","searchKeys":["getCast","inline fun <T> Map<*, *>.getCast(key: Any): T","dev.racci.minix.api.utils.collections.CollectionUtils.getCast"]},{"name":"inline fun <T> Map<*, *>.getCastOrDef(key: Any, def: () -> T): T","description":"dev.racci.minix.api.utils.collections.CollectionUtils.getCastOrDef","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/get-cast-or-def.html","searchKeys":["getCastOrDef","inline fun <T> Map<*, *>.getCastOrDef(key: Any, def: () -> T): T","dev.racci.minix.api.utils.collections.CollectionUtils.getCastOrDef"]},{"name":"inline fun <T> Map<*, *>.getCastOrNull(key: Any): T?","description":"dev.racci.minix.api.utils.collections.CollectionUtils.getCastOrNull","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/get-cast-or-null.html","searchKeys":["getCastOrNull","inline fun <T> Map<*, *>.getCastOrNull(key: Any): T?","dev.racci.minix.api.utils.collections.CollectionUtils.getCastOrNull"]},{"name":"inline fun <T> MutableCollection<T>.clear(onRemove: (T) -> Unit)","description":"dev.racci.minix.api.utils.collections.CollectionUtils.clear","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/clear.html","searchKeys":["clear","inline fun <T> MutableCollection<T>.clear(onRemove: (T) -> Unit)","dev.racci.minix.api.utils.collections.CollectionUtils.clear"]},{"name":"inline fun <T> T?.invokeIfNotNull(block: (T) -> Unit): Boolean","description":"dev.racci.minix.api.utils.kotlin.invokeIfNotNull","location":"Minix-API/dev.racci.minix.api.utils.kotlin/invoke-if-not-null.html","searchKeys":["invokeIfNotNull","inline fun <T> T?.invokeIfNotNull(block: (T) -> Unit): Boolean","dev.racci.minix.api.utils.kotlin.invokeIfNotNull"]},{"name":"inline fun <T> T?.invokeIfNull(block: () -> Unit): Boolean","description":"dev.racci.minix.api.utils.kotlin.invokeIfNull","location":"Minix-API/dev.racci.minix.api.utils.kotlin/invoke-if-null.html","searchKeys":["invokeIfNull","inline fun <T> T?.invokeIfNull(block: () -> Unit): Boolean","dev.racci.minix.api.utils.kotlin.invokeIfNull"]},{"name":"inline fun <T> TypeSerializerCollection.Builder.register(serializer: TypeSerializer<T>): TypeSerializerCollection.Builder","description":"dev.racci.minix.api.serializables.Serializer.register","location":"Minix-API/dev.racci.minix.api.serializables/-serializer/register.html","searchKeys":["register","inline fun <T> TypeSerializerCollection.Builder.register(serializer: TypeSerializer<T>): TypeSerializerCollection.Builder","dev.racci.minix.api.serializables.Serializer.register"]},{"name":"inline fun <T> TypeSerializerCollection.Builder.registerExact(serializer: TypeSerializer<T>): TypeSerializerCollection.Builder","description":"dev.racci.minix.api.serializables.Serializer.registerExact","location":"Minix-API/dev.racci.minix.api.serializables/-serializer/register-exact.html","searchKeys":["registerExact","inline fun <T> TypeSerializerCollection.Builder.registerExact(serializer: TypeSerializer<T>): TypeSerializerCollection.Builder","dev.racci.minix.api.serializables.Serializer.registerExact"]},{"name":"inline fun Boolean?.ifFalse(block: () -> Unit): Boolean","description":"dev.racci.minix.api.utils.kotlin.ifFalse","location":"Minix-API/dev.racci.minix.api.utils.kotlin/if-false.html","searchKeys":["ifFalse","inline fun Boolean?.ifFalse(block: () -> Unit): Boolean","dev.racci.minix.api.utils.kotlin.ifFalse"]},{"name":"inline fun Boolean?.ifTrue(block: () -> Unit): Boolean","description":"dev.racci.minix.api.utils.kotlin.ifTrue","location":"Minix-API/dev.racci.minix.api.utils.kotlin/if-true.html","searchKeys":["ifTrue","inline fun Boolean?.ifTrue(block: () -> Unit): Boolean","dev.racci.minix.api.utils.kotlin.ifTrue"]},{"name":"inline fun ItemStack.pdc(block: PDC.() -> Unit): PersistentDataContainer","description":"dev.racci.minix.api.extensions.pdc","location":"Minix-API/dev.racci.minix.api.extensions/pdc.html","searchKeys":["pdc","inline fun ItemStack.pdc(block: PDC.() -> Unit): PersistentDataContainer","dev.racci.minix.api.extensions.pdc"]},{"name":"inline fun Material.asItemStack(amount: Int = 1, meta: ItemMeta.() -> Unit = {}): ItemMeta?","description":"dev.racci.minix.api.extensions.asItemStack","location":"Minix-API/dev.racci.minix.api.extensions/as-item-stack.html","searchKeys":["asItemStack","inline fun Material.asItemStack(amount: Int = 1, meta: ItemMeta.() -> Unit = {}): ItemMeta?","dev.racci.minix.api.extensions.asItemStack"]},{"name":"inline fun Material.toItemStack(amount: Int = 1, block: ItemStack.() -> Unit = {}): ItemStack","description":"dev.racci.minix.api.extensions.toItemStack","location":"Minix-API/dev.racci.minix.api.extensions/to-item-stack.html","searchKeys":["toItemStack","inline fun Material.toItemStack(amount: Int = 1, block: ItemStack.() -> Unit = {}): ItemStack","dev.racci.minix.api.extensions.toItemStack"]},{"name":"inline fun MiniMessage.parse(input: String, italic: Boolean = false, builder: Component.() -> Unit = {}): Component","description":"dev.racci.minix.api.extensions.parse","location":"Minix-API/dev.racci.minix.api.extensions/parse.html","searchKeys":["parse","inline fun MiniMessage.parse(input: String, italic: Boolean = false, builder: Component.() -> Unit = {}): Component","dev.racci.minix.api.extensions.parse"]},{"name":"inline fun MiniMessage.template(input: String, vararg template: Pair<String, *>, builder: Component.() -> Unit = {}): Component","description":"dev.racci.minix.api.extensions.template","location":"Minix-API/dev.racci.minix.api.extensions/template.html","searchKeys":["template","inline fun MiniMessage.template(input: String, vararg template: Pair<String, *>, builder: Component.() -> Unit = {}): Component","dev.racci.minix.api.extensions.template"]},{"name":"inline fun MinixPlugin.events(block: KListener<*>.() -> Unit): SimpleKListener","description":"dev.racci.minix.api.extensions.events","location":"Minix-API/dev.racci.minix.api.extensions/events.html","searchKeys":["events","inline fun MinixPlugin.events(block: KListener<*>.() -> Unit): SimpleKListener","dev.racci.minix.api.extensions.events"]},{"name":"inline fun MinixPlugin.task(delayToRun: Duration? = null, repeatDelay: Duration? = null, crossinline runnable: SuspendedUnit): CoroutineTask","description":"dev.racci.minix.api.extensions.task","location":"Minix-API/dev.racci.minix.api.extensions/task.html","searchKeys":["task","inline fun MinixPlugin.task(delayToRun: Duration? = null, repeatDelay: Duration? = null, crossinline runnable: SuspendedUnit): CoroutineTask","dev.racci.minix.api.extensions.task"]},{"name":"inline fun MinixPlugin.taskAsync(delayToRun: Duration? = null, repeatDelay: Duration? = null, crossinline runnable: SuspendedUnit): CoroutineTask","description":"dev.racci.minix.api.extensions.taskAsync","location":"Minix-API/dev.racci.minix.api.extensions/task-async.html","searchKeys":["taskAsync","inline fun MinixPlugin.taskAsync(delayToRun: Duration? = null, repeatDelay: Duration? = null, crossinline runnable: SuspendedUnit): CoroutineTask","dev.racci.minix.api.extensions.taskAsync"]},{"name":"inline fun PersistentDataHolder.pdc(block: PersistentDataContainer.() -> Unit): PersistentDataContainer","description":"dev.racci.minix.api.extensions.pdc","location":"Minix-API/dev.racci.minix.api.extensions/pdc.html","searchKeys":["pdc","inline fun PersistentDataHolder.pdc(block: PersistentDataContainer.() -> Unit): PersistentDataContainer","dev.racci.minix.api.extensions.pdc"]},{"name":"inline fun WithPlugin<*>.async(noinline block: suspend CoroutineScope.() -> Unit): Job","description":"dev.racci.minix.api.extensions.async","location":"Minix-API/dev.racci.minix.api.extensions/async.html","searchKeys":["async","inline fun WithPlugin<*>.async(noinline block: suspend CoroutineScope.() -> Unit): Job","dev.racci.minix.api.extensions.async"]},{"name":"inline fun WithPlugin<*>.events(block: KListener<*>.() -> Unit): SimpleKListener","description":"dev.racci.minix.api.extensions.events","location":"Minix-API/dev.racci.minix.api.extensions/events.html","searchKeys":["events","inline fun WithPlugin<*>.events(block: KListener<*>.() -> Unit): SimpleKListener","dev.racci.minix.api.extensions.events"]},{"name":"inline fun WithPlugin<*>.sync(noinline block: suspend CoroutineScope.() -> Unit): Job","description":"dev.racci.minix.api.extensions.sync","location":"Minix-API/dev.racci.minix.api.extensions/sync.html","searchKeys":["sync","inline fun WithPlugin<*>.sync(noinline block: suspend CoroutineScope.() -> Unit): Job","dev.racci.minix.api.extensions.sync"]},{"name":"inline fun WithPlugin<*>.task(delayToRun: Duration? = null, repeatDelay: Duration? = null, crossinline runnable: SuspendedUnit): CoroutineTask","description":"dev.racci.minix.api.extensions.task","location":"Minix-API/dev.racci.minix.api.extensions/task.html","searchKeys":["task","inline fun WithPlugin<*>.task(delayToRun: Duration? = null, repeatDelay: Duration? = null, crossinline runnable: SuspendedUnit): CoroutineTask","dev.racci.minix.api.extensions.task"]},{"name":"inline fun WithPlugin<*>.taskAsync(delayToRun: Duration? = null, repeatDelay: Duration? = null, crossinline runnable: SuspendedUnit): CoroutineTask","description":"dev.racci.minix.api.extensions.taskAsync","location":"Minix-API/dev.racci.minix.api.extensions/task-async.html","searchKeys":["taskAsync","inline fun WithPlugin<*>.taskAsync(delayToRun: Duration? = null, repeatDelay: Duration? = null, crossinline runnable: SuspendedUnit): CoroutineTask","dev.racci.minix.api.extensions.taskAsync"]},{"name":"inline fun scheduler(crossinline runnable: SuspendedUnit): CoroutineRunnable","description":"dev.racci.minix.api.extensions.scheduler","location":"Minix-API/dev.racci.minix.api.extensions/scheduler.html","searchKeys":["scheduler","inline fun scheduler(crossinline runnable: SuspendedUnit): CoroutineRunnable","dev.racci.minix.api.extensions.scheduler"]},{"name":"inline fun task(delayToRun: Duration? = null, repeatDelay: Duration? = null, async: Boolean, plugin: MinixPlugin, crossinline runnable: SuspendedUnit): CoroutineTask","description":"dev.racci.minix.api.extensions.task","location":"Minix-API/dev.racci.minix.api.extensions/task.html","searchKeys":["task","inline fun task(delayToRun: Duration? = null, repeatDelay: Duration? = null, async: Boolean, plugin: MinixPlugin, crossinline runnable: SuspendedUnit): CoroutineTask","dev.racci.minix.api.extensions.task"]},{"name":"inline fun task(delayToRun: Duration? = null, repeatDelay: Duration? = null, plugin: MinixPlugin, crossinline runnable: SuspendedUnit): CoroutineTask","description":"dev.racci.minix.api.extensions.task","location":"Minix-API/dev.racci.minix.api.extensions/task.html","searchKeys":["task","inline fun task(delayToRun: Duration? = null, repeatDelay: Duration? = null, plugin: MinixPlugin, crossinline runnable: SuspendedUnit): CoroutineTask","dev.racci.minix.api.extensions.task"]},{"name":"inline fun taskAsync(delayToRun: Duration? = null, repeatDelay: Duration? = null, plugin: MinixPlugin, crossinline runnable: SuspendedUnit): CoroutineTask","description":"dev.racci.minix.api.extensions.taskAsync","location":"Minix-API/dev.racci.minix.api.extensions/task-async.html","searchKeys":["taskAsync","inline fun taskAsync(delayToRun: Duration? = null, repeatDelay: Duration? = null, plugin: MinixPlugin, crossinline runnable: SuspendedUnit): CoroutineTask","dev.racci.minix.api.extensions.taskAsync"]},{"name":"inline suspend fun <T : Extension<P>, P : MinixPlugin> WithPlugin<P>.extensionEvent(event: ExtensionState, extension: KClass<out T> = T::class, crossinline block: suspend T.() -> Unit)","description":"dev.racci.minix.api.extension.extensionEvent","location":"Minix-API/dev.racci.minix.api.extension/extension-event.html","searchKeys":["extensionEvent","inline suspend fun <T : Extension<P>, P : MinixPlugin> WithPlugin<P>.extensionEvent(event: ExtensionState, extension: KClass<out T> = T::class, crossinline block: suspend T.() -> Unit)","dev.racci.minix.api.extension.extensionEvent"]},{"name":"inline suspend fun <T : Extension<P>, P : MinixPlugin> extensionEvent(plugin: P, event: ExtensionState, extension: KClass<out T> = T::class, crossinline block: suspend T.() -> Unit)","description":"dev.racci.minix.api.extension.extensionEvent","location":"Minix-API/dev.racci.minix.api.extension/extension-event.html","searchKeys":["extensionEvent","inline suspend fun <T : Extension<P>, P : MinixPlugin> extensionEvent(plugin: P, event: ExtensionState, extension: KClass<out T> = T::class, crossinline block: suspend T.() -> Unit)","dev.racci.minix.api.extension.extensionEvent"]},{"name":"inline suspend fun send(plugin: MinixPlugin, event: ExtensionStateEvent)","description":"dev.racci.minix.api.extension.send","location":"Minix-API/dev.racci.minix.api.extension/send.html","searchKeys":["send","inline suspend fun send(plugin: MinixPlugin, event: ExtensionStateEvent)","dev.racci.minix.api.extension.send"]},{"name":"inner class ExtensionsBuilder","description":"dev.racci.minix.api.plugin.MinixPlugin.ExtensionsBuilder","location":"Minix-API/dev.racci.minix.api.plugin/-minix-plugin/-extensions-builder/index.html","searchKeys":["ExtensionsBuilder","inner class ExtensionsBuilder","dev.racci.minix.api.plugin.MinixPlugin.ExtensionsBuilder"]},{"name":"inner class FormattedMessage(input: String?, scope: String?, val level: MinixLogger.LoggingLevel, val throwable: Throwable?, textColour: TextColors?, whitespace: Whitespace = Whitespace.PRE, alignment: TextAlign = TextAlign.NONE, overflowWrap: OverflowWrap = OverflowWrap.NORMAL, width: Int = terminal.info.width)","description":"dev.racci.minix.api.plugin.logger.MinixLogger.FormattedMessage","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-formatted-message/index.html","searchKeys":["FormattedMessage","inner class FormattedMessage(input: String?, scope: String?, val level: MinixLogger.LoggingLevel, val throwable: Throwable?, textColour: TextColors?, whitespace: Whitespace = Whitespace.PRE, alignment: TextAlign = TextAlign.NONE, overflowWrap: OverflowWrap = OverflowWrap.NORMAL, width: Int = terminal.info.width)","dev.racci.minix.api.plugin.logger.MinixLogger.FormattedMessage"]},{"name":"inner class Minix : MinixConfig.InnerConfig<P> ","description":"dev.racci.minix.api.data.MinixConfig.Minix","location":"Minix-API/dev.racci.minix.api.data/-minix-config/-minix/index.html","searchKeys":["Minix","inner class Minix : MinixConfig.InnerConfig<P> ","dev.racci.minix.api.data.MinixConfig.Minix"]},{"name":"interface BannerBuilder : BaseItemBuilder<BannerBuilder, BannerMeta> ","description":"dev.racci.minix.api.builders.BannerBuilder","location":"Minix-API/dev.racci.minix.api.builders/-banner-builder/index.html","searchKeys":["BannerBuilder","interface BannerBuilder : BaseItemBuilder<BannerBuilder, BannerMeta> ","dev.racci.minix.api.builders.BannerBuilder"]},{"name":"interface BaseItemBuilder<B : BaseItemBuilder<B, M>, M : ItemMeta>","description":"dev.racci.minix.api.builders.BaseItemBuilder","location":"Minix-API/dev.racci.minix.api.builders/-base-item-builder/index.html","searchKeys":["BaseItemBuilder","interface BaseItemBuilder<B : BaseItemBuilder<B, M>, M : ItemMeta>","dev.racci.minix.api.builders.BaseItemBuilder"]},{"name":"interface BookBuilder : BaseItemBuilder<BookBuilder, BookMeta> ","description":"dev.racci.minix.api.builders.BookBuilder","location":"Minix-API/dev.racci.minix.api.builders/-book-builder/index.html","searchKeys":["BookBuilder","interface BookBuilder : BaseItemBuilder<BookBuilder, BookMeta> ","dev.racci.minix.api.builders.BookBuilder"]},{"name":"interface CommandService","description":"dev.racci.minix.api.coroutine.contract.CommandService","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-command-service/index.html","searchKeys":["CommandService","interface CommandService","dev.racci.minix.api.coroutine.contract.CommandService"]},{"name":"interface CoroutineScheduler","description":"dev.racci.minix.api.scheduler.CoroutineScheduler","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/index.html","searchKeys":["CoroutineScheduler","interface CoroutineScheduler","dev.racci.minix.api.scheduler.CoroutineScheduler"]},{"name":"interface CoroutineService : KoinComponent","description":"dev.racci.minix.api.coroutine.contract.CoroutineService","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-coroutine-service/index.html","searchKeys":["CoroutineService","interface CoroutineService : KoinComponent","dev.racci.minix.api.coroutine.contract.CoroutineService"]},{"name":"interface CoroutineSession","description":"dev.racci.minix.api.coroutine.contract.CoroutineSession","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-coroutine-session/index.html","searchKeys":["CoroutineSession","interface CoroutineSession","dev.racci.minix.api.coroutine.contract.CoroutineSession"]},{"name":"interface CoroutineTask","description":"dev.racci.minix.api.scheduler.CoroutineTask","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-task/index.html","searchKeys":["CoroutineTask","interface CoroutineTask","dev.racci.minix.api.scheduler.CoroutineTask"]},{"name":"interface EventService","description":"dev.racci.minix.api.coroutine.contract.EventService","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-event-service/index.html","searchKeys":["EventService","interface EventService","dev.racci.minix.api.coroutine.contract.EventService"]},{"name":"interface ExpirationList<E> : MutableIterable<E> ","description":"dev.racci.minix.api.utils.collections.ExpirationList","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list/index.html","searchKeys":["ExpirationList","interface ExpirationList<E> : MutableIterable<E> ","dev.racci.minix.api.utils.collections.ExpirationList"]},{"name":"interface ExpirationMap<K, V> : MutableMap<K, V> , WithPlugin<MinixPlugin> ","description":"dev.racci.minix.api.utils.collections.ExpirationMap","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-map/index.html","searchKeys":["ExpirationMap","interface ExpirationMap<K, V> : MutableMap<K, V> , WithPlugin<MinixPlugin> ","dev.racci.minix.api.utils.collections.ExpirationMap"]},{"name":"interface ExposedDelegate<T>","description":"dev.racci.minix.api.utils.exposed.ExposedDelegate","location":"Minix-API/dev.racci.minix.api.utils.exposed/-exposed-delegate/index.html","searchKeys":["ExposedDelegate","interface ExposedDelegate<T>","dev.racci.minix.api.utils.exposed.ExposedDelegate"]},{"name":"interface ExtensionSkeleton<P : MinixPlugin> : WithPlugin<P> , Qualifier","description":"dev.racci.minix.api.extension.ExtensionSkeleton","location":"Minix-API/dev.racci.minix.api.extension/-extension-skeleton/index.html","searchKeys":["ExtensionSkeleton","interface ExtensionSkeleton<P : MinixPlugin> : WithPlugin<P> , Qualifier","dev.racci.minix.api.extension.ExtensionSkeleton"]},{"name":"interface FireworkBuilder : BaseItemBuilder<FireworkBuilder, FireworkMeta> ","description":"dev.racci.minix.api.builders.FireworkBuilder","location":"Minix-API/dev.racci.minix.api.builders/-firework-builder/index.html","searchKeys":["FireworkBuilder","interface FireworkBuilder : BaseItemBuilder<FireworkBuilder, FireworkMeta> ","dev.racci.minix.api.builders.FireworkBuilder"]},{"name":"interface HeadBuilder : BaseItemBuilder<HeadBuilder, SkullMeta> ","description":"dev.racci.minix.api.builders.HeadBuilder","location":"Minix-API/dev.racci.minix.api.builders/-head-builder/index.html","searchKeys":["HeadBuilder","interface HeadBuilder : BaseItemBuilder<HeadBuilder, SkullMeta> ","dev.racci.minix.api.builders.HeadBuilder"]},{"name":"interface ItemBuilder : BaseItemBuilder<ItemBuilder, ItemMeta> ","description":"dev.racci.minix.api.builders.ItemBuilder","location":"Minix-API/dev.racci.minix.api.builders/-item-builder/index.html","searchKeys":["ItemBuilder","interface ItemBuilder : BaseItemBuilder<ItemBuilder, ItemMeta> ","dev.racci.minix.api.builders.ItemBuilder"]},{"name":"interface ItemBuilderDSL","description":"dev.racci.minix.api.builders.ItemBuilderDSL","location":"Minix-API/dev.racci.minix.api.builders/-item-builder-d-s-l/index.html","searchKeys":["ItemBuilderDSL","interface ItemBuilderDSL","dev.racci.minix.api.builders.ItemBuilderDSL"]},{"name":"interface KListener<T : MinixPlugin> : Listener, WithPlugin<T> ","description":"dev.racci.minix.api.extensions.KListener","location":"Minix-API/dev.racci.minix.api.extensions/-k-listener/index.html","searchKeys":["KListener","interface KListener<T : MinixPlugin> : Listener, WithPlugin<T> ","dev.racci.minix.api.extensions.KListener"]},{"name":"interface KotlinListener : Listener","description":"dev.racci.minix.api.extensions.KotlinListener","location":"Minix-API/dev.racci.minix.api.extensions/-kotlin-listener/index.html","searchKeys":["KotlinListener","interface KotlinListener : Listener","dev.racci.minix.api.extensions.KotlinListener"]},{"name":"interface MapBuilder","description":"dev.racci.minix.api.builders.MapBuilder","location":"Minix-API/dev.racci.minix.api.builders/-map-builder/index.html","searchKeys":["MapBuilder","interface MapBuilder","dev.racci.minix.api.builders.MapBuilder"]},{"name":"interface NbtWrapper","description":"dev.racci.minix.api.utils.minecraft.NbtWrapper","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-nbt-wrapper/index.html","searchKeys":["NbtWrapper","interface NbtWrapper","dev.racci.minix.api.utils.minecraft.NbtWrapper"]},{"name":"interface OnlinePlayerCollection : MutableCollection<Player> , KListener<MinixPlugin> ","description":"dev.racci.minix.api.utils.collections.OnlinePlayerCollection","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-collection/index.html","searchKeys":["OnlinePlayerCollection","interface OnlinePlayerCollection : MutableCollection<Player> , KListener<MinixPlugin> ","dev.racci.minix.api.utils.collections.OnlinePlayerCollection"]},{"name":"interface PlayerService","description":"dev.racci.minix.api.services.PlayerService","location":"Minix-API/dev.racci.minix.api.services/-player-service/index.html","searchKeys":["PlayerService","interface PlayerService","dev.racci.minix.api.services.PlayerService"]},{"name":"interface PluginService","description":"dev.racci.minix.api.services.PluginService","location":"Minix-API/dev.racci.minix.api.services/-plugin-service/index.html","searchKeys":["PluginService","interface PluginService","dev.racci.minix.api.services.PluginService"]},{"name":"interface SusPlugin : Plugin, KoinComponent","description":"dev.racci.minix.api.plugin.SusPlugin","location":"Minix-API/dev.racci.minix.api.plugin/-sus-plugin/index.html","searchKeys":["SusPlugin","interface SusPlugin : Plugin, KoinComponent","dev.racci.minix.api.plugin.SusPlugin"]},{"name":"interface SuspendingCommandExecutor","description":"dev.racci.minix.api.coroutine.SuspendingCommandExecutor","location":"Minix-API/dev.racci.minix.api.coroutine/-suspending-command-executor/index.html","searchKeys":["SuspendingCommandExecutor","interface SuspendingCommandExecutor","dev.racci.minix.api.coroutine.SuspendingCommandExecutor"]},{"name":"interface SuspendingTabCompleter","description":"dev.racci.minix.api.coroutine.SuspendingTabCompleter","location":"Minix-API/dev.racci.minix.api.coroutine/-suspending-tab-completer/index.html","searchKeys":["SuspendingTabCompleter","interface SuspendingTabCompleter","dev.racci.minix.api.coroutine.SuspendingTabCompleter"]},{"name":"interface UpdaterService","description":"dev.racci.minix.api.services.UpdaterService","location":"Minix-API/dev.racci.minix.api.services/-updater-service/index.html","searchKeys":["UpdaterService","interface UpdaterService","dev.racci.minix.api.services.UpdaterService"]},{"name":"interface UtilObject : KoinComponent","description":"dev.racci.minix.api.utils.UtilObject","location":"Minix-API/dev.racci.minix.api.utils/-util-object/index.html","searchKeys":["UtilObject","interface UtilObject : KoinComponent","dev.racci.minix.api.utils.UtilObject"]},{"name":"interface VectorComparable<T : VectorComparable<T>> : Comparable<T> ","description":"dev.racci.minix.api.utils.minecraft.VectorComparable","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-vector-comparable/index.html","searchKeys":["VectorComparable","interface VectorComparable<T : VectorComparable<T>> : Comparable<T> ","dev.racci.minix.api.utils.minecraft.VectorComparable"]},{"name":"interface WakeUpBlockService","description":"dev.racci.minix.api.coroutine.contract.WakeUpBlockService","location":"Minix-API/dev.racci.minix.api.coroutine.contract/-wake-up-block-service/index.html","searchKeys":["WakeUpBlockService","interface WakeUpBlockService","dev.racci.minix.api.coroutine.contract.WakeUpBlockService"]},{"name":"interface WithPlugin<T : MinixPlugin> : KoinComponent","description":"dev.racci.minix.api.extensions.WithPlugin","location":"Minix-API/dev.racci.minix.api.extensions/-with-plugin/index.html","searchKeys":["WithPlugin","interface WithPlugin<T : MinixPlugin> : KoinComponent","dev.racci.minix.api.extensions.WithPlugin"]},{"name":"lateinit var name: String","description":"dev.racci.minix.api.data.PluginUpdater.name","location":"Minix-API/dev.racci.minix.api.data/-plugin-updater/name.html","searchKeys":["name","lateinit var name: String","dev.racci.minix.api.data.PluginUpdater.name"]},{"name":"object AttributeModifierSerializer : KSerializer<AttributeModifier> ","description":"dev.racci.minix.api.serializables.AttributeModifierSerializer","location":"Minix-API/dev.racci.minix.api.serializables/-attribute-modifier-serializer/index.html","searchKeys":["AttributeModifierSerializer","object AttributeModifierSerializer : KSerializer<AttributeModifier> ","dev.racci.minix.api.serializables.AttributeModifierSerializer"]},{"name":"object BlockUtils","description":"dev.racci.minix.api.utils.minecraft.BlockUtils","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-block-utils/index.html","searchKeys":["BlockUtils","object BlockUtils","dev.racci.minix.api.utils.minecraft.BlockUtils"]},{"name":"object CharRangeSerializer : RangeSerializer<CharRange> ","description":"dev.racci.minix.api.serializables.CharRangeSerializer","location":"Minix-API/dev.racci.minix.api.serializables/-char-range-serializer/index.html","searchKeys":["CharRangeSerializer","object CharRangeSerializer : RangeSerializer<CharRange> ","dev.racci.minix.api.serializables.CharRangeSerializer"]},{"name":"object CollectionUtils : UtilObject","description":"dev.racci.minix.api.utils.collections.CollectionUtils","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/index.html","searchKeys":["CollectionUtils","object CollectionUtils : UtilObject","dev.racci.minix.api.utils.collections.CollectionUtils"]},{"name":"object Companion","description":"dev.racci.minix.api.data.LangConfig.Companion","location":"Minix-API/dev.racci.minix.api.data/-lang-config/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.data.LangConfig.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.data.PlayerData.Companion","location":"Minix-API/dev.racci.minix.api.data/-player-data/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.data.PlayerData.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.KEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-k-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.KEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.LiquidType.Companion","location":"Minix-API/dev.racci.minix.api.events/-liquid-type/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.LiquidType.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.PlayerDoubleLeftClickEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-player-double-left-click-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.PlayerDoubleLeftClickEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.PlayerDoubleOffhandEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-player-double-offhand-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.PlayerDoubleOffhandEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.PlayerDoubleRightClickEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-player-double-right-click-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.PlayerDoubleRightClickEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.PlayerEnterLiquidEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-player-enter-liquid-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.PlayerEnterLiquidEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.PlayerExitLiquidEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-player-exit-liquid-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.PlayerExitLiquidEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.PlayerLeftClickEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-player-left-click-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.PlayerLeftClickEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.PlayerLightEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-player-light-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.PlayerLightEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.PlayerMoveFullXYZEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-player-move-full-x-y-z-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.PlayerMoveFullXYZEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.PlayerMoveXYZEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-player-move-x-y-z-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.PlayerMoveXYZEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.PlayerOffhandEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-player-offhand-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.PlayerOffhandEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.PlayerRightClickEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-player-right-click-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.PlayerRightClickEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.PlayerShiftDoubleLeftClickEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-player-shift-double-left-click-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.PlayerShiftDoubleLeftClickEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.PlayerShiftDoubleOffhandEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-player-shift-double-offhand-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.PlayerShiftDoubleOffhandEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.PlayerShiftDoubleRightClickEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-player-shift-double-right-click-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.PlayerShiftDoubleRightClickEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.PlayerShiftLeftClickEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-player-shift-left-click-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.PlayerShiftLeftClickEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.PlayerShiftOffhandEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-player-shift-offhand-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.PlayerShiftOffhandEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.PlayerShiftRightClickEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-player-shift-right-click-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.PlayerShiftRightClickEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.PlayerUnloadEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-player-unload-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.PlayerUnloadEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.WorldDayEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-world-day-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.WorldDayEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.events.WorldNightEvent.Companion","location":"Minix-API/dev.racci.minix.api.events/-world-night-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.events.WorldNightEvent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.Companion","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-logging-level/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.plugin.logger.MinixLogger.LoggingLevel.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.serializables.SerializableAttributeModifier.Companion","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-attribute-modifier/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.serializables.SerializableAttributeModifier.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.updater.Version.Companion","location":"Minix-API/dev.racci.minix.api.updater/-version/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.updater.Version.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.updater.providers.BaseOnlineProvider.Companion","location":"Minix-API/dev.racci.minix.api.updater.providers/-base-online-provider/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.updater.providers.BaseOnlineProvider.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.updater.providers.BukkitUpdateProvider.Companion","location":"Minix-API/dev.racci.minix.api.updater.providers/-bukkit-update-provider/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.updater.providers.BukkitUpdateProvider.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.updater.providers.GithubUpdateProvider.Companion","location":"Minix-API/dev.racci.minix.api.updater.providers/-github-update-provider/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.updater.providers.GithubUpdateProvider.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.updater.providers.JenkinsUpdateProvider.Companion","location":"Minix-API/dev.racci.minix.api.updater.providers/-jenkins-update-provider/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.updater.providers.JenkinsUpdateProvider.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateProviderSerializer.Companion","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-provider-serializer/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateProviderSerializer.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.utils.UnsafeUtil.Companion","location":"Minix-API/dev.racci.minix.api.utils/-unsafe-util/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.utils.UnsafeUtil.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.utils.adventure.PartialComponent.Companion","location":"Minix-API/dev.racci.minix.api.utils.adventure/-partial-component/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.utils.adventure.PartialComponent.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.utils.collections.MultiMap.Companion","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.utils.collections.MultiMap.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.utils.minecraft.Pdc.Companion","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pdc/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.utils.minecraft.Pdc.Companion"]},{"name":"object Companion","description":"dev.racci.minix.api.utils.primitive.Legacy.Companion","location":"Minix-API/dev.racci.minix.api.utils.primitive/-legacy/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.api.utils.primitive.Legacy.Companion"]},{"name":"object Companion : CoroutineScheduler","description":"dev.racci.minix.api.scheduler.CoroutineScheduler.Companion","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-scheduler/-companion/index.html","searchKeys":["Companion","object Companion : CoroutineScheduler","dev.racci.minix.api.scheduler.CoroutineScheduler.Companion"]},{"name":"object Companion : Extension.ExtensionCompanion<DataService> ","description":"dev.racci.minix.api.services.DataService.Companion","location":"Minix-API/dev.racci.minix.api.services/-data-service/-companion/index.html","searchKeys":["Companion","object Companion : Extension.ExtensionCompanion<DataService> ","dev.racci.minix.api.services.DataService.Companion"]},{"name":"object Companion : ItemBuilderDSL","description":"dev.racci.minix.api.builders.ItemBuilderDSL.Companion","location":"Minix-API/dev.racci.minix.api.builders/-item-builder-d-s-l/-companion/index.html","searchKeys":["Companion","object Companion : ItemBuilderDSL","dev.racci.minix.api.builders.ItemBuilderDSL.Companion"]},{"name":"object Companion : KoinComponent","description":"dev.racci.minix.api.utils.data.Data.Companion","location":"Minix-API/dev.racci.minix.api.utils.data/-data/-companion/index.html","searchKeys":["Companion","object Companion : KoinComponent","dev.racci.minix.api.utils.data.Data.Companion"]},{"name":"object Companion : PlayerService","description":"dev.racci.minix.api.services.PlayerService.Companion","location":"Minix-API/dev.racci.minix.api.services/-player-service/-companion/index.html","searchKeys":["Companion","object Companion : PlayerService","dev.racci.minix.api.services.PlayerService.Companion"]},{"name":"object Companion : PluginService","description":"dev.racci.minix.api.services.PluginService.Companion","location":"Minix-API/dev.racci.minix.api.services/-plugin-service/-companion/index.html","searchKeys":["Companion","object Companion : PluginService","dev.racci.minix.api.services.PluginService.Companion"]},{"name":"object Companion : UpdaterService","description":"dev.racci.minix.api.services.UpdaterService.Companion","location":"Minix-API/dev.racci.minix.api.services/-updater-service/-companion/index.html","searchKeys":["Companion","object Companion : UpdaterService","dev.racci.minix.api.services.UpdaterService.Companion"]},{"name":"object Companion : UtilObject","description":"dev.racci.minix.api.utils.UtilObject.Companion","location":"Minix-API/dev.racci.minix.api.utils/-util-object/-companion/index.html","searchKeys":["Companion","object Companion : UtilObject","dev.racci.minix.api.utils.UtilObject.Companion"]},{"name":"object ConfigConstraints : UtilObject","description":"dev.racci.minix.api.data.ConfigConstraints","location":"Minix-API/dev.racci.minix.api.data/-config-constraints/index.html","searchKeys":["ConfigConstraints","object ConfigConstraints : UtilObject","dev.racci.minix.api.data.ConfigConstraints"]},{"name":"object Configurate : RangeSerializer.Configurate<CharRange> ","description":"dev.racci.minix.api.serializables.CharRangeSerializer.Configurate","location":"Minix-API/dev.racci.minix.api.serializables/-char-range-serializer/-configurate/index.html","searchKeys":["Configurate","object Configurate : RangeSerializer.Configurate<CharRange> ","dev.racci.minix.api.serializables.CharRangeSerializer.Configurate"]},{"name":"object Configurate : RangeSerializer.Configurate<DoubleRange> ","description":"dev.racci.minix.api.serializables.DoubleRangeSerializer.Configurate","location":"Minix-API/dev.racci.minix.api.serializables/-double-range-serializer/-configurate/index.html","searchKeys":["Configurate","object Configurate : RangeSerializer.Configurate<DoubleRange> ","dev.racci.minix.api.serializables.DoubleRangeSerializer.Configurate"]},{"name":"object Configurate : RangeSerializer.Configurate<FloatRange> ","description":"dev.racci.minix.api.serializables.FloatRangeSerializer.Configurate","location":"Minix-API/dev.racci.minix.api.serializables/-float-range-serializer/-configurate/index.html","searchKeys":["Configurate","object Configurate : RangeSerializer.Configurate<FloatRange> ","dev.racci.minix.api.serializables.FloatRangeSerializer.Configurate"]},{"name":"object Configurate : RangeSerializer.Configurate<IntRange> ","description":"dev.racci.minix.api.serializables.IntRangeSerializer.Configurate","location":"Minix-API/dev.racci.minix.api.serializables/-int-range-serializer/-configurate/index.html","searchKeys":["Configurate","object Configurate : RangeSerializer.Configurate<IntRange> ","dev.racci.minix.api.serializables.IntRangeSerializer.Configurate"]},{"name":"object Configurate : RangeSerializer.Configurate<LongRange> ","description":"dev.racci.minix.api.serializables.LongRangeSerializer.Configurate","location":"Minix-API/dev.racci.minix.api.serializables/-long-range-serializer/-configurate/index.html","searchKeys":["Configurate","object Configurate : RangeSerializer.Configurate<LongRange> ","dev.racci.minix.api.serializables.LongRangeSerializer.Configurate"]},{"name":"object Configurate : TypeSerializer<AttributeModifier> ","description":"dev.racci.minix.api.serializables.AttributeModifierSerializer.Configurate","location":"Minix-API/dev.racci.minix.api.serializables/-attribute-modifier-serializer/-configurate/index.html","searchKeys":["Configurate","object Configurate : TypeSerializer<AttributeModifier> ","dev.racci.minix.api.serializables.AttributeModifierSerializer.Configurate"]},{"name":"object Configurate : TypeSerializer<Duration> ","description":"dev.racci.minix.api.serializables.DurationSerializer.Configurate","location":"Minix-API/dev.racci.minix.api.serializables/-duration-serializer/-configurate/index.html","searchKeys":["Configurate","object Configurate : TypeSerializer<Duration> ","dev.racci.minix.api.serializables.DurationSerializer.Configurate"]},{"name":"object Configurate : TypeSerializer<Enchantment> ","description":"dev.racci.minix.api.serializables.EnchantSerializer.Configurate","location":"Minix-API/dev.racci.minix.api.serializables/-enchant-serializer/-configurate/index.html","searchKeys":["Configurate","object Configurate : TypeSerializer<Enchantment> ","dev.racci.minix.api.serializables.EnchantSerializer.Configurate"]},{"name":"object Configurate : TypeSerializer<Location> ","description":"dev.racci.minix.api.serializables.LocationSerializer.Configurate","location":"Minix-API/dev.racci.minix.api.serializables/-location-serializer/-configurate/index.html","searchKeys":["Configurate","object Configurate : TypeSerializer<Location> ","dev.racci.minix.api.serializables.LocationSerializer.Configurate"]},{"name":"object Configurate : TypeSerializer<NamespacedKey> ","description":"dev.racci.minix.api.serializables.NamespacedKeySerializer.Configurate","location":"Minix-API/dev.racci.minix.api.serializables/-namespaced-key-serializer/-configurate/index.html","searchKeys":["Configurate","object Configurate : TypeSerializer<NamespacedKey> ","dev.racci.minix.api.serializables.NamespacedKeySerializer.Configurate"]},{"name":"object Configurate : TypeSerializer<Pattern> ","description":"dev.racci.minix.api.serializables.PatternSerializer.Configurate","location":"Minix-API/dev.racci.minix.api.serializables/-pattern-serializer/-configurate/index.html","searchKeys":["Configurate","object Configurate : TypeSerializer<Pattern> ","dev.racci.minix.api.serializables.PatternSerializer.Configurate"]},{"name":"object Configurate : TypeSerializer<PotionEffect> ","description":"dev.racci.minix.api.serializables.PotionEffectSerializer.Configurate","location":"Minix-API/dev.racci.minix.api.serializables/-potion-effect-serializer/-configurate/index.html","searchKeys":["Configurate","object Configurate : TypeSerializer<PotionEffect> ","dev.racci.minix.api.serializables.PotionEffectSerializer.Configurate"]},{"name":"object Configurate : TypeSerializer<Vector> ","description":"dev.racci.minix.api.serializables.VectorSerializer.Configurate","location":"Minix-API/dev.racci.minix.api.serializables/-vector-serializer/-configurate/index.html","searchKeys":["Configurate","object Configurate : TypeSerializer<Vector> ","dev.racci.minix.api.serializables.VectorSerializer.Configurate"]},{"name":"object Configurate : TypeSerializer<World> ","description":"dev.racci.minix.api.serializables.WorldSerializer.Configurate","location":"Minix-API/dev.racci.minix.api.serializables/-world-serializer/-configurate/index.html","searchKeys":["Configurate","object Configurate : TypeSerializer<World> ","dev.racci.minix.api.serializables.WorldSerializer.Configurate"]},{"name":"object Console : ConsoleCommandSender","description":"dev.racci.minix.api.extensions.Console","location":"Minix-API/dev.racci.minix.api.extensions/-console/index.html","searchKeys":["Console","object Console : ConsoleCommandSender","dev.racci.minix.api.extensions.Console"]},{"name":"object DoubleRangeSerializer : RangeSerializer<DoubleRange> ","description":"dev.racci.minix.api.serializables.DoubleRangeSerializer","location":"Minix-API/dev.racci.minix.api.serializables/-double-range-serializer/index.html","searchKeys":["DoubleRangeSerializer","object DoubleRangeSerializer : RangeSerializer<DoubleRange> ","dev.racci.minix.api.serializables.DoubleRangeSerializer"]},{"name":"object DurationSerializer : KSerializer<Duration> ","description":"dev.racci.minix.api.serializables.DurationSerializer","location":"Minix-API/dev.racci.minix.api.serializables/-duration-serializer/index.html","searchKeys":["DurationSerializer","object DurationSerializer : KSerializer<Duration> ","dev.racci.minix.api.serializables.DurationSerializer"]},{"name":"object EnchantSerializer : KSerializer<Enchantment> ","description":"dev.racci.minix.api.serializables.EnchantSerializer","location":"Minix-API/dev.racci.minix.api.serializables/-enchant-serializer/index.html","searchKeys":["EnchantSerializer","object EnchantSerializer : KSerializer<Enchantment> ","dev.racci.minix.api.serializables.EnchantSerializer"]},{"name":"object EnumUtils : UtilObject","description":"dev.racci.minix.api.utils.primitive.EnumUtils","location":"Minix-API/dev.racci.minix.api.utils.primitive/-enum-utils/index.html","searchKeys":["EnumUtils","object EnumUtils : UtilObject","dev.racci.minix.api.utils.primitive.EnumUtils"]},{"name":"object FileSystemUtils : UtilObject","description":"dev.racci.minix.api.utils.FileSystemUtils","location":"Minix-API/dev.racci.minix.api.utils/-file-system-utils/index.html","searchKeys":["FileSystemUtils","object FileSystemUtils : UtilObject","dev.racci.minix.api.utils.FileSystemUtils"]},{"name":"object FloatRangeSerializer : RangeSerializer<FloatRange> ","description":"dev.racci.minix.api.serializables.FloatRangeSerializer","location":"Minix-API/dev.racci.minix.api.serializables/-float-range-serializer/index.html","searchKeys":["FloatRangeSerializer","object FloatRangeSerializer : RangeSerializer<FloatRange> ","dev.racci.minix.api.serializables.FloatRangeSerializer"]},{"name":"object IntRangeSerializer : RangeSerializer<IntRange> ","description":"dev.racci.minix.api.serializables.IntRangeSerializer","location":"Minix-API/dev.racci.minix.api.serializables/-int-range-serializer/index.html","searchKeys":["IntRangeSerializer","object IntRangeSerializer : RangeSerializer<IntRange> ","dev.racci.minix.api.serializables.IntRangeSerializer"]},{"name":"object InventoryUtils : UtilObject","description":"dev.racci.minix.api.utils.minecraft.InventoryUtils","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-inventory-utils/index.html","searchKeys":["InventoryUtils","object InventoryUtils : UtilObject","dev.racci.minix.api.utils.minecraft.InventoryUtils"]},{"name":"object ItemNBT","description":"dev.racci.minix.api.utils.minecraft.ItemNBT","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-item-n-b-t/index.html","searchKeys":["ItemNBT","object ItemNBT","dev.racci.minix.api.utils.minecraft.ItemNBT"]},{"name":"object LegacyUtils","description":"dev.racci.minix.api.utils.primitive.LegacyUtils","location":"Minix-API/dev.racci.minix.api.utils.primitive/-legacy-utils/index.html","searchKeys":["LegacyUtils","object LegacyUtils","dev.racci.minix.api.utils.primitive.LegacyUtils"]},{"name":"object LocationSerializer : KSerializer<Location> ","description":"dev.racci.minix.api.serializables.LocationSerializer","location":"Minix-API/dev.racci.minix.api.serializables/-location-serializer/index.html","searchKeys":["LocationSerializer","object LocationSerializer : KSerializer<Location> ","dev.racci.minix.api.serializables.LocationSerializer"]},{"name":"object LoggingLevelSerializer : TypeSerializer<Level> ","description":"dev.racci.minix.api.serializables.LoggingLevelSerializer","location":"Minix-API/dev.racci.minix.api.serializables/-logging-level-serializer/index.html","searchKeys":["LoggingLevelSerializer","object LoggingLevelSerializer : TypeSerializer<Level> ","dev.racci.minix.api.serializables.LoggingLevelSerializer"]},{"name":"object LongRangeSerializer : RangeSerializer<LongRange> ","description":"dev.racci.minix.api.serializables.LongRangeSerializer","location":"Minix-API/dev.racci.minix.api.serializables/-long-range-serializer/index.html","searchKeys":["LongRangeSerializer","object LongRangeSerializer : RangeSerializer<LongRange> ","dev.racci.minix.api.serializables.LongRangeSerializer"]},{"name":"object MaterialTagsExtension","description":"dev.racci.minix.api.utils.minecraft.MaterialTagsExtension","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-material-tags-extension/index.html","searchKeys":["MaterialTagsExtension","object MaterialTagsExtension","dev.racci.minix.api.utils.minecraft.MaterialTagsExtension"]},{"name":"object MathUtils : UtilObject","description":"dev.racci.minix.api.utils.primitive.MathUtils","location":"Minix-API/dev.racci.minix.api.utils.primitive/-math-utils/index.html","searchKeys":["MathUtils","object MathUtils : UtilObject","dev.racci.minix.api.utils.primitive.MathUtils"]},{"name":"object MiniMessageSerializer : KSerializer<Component> ","description":"dev.racci.minix.api.serializables.MiniMessageSerializer","location":"Minix-API/dev.racci.minix.api.serializables/-mini-message-serializer/index.html","searchKeys":["MiniMessageSerializer","object MiniMessageSerializer : KSerializer<Component> ","dev.racci.minix.api.serializables.MiniMessageSerializer"]},{"name":"object Minix : Constraint<MinixConfig.Minix<*>> ","description":"dev.racci.minix.api.data.ConfigConstraints.Minix","location":"Minix-API/dev.racci.minix.api.data/-config-constraints/-minix/index.html","searchKeys":["Minix","object Minix : Constraint<MinixConfig.Minix<*>> ","dev.racci.minix.api.data.ConfigConstraints.Minix"]},{"name":"object NamespacedKeySerializer : KSerializer<NamespacedKey> ","description":"dev.racci.minix.api.serializables.NamespacedKeySerializer","location":"Minix-API/dev.racci.minix.api.serializables/-namespaced-key-serializer/index.html","searchKeys":["NamespacedKeySerializer","object NamespacedKeySerializer : KSerializer<NamespacedKey> ","dev.racci.minix.api.serializables.NamespacedKeySerializer"]},{"name":"object NumberUtils : UtilObject","description":"dev.racci.minix.api.utils.primitive.NumberUtils","location":"Minix-API/dev.racci.minix.api.utils.primitive/-number-utils/index.html","searchKeys":["NumberUtils","object NumberUtils : UtilObject","dev.racci.minix.api.utils.primitive.NumberUtils"]},{"name":"object PairSerializer : TypeSerializer<Pair<*, *>> ","description":"dev.racci.minix.api.serializables.PairSerializer","location":"Minix-API/dev.racci.minix.api.serializables/-pair-serializer/index.html","searchKeys":["PairSerializer","object PairSerializer : TypeSerializer<Pair<*, *>> ","dev.racci.minix.api.serializables.PairSerializer"]},{"name":"object PatternSerializer : KSerializer<Pattern> ","description":"dev.racci.minix.api.serializables.PatternSerializer","location":"Minix-API/dev.racci.minix.api.serializables/-pattern-serializer/index.html","searchKeys":["PatternSerializer","object PatternSerializer : KSerializer<Pattern> ","dev.racci.minix.api.serializables.PatternSerializer"]},{"name":"object PlayerUtils","description":"dev.racci.minix.api.utils.minecraft.PlayerUtils","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-player-utils/index.html","searchKeys":["PlayerUtils","object PlayerUtils","dev.racci.minix.api.utils.minecraft.PlayerUtils"]},{"name":"object PluginUtils : UtilObject","description":"dev.racci.minix.api.utils.minecraft.PluginUtils","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-plugin-utils/index.html","searchKeys":["PluginUtils","object PluginUtils : UtilObject","dev.racci.minix.api.utils.minecraft.PluginUtils"]},{"name":"object PotionEffectSerializer : KSerializer<PotionEffect> ","description":"dev.racci.minix.api.serializables.PotionEffectSerializer","location":"Minix-API/dev.racci.minix.api.serializables/-potion-effect-serializer/index.html","searchKeys":["PotionEffectSerializer","object PotionEffectSerializer : KSerializer<PotionEffect> ","dev.racci.minix.api.serializables.PotionEffectSerializer"]},{"name":"object ProjectileUtils","description":"dev.racci.minix.api.utils.minecraft.ProjectileUtils","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-projectile-utils/index.html","searchKeys":["ProjectileUtils","object ProjectileUtils","dev.racci.minix.api.utils.minecraft.ProjectileUtils"]},{"name":"object Serializer","description":"dev.racci.minix.api.serializables.Serializer","location":"Minix-API/dev.racci.minix.api.serializables/-serializer/index.html","searchKeys":["Serializer","object Serializer","dev.racci.minix.api.serializables.Serializer"]},{"name":"object Serializer : TypeSerializer<Data> ","description":"dev.racci.minix.api.utils.data.Data.Serializer","location":"Minix-API/dev.racci.minix.api.utils.data/-data/-serializer/index.html","searchKeys":["Serializer","object Serializer : TypeSerializer<Data> ","dev.racci.minix.api.utils.data.Data.Serializer"]},{"name":"object Serializer : TypeSerializer<PartialComponent> ","description":"dev.racci.minix.api.utils.adventure.PartialComponent.Serializer","location":"Minix-API/dev.racci.minix.api.utils.adventure/-partial-component/-serializer/index.html","searchKeys":["Serializer","object Serializer : TypeSerializer<PartialComponent> ","dev.racci.minix.api.utils.adventure.PartialComponent.Serializer"]},{"name":"object TameUtils","description":"dev.racci.minix.api.utils.minecraft.TameUtils","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-tame-utils/index.html","searchKeys":["TameUtils","object TameUtils","dev.racci.minix.api.utils.minecraft.TameUtils"]},{"name":"object UUIDSerializer : KSerializer<UUID> ","description":"dev.racci.minix.api.serializables.UUIDSerializer","location":"Minix-API/dev.racci.minix.api.serializables/-u-u-i-d-serializer/index.html","searchKeys":["UUIDSerializer","object UUIDSerializer : KSerializer<UUID> ","dev.racci.minix.api.serializables.UUIDSerializer"]},{"name":"object VectorSerializer : KSerializer<Vector> ","description":"dev.racci.minix.api.serializables.VectorSerializer","location":"Minix-API/dev.racci.minix.api.serializables/-vector-serializer/index.html","searchKeys":["VectorSerializer","object VectorSerializer : KSerializer<Vector> ","dev.racci.minix.api.serializables.VectorSerializer"]},{"name":"object WorldSerializer : KSerializer<World> ","description":"dev.racci.minix.api.serializables.WorldSerializer","location":"Minix-API/dev.racci.minix.api.serializables/-world-serializer/index.html","searchKeys":["WorldSerializer","object WorldSerializer : KSerializer<World> ","dev.racci.minix.api.serializables.WorldSerializer"]},{"name":"open fun add(player: Player, whenPlayerQuit: WhenPlayerQuitCollectionCallback): Boolean","description":"dev.racci.minix.api.utils.collections.OnlinePlayerCollection.add","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-collection/add.html","searchKeys":["add","open fun add(player: Player, whenPlayerQuit: WhenPlayerQuitCollectionCallback): Boolean","dev.racci.minix.api.utils.collections.OnlinePlayerCollection.add"]},{"name":"open fun checkRegistration()","description":"dev.racci.minix.api.utils.collections.OnlinePlayerCollection.checkRegistration","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-collection/check-registration.html","searchKeys":["checkRegistration","open fun checkRegistration()","dev.racci.minix.api.utils.collections.OnlinePlayerCollection.checkRegistration"]},{"name":"open fun clearQuiting()","description":"dev.racci.minix.api.utils.collections.OnlinePlayerCollection.clearQuiting","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-collection/clear-quiting.html","searchKeys":["clearQuiting","open fun clearQuiting()","dev.racci.minix.api.utils.collections.OnlinePlayerCollection.clearQuiting"]},{"name":"open fun close(): T?","description":"dev.racci.minix.api.utils.Closeable.close","location":"Minix-API/dev.racci.minix.api.utils/-closeable/close.html","searchKeys":["close","open fun close(): T?","dev.racci.minix.api.utils.Closeable.close"]},{"name":"open fun debug(t: Throwable? = null, scope: String? = null, msg: () -> Any?)","description":"dev.racci.minix.api.plugin.logger.MinixLogger.debug","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/debug.html","searchKeys":["debug","open fun debug(t: Throwable? = null, scope: String? = null, msg: () -> Any?)","dev.racci.minix.api.plugin.logger.MinixLogger.debug"]},{"name":"open fun debug(t: Throwable? = null, scope: String? = null, msg: String? = null)","description":"dev.racci.minix.api.plugin.logger.MinixLogger.debug","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/debug.html","searchKeys":["debug","open fun debug(t: Throwable? = null, scope: String? = null, msg: String? = null)","dev.racci.minix.api.plugin.logger.MinixLogger.debug"]},{"name":"open fun error(t: Throwable? = null, scope: String? = null, msg: () -> Any?)","description":"dev.racci.minix.api.plugin.logger.MinixLogger.error","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/error.html","searchKeys":["error","open fun error(t: Throwable? = null, scope: String? = null, msg: () -> Any?)","dev.racci.minix.api.plugin.logger.MinixLogger.error"]},{"name":"open fun error(t: Throwable? = null, scope: String? = null, msg: String? = null)","description":"dev.racci.minix.api.plugin.logger.MinixLogger.error","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/error.html","searchKeys":["error","open fun error(t: Throwable? = null, scope: String? = null, msg: String? = null)","dev.racci.minix.api.plugin.logger.MinixLogger.error"]},{"name":"open fun fatal(t: Throwable? = null, scope: String? = null, msg: () -> Any?): RuntimeException","description":"dev.racci.minix.api.plugin.logger.MinixLogger.fatal","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/fatal.html","searchKeys":["fatal","open fun fatal(t: Throwable? = null, scope: String? = null, msg: () -> Any?): RuntimeException","dev.racci.minix.api.plugin.logger.MinixLogger.fatal"]},{"name":"open fun fatal(t: Throwable? = null, scope: String? = null, msg: String? = null): RuntimeException","description":"dev.racci.minix.api.plugin.logger.MinixLogger.fatal","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/fatal.html","searchKeys":["fatal","open fun fatal(t: Throwable? = null, scope: String? = null, msg: String? = null): RuntimeException","dev.racci.minix.api.plugin.logger.MinixLogger.fatal"]},{"name":"open fun handleLoad()","description":"dev.racci.minix.api.data.MinixConfig.handleLoad","location":"Minix-API/dev.racci.minix.api.data/-minix-config/handle-load.html","searchKeys":["handleLoad","open fun handleLoad()","dev.racci.minix.api.data.MinixConfig.handleLoad"]},{"name":"open fun handleUnload()","description":"dev.racci.minix.api.data.MinixConfig.handleUnload","location":"Minix-API/dev.racci.minix.api.data/-minix-config/handle-unload.html","searchKeys":["handleUnload","open fun handleUnload()","dev.racci.minix.api.data.MinixConfig.handleUnload"]},{"name":"open fun info(t: Throwable? = null, scope: String? = null, msg: () -> Any?)","description":"dev.racci.minix.api.plugin.logger.MinixLogger.info","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/info.html","searchKeys":["info","open fun info(t: Throwable? = null, scope: String? = null, msg: () -> Any?)","dev.racci.minix.api.plugin.logger.MinixLogger.info"]},{"name":"open fun info(t: Throwable? = null, scope: String? = null, msg: String? = null)","description":"dev.racci.minix.api.plugin.logger.MinixLogger.info","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/info.html","searchKeys":["info","open fun info(t: Throwable? = null, scope: String? = null, msg: String? = null)","dev.racci.minix.api.plugin.logger.MinixLogger.info"]},{"name":"open fun load()","description":"dev.racci.minix.api.data.MinixConfig.load","location":"Minix-API/dev.racci.minix.api.data/-minix-config/load.html","searchKeys":["load","open fun load()","dev.racci.minix.api.data.MinixConfig.load"]},{"name":"open fun log(message: MinixLogger.FormattedMessage)","description":"dev.racci.minix.api.plugin.logger.MinixLogger.log","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/log.html","searchKeys":["log","open fun log(message: MinixLogger.FormattedMessage)","dev.racci.minix.api.plugin.logger.MinixLogger.log"]},{"name":"open fun onClose()","description":"dev.racci.minix.api.utils.Closeable.onClose","location":"Minix-API/dev.racci.minix.api.utils/-closeable/on-close.html","searchKeys":["onClose","open fun onClose()","dev.racci.minix.api.utils.Closeable.onClose"]},{"name":"open fun onUnload()","description":"dev.racci.minix.api.utils.Loadable.onUnload","location":"Minix-API/dev.racci.minix.api.utils/-loadable/on-unload.html","searchKeys":["onUnload","open fun onUnload()","dev.racci.minix.api.utils.Loadable.onUnload"]},{"name":"open fun quit(player: Player): Boolean","description":"dev.racci.minix.api.utils.collections.OnlinePlayerCollection.quit","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-collection/quit.html","searchKeys":["quit","open fun quit(player: Player): Boolean","dev.racci.minix.api.utils.collections.OnlinePlayerCollection.quit"]},{"name":"open fun trace(t: Throwable? = null, scope: String? = null, msg: () -> Any?)","description":"dev.racci.minix.api.plugin.logger.MinixLogger.trace","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/trace.html","searchKeys":["trace","open fun trace(t: Throwable? = null, scope: String? = null, msg: () -> Any?)","dev.racci.minix.api.plugin.logger.MinixLogger.trace"]},{"name":"open fun trace(t: Throwable? = null, scope: String? = null, msg: String? = null)","description":"dev.racci.minix.api.plugin.logger.MinixLogger.trace","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/trace.html","searchKeys":["trace","open fun trace(t: Throwable? = null, scope: String? = null, msg: String? = null)","dev.racci.minix.api.plugin.logger.MinixLogger.trace"]},{"name":"open fun updateCallback(kPop: KProperty<*>, value: Any?)","description":"dev.racci.minix.api.data.MinixConfig.updateCallback","location":"Minix-API/dev.racci.minix.api.data/-minix-config/update-callback.html","searchKeys":["updateCallback","open fun updateCallback(kPop: KProperty<*>, value: Any?)","dev.racci.minix.api.data.MinixConfig.updateCallback"]},{"name":"open fun warn(t: Throwable? = null, scope: String? = null, msg: () -> Any?)","description":"dev.racci.minix.api.plugin.logger.MinixLogger.warn","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/warn.html","searchKeys":["warn","open fun warn(t: Throwable? = null, scope: String? = null, msg: () -> Any?)","dev.racci.minix.api.plugin.logger.MinixLogger.warn"]},{"name":"open fun warn(t: Throwable? = null, scope: String? = null, msg: String? = null)","description":"dev.racci.minix.api.plugin.logger.MinixLogger.warn","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/warn.html","searchKeys":["warn","open fun warn(t: Throwable? = null, scope: String? = null, msg: String? = null)","dev.racci.minix.api.plugin.logger.MinixLogger.warn"]},{"name":"open lateinit override var plugin: P","description":"dev.racci.minix.api.data.MinixConfig.plugin","location":"Minix-API/dev.racci.minix.api.data/-minix-config/plugin.html","searchKeys":["plugin","open lateinit override var plugin: P","dev.racci.minix.api.data.MinixConfig.plugin"]},{"name":"open operator fun rangeTo(other: T): PosRange<T, T>","description":"dev.racci.minix.api.utils.minecraft.VectorComparable.rangeTo","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-vector-comparable/range-to.html","searchKeys":["rangeTo","open operator fun rangeTo(other: T): PosRange<T, T>","dev.racci.minix.api.utils.minecraft.VectorComparable.rangeTo"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Block","description":"dev.racci.minix.api.utils.exposed.BlockExposedDelegate.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-exposed-delegate/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Block","dev.racci.minix.api.utils.exposed.BlockExposedDelegate.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Block","description":"dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegate.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-multi-column-exposed-delegate/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Block","dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegate.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Block?","description":"dev.racci.minix.api.utils.exposed.BlockExposedDelegateNullable.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-exposed-delegate-nullable/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Block?","dev.racci.minix.api.utils.exposed.BlockExposedDelegateNullable.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Block?","description":"dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegateNullable.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-multi-column-exposed-delegate-nullable/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Block?","dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegateNullable.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): BlockPos","description":"dev.racci.minix.api.utils.exposed.BlockPosExposedDelegate.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-exposed-delegate/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): BlockPos","dev.racci.minix.api.utils.exposed.BlockPosExposedDelegate.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): BlockPos","description":"dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegate.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-multi-column-exposed-delegate/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): BlockPos","dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegate.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): BlockPos?","description":"dev.racci.minix.api.utils.exposed.BlockPosExposedDelegateNullable.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-exposed-delegate-nullable/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): BlockPos?","dev.racci.minix.api.utils.exposed.BlockPosExposedDelegateNullable.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): BlockPos?","description":"dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegateNullable.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-multi-column-exposed-delegate-nullable/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): BlockPos?","dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegateNullable.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Chunk","description":"dev.racci.minix.api.utils.exposed.ChunkExposedDelegate.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-exposed-delegate/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Chunk","dev.racci.minix.api.utils.exposed.ChunkExposedDelegate.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Chunk","description":"dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegate.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-multi-column-exposed-delegate/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Chunk","dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegate.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Chunk?","description":"dev.racci.minix.api.utils.exposed.ChunkExposedDelegateNullable.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-exposed-delegate-nullable/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Chunk?","dev.racci.minix.api.utils.exposed.ChunkExposedDelegateNullable.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Chunk?","description":"dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegateNullable.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-multi-column-exposed-delegate-nullable/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Chunk?","dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegateNullable.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): ChunkPos","description":"dev.racci.minix.api.utils.exposed.ChunkPosExposedDelegate.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-exposed-delegate/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): ChunkPos","dev.racci.minix.api.utils.exposed.ChunkPosExposedDelegate.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): ChunkPos","description":"dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegate.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-multi-column-exposed-delegate/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): ChunkPos","dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegate.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): ChunkPos?","description":"dev.racci.minix.api.utils.exposed.ChunkPosExposedDelegateNullable.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-exposed-delegate-nullable/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): ChunkPos?","dev.racci.minix.api.utils.exposed.ChunkPosExposedDelegateNullable.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): ChunkPos?","description":"dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegateNullable.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-multi-column-exposed-delegate-nullable/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): ChunkPos?","dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegateNullable.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): ItemStack","description":"dev.racci.minix.api.utils.exposed.ItemStackExposedDelegate.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-item-stack-exposed-delegate/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): ItemStack","dev.racci.minix.api.utils.exposed.ItemStackExposedDelegate.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): ItemStack?","description":"dev.racci.minix.api.utils.exposed.ItemStackExposedDelegateNullable.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-item-stack-exposed-delegate-nullable/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): ItemStack?","dev.racci.minix.api.utils.exposed.ItemStackExposedDelegateNullable.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Location","description":"dev.racci.minix.api.utils.exposed.LocationExposedDelegate.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-exposed-delegate/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Location","dev.racci.minix.api.utils.exposed.LocationExposedDelegate.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Location","description":"dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegate.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-multi-column-exposed-delegate/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Location","dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegate.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Location?","description":"dev.racci.minix.api.utils.exposed.LocationExposedDelegateNullable.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-exposed-delegate-nullable/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Location?","dev.racci.minix.api.utils.exposed.LocationExposedDelegateNullable.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Location?","description":"dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegateNullable.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-multi-column-exposed-delegate-nullable/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): Location?","dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegateNullable.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): LocationPos","description":"dev.racci.minix.api.utils.exposed.LocationPosExposedDelegate.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-exposed-delegate/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): LocationPos","dev.racci.minix.api.utils.exposed.LocationPosExposedDelegate.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): LocationPos","description":"dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegate.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-multi-column-exposed-delegate/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): LocationPos","dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegate.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): LocationPos?","description":"dev.racci.minix.api.utils.exposed.LocationPosExposedDelegateNullable.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-exposed-delegate-nullable/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): LocationPos?","dev.racci.minix.api.utils.exposed.LocationPosExposedDelegateNullable.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): LocationPos?","description":"dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegateNullable.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-multi-column-exposed-delegate-nullable/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): LocationPos?","dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegateNullable.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): OfflinePlayer","description":"dev.racci.minix.api.utils.exposed.OfflinePlayerExposedDelegate.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-offline-player-exposed-delegate/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): OfflinePlayer","dev.racci.minix.api.utils.exposed.OfflinePlayerExposedDelegate.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): OfflinePlayer?","description":"dev.racci.minix.api.utils.exposed.OfflinePlayerExposedDelegateNullable.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-offline-player-exposed-delegate-nullable/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): OfflinePlayer?","dev.racci.minix.api.utils.exposed.OfflinePlayerExposedDelegateNullable.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): T","description":"dev.racci.minix.api.utils.exposed.CachedExposedDelegate.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-cached-exposed-delegate/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): T","dev.racci.minix.api.utils.exposed.CachedExposedDelegate.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): World","description":"dev.racci.minix.api.utils.exposed.WorldExposedDelegate.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-world-exposed-delegate/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): World","dev.racci.minix.api.utils.exposed.WorldExposedDelegate.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): World?","description":"dev.racci.minix.api.utils.exposed.WorldExposedDelegateNullable.getValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-world-exposed-delegate-nullable/get-value.html","searchKeys":["getValue","open operator override fun <ID : Comparable<ID>> getValue(entity: Entity<ID>, desc: KProperty<*>): World?","dev.racci.minix.api.utils.exposed.WorldExposedDelegateNullable.getValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Block)","description":"dev.racci.minix.api.utils.exposed.BlockExposedDelegate.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-exposed-delegate/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Block)","dev.racci.minix.api.utils.exposed.BlockExposedDelegate.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Block)","description":"dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegate.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-multi-column-exposed-delegate/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Block)","dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegate.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Block?)","description":"dev.racci.minix.api.utils.exposed.BlockExposedDelegateNullable.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-exposed-delegate-nullable/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Block?)","dev.racci.minix.api.utils.exposed.BlockExposedDelegateNullable.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Block?)","description":"dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegateNullable.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-multi-column-exposed-delegate-nullable/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Block?)","dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegateNullable.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: BlockPos)","description":"dev.racci.minix.api.utils.exposed.BlockPosExposedDelegate.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-exposed-delegate/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: BlockPos)","dev.racci.minix.api.utils.exposed.BlockPosExposedDelegate.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: BlockPos)","description":"dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegate.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-multi-column-exposed-delegate/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: BlockPos)","dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegate.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: BlockPos?)","description":"dev.racci.minix.api.utils.exposed.BlockPosExposedDelegateNullable.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-exposed-delegate-nullable/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: BlockPos?)","dev.racci.minix.api.utils.exposed.BlockPosExposedDelegateNullable.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: BlockPos?)","description":"dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegateNullable.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-multi-column-exposed-delegate-nullable/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: BlockPos?)","dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegateNullable.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Chunk)","description":"dev.racci.minix.api.utils.exposed.ChunkExposedDelegate.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-exposed-delegate/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Chunk)","dev.racci.minix.api.utils.exposed.ChunkExposedDelegate.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Chunk)","description":"dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegate.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-multi-column-exposed-delegate/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Chunk)","dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegate.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Chunk?)","description":"dev.racci.minix.api.utils.exposed.ChunkExposedDelegateNullable.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-exposed-delegate-nullable/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Chunk?)","dev.racci.minix.api.utils.exposed.ChunkExposedDelegateNullable.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Chunk?)","description":"dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegateNullable.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-multi-column-exposed-delegate-nullable/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Chunk?)","dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegateNullable.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: ChunkPos)","description":"dev.racci.minix.api.utils.exposed.ChunkPosExposedDelegate.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-exposed-delegate/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: ChunkPos)","dev.racci.minix.api.utils.exposed.ChunkPosExposedDelegate.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: ChunkPos)","description":"dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegate.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-multi-column-exposed-delegate/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: ChunkPos)","dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegate.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: ChunkPos?)","description":"dev.racci.minix.api.utils.exposed.ChunkPosExposedDelegateNullable.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-exposed-delegate-nullable/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: ChunkPos?)","dev.racci.minix.api.utils.exposed.ChunkPosExposedDelegateNullable.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: ChunkPos?)","description":"dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegateNullable.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-multi-column-exposed-delegate-nullable/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: ChunkPos?)","dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegateNullable.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: ItemStack)","description":"dev.racci.minix.api.utils.exposed.ItemStackExposedDelegate.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-item-stack-exposed-delegate/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: ItemStack)","dev.racci.minix.api.utils.exposed.ItemStackExposedDelegate.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: ItemStack?)","description":"dev.racci.minix.api.utils.exposed.ItemStackExposedDelegateNullable.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-item-stack-exposed-delegate-nullable/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: ItemStack?)","dev.racci.minix.api.utils.exposed.ItemStackExposedDelegateNullable.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Location)","description":"dev.racci.minix.api.utils.exposed.LocationExposedDelegate.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-exposed-delegate/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Location)","dev.racci.minix.api.utils.exposed.LocationExposedDelegate.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Location)","description":"dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegate.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-multi-column-exposed-delegate/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Location)","dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegate.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Location?)","description":"dev.racci.minix.api.utils.exposed.LocationExposedDelegateNullable.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-exposed-delegate-nullable/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Location?)","dev.racci.minix.api.utils.exposed.LocationExposedDelegateNullable.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Location?)","description":"dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegateNullable.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-multi-column-exposed-delegate-nullable/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: Location?)","dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegateNullable.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: LocationPos)","description":"dev.racci.minix.api.utils.exposed.LocationPosExposedDelegate.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-exposed-delegate/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: LocationPos)","dev.racci.minix.api.utils.exposed.LocationPosExposedDelegate.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: LocationPos)","description":"dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegate.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-multi-column-exposed-delegate/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: LocationPos)","dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegate.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: LocationPos?)","description":"dev.racci.minix.api.utils.exposed.LocationPosExposedDelegateNullable.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-exposed-delegate-nullable/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: LocationPos?)","dev.racci.minix.api.utils.exposed.LocationPosExposedDelegateNullable.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: LocationPos?)","description":"dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegateNullable.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-multi-column-exposed-delegate-nullable/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: LocationPos?)","dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegateNullable.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: OfflinePlayer)","description":"dev.racci.minix.api.utils.exposed.OfflinePlayerExposedDelegate.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-offline-player-exposed-delegate/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: OfflinePlayer)","dev.racci.minix.api.utils.exposed.OfflinePlayerExposedDelegate.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: OfflinePlayer?)","description":"dev.racci.minix.api.utils.exposed.OfflinePlayerExposedDelegateNullable.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-offline-player-exposed-delegate-nullable/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: OfflinePlayer?)","dev.racci.minix.api.utils.exposed.OfflinePlayerExposedDelegateNullable.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: T)","description":"dev.racci.minix.api.utils.exposed.CachedExposedDelegate.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-cached-exposed-delegate/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: T)","dev.racci.minix.api.utils.exposed.CachedExposedDelegate.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: World)","description":"dev.racci.minix.api.utils.exposed.WorldExposedDelegate.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-world-exposed-delegate/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: World)","dev.racci.minix.api.utils.exposed.WorldExposedDelegate.setValue"]},{"name":"open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: World?)","description":"dev.racci.minix.api.utils.exposed.WorldExposedDelegateNullable.setValue","location":"Minix-API/dev.racci.minix.api.utils.exposed/-world-exposed-delegate-nullable/set-value.html","searchKeys":["setValue","open operator override fun <ID : Comparable<ID>> setValue(entity: Entity<ID>, desc: KProperty<*>, value: World?)","dev.racci.minix.api.utils.exposed.WorldExposedDelegateNullable.setValue"]},{"name":"open operator override fun compareTo(other: Data): Int","description":"dev.racci.minix.api.utils.data.Data.compareTo","location":"Minix-API/dev.racci.minix.api.utils.data/-data/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Data): Int","dev.racci.minix.api.utils.data.Data.compareTo"]},{"name":"open operator override fun compareTo(other: MCVersion): Int","description":"dev.racci.minix.api.utils.minecraft.MCVersion.compareTo","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: MCVersion): Int","dev.racci.minix.api.utils.minecraft.MCVersion.compareTo"]},{"name":"open operator override fun compareTo(other: T): Int","description":"dev.racci.minix.api.utils.minecraft.VectorComparable.compareTo","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-vector-comparable/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: T): Int","dev.racci.minix.api.utils.minecraft.VectorComparable.compareTo"]},{"name":"open operator override fun compareTo(other: Version): Int","description":"dev.racci.minix.api.updater.Version.compareTo","location":"Minix-API/dev.racci.minix.api.updater/-version/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Version): Int","dev.racci.minix.api.updater.Version.compareTo"]},{"name":"open operator override fun contains(element: E): Boolean","description":"dev.racci.minix.api.utils.collections.ExpirationListImpl.contains","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list-impl/contains.html","searchKeys":["contains","open operator override fun contains(element: E): Boolean","dev.racci.minix.api.utils.collections.ExpirationListImpl.contains"]},{"name":"open operator override fun contains(value: POS): Boolean","description":"dev.racci.minix.api.utils.minecraft.PosRange.contains","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pos-range/contains.html","searchKeys":["contains","open operator override fun contains(value: POS): Boolean","dev.racci.minix.api.utils.minecraft.PosRange.contains"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.racci.minix.api.data.PluginUpdater.equals","location":"Minix-API/dev.racci.minix.api.data/-plugin-updater/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.racci.minix.api.data.PluginUpdater.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.racci.minix.api.updater.Version.equals","location":"Minix-API/dev.racci.minix.api.updater/-version/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.racci.minix.api.updater.Version.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.equals","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-file/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.racci.minix.api.utils.data.Data.equals","location":"Minix-API/dev.racci.minix.api.utils.data/-data/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.racci.minix.api.utils.data.Data.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"dev.racci.minix.api.utils.minecraft.MCVersion.equals","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","dev.racci.minix.api.utils.minecraft.MCVersion.equals"]},{"name":"open operator override fun get(index: Int): E?","description":"dev.racci.minix.api.utils.collections.ExpirationListImpl.get","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list-impl/get.html","searchKeys":["get","open operator override fun get(index: Int): E?","dev.racci.minix.api.utils.collections.ExpirationListImpl.get"]},{"name":"open operator override fun getValue(thisRef: MinixPlugin, property: KProperty<*>): T","description":"dev.racci.minix.api.utils.minecraft.PluginUtils.DependencyDelegate.getValue","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-plugin-utils/-dependency-delegate/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: MinixPlugin, property: KProperty<*>): T","dev.racci.minix.api.utils.minecraft.PluginUtils.DependencyDelegate.getValue"]},{"name":"open operator override fun getValue(thisRef: MinixPlugin, property: KProperty<*>): T?","description":"dev.racci.minix.api.utils.minecraft.PluginUtils.SoftDependencyDelegate.getValue","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-plugin-utils/-soft-dependency-delegate/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: MinixPlugin, property: KProperty<*>): T?","dev.racci.minix.api.utils.minecraft.PluginUtils.SoftDependencyDelegate.getValue"]},{"name":"open operator override fun hasNext(): Boolean","description":"dev.racci.minix.api.utils.minecraft.PosRangeIterator.hasNext","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pos-range-iterator/has-next.html","searchKeys":["hasNext","open operator override fun hasNext(): Boolean","dev.racci.minix.api.utils.minecraft.PosRangeIterator.hasNext"]},{"name":"open operator override fun hasNext(): Boolean","description":"dev.racci.minix.api.utils.minecraft.RangeIteratorWithFactor.hasNext","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-range-iterator-with-factor/has-next.html","searchKeys":["hasNext","open operator override fun hasNext(): Boolean","dev.racci.minix.api.utils.minecraft.RangeIteratorWithFactor.hasNext"]},{"name":"open operator override fun iterator(): Iterator<T>","description":"dev.racci.minix.api.utils.minecraft.PosRange.iterator","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pos-range/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<T>","dev.racci.minix.api.utils.minecraft.PosRange.iterator"]},{"name":"open operator override fun iterator(): MutableIterator<E>","description":"dev.racci.minix.api.utils.collections.ExpirationListImpl.iterator","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list-impl/iterator.html","searchKeys":["iterator","open operator override fun iterator(): MutableIterator<E>","dev.racci.minix.api.utils.collections.ExpirationListImpl.iterator"]},{"name":"open operator override fun iterator(): MutableIterator<T>","description":"dev.racci.minix.api.utils.collections.ObservableSet.iterator","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-set/iterator.html","searchKeys":["iterator","open operator override fun iterator(): MutableIterator<T>","dev.racci.minix.api.utils.collections.ObservableSet.iterator"]},{"name":"open operator override fun next(): T","description":"dev.racci.minix.api.utils.minecraft.PosRangeIterator.next","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pos-range-iterator/next.html","searchKeys":["next","open operator override fun next(): T","dev.racci.minix.api.utils.minecraft.PosRangeIterator.next"]},{"name":"open operator override fun next(): T","description":"dev.racci.minix.api.utils.minecraft.RangeIteratorWithFactor.next","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-range-iterator-with-factor/next.html","searchKeys":["next","open operator override fun next(): T","dev.racci.minix.api.utils.minecraft.RangeIteratorWithFactor.next"]},{"name":"open operator override fun set(index: Int, element: T): T","description":"dev.racci.minix.api.utils.collections.ObservableList.set","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-list/set.html","searchKeys":["set","open operator override fun set(index: Int, element: T): T","dev.racci.minix.api.utils.collections.ObservableList.set"]},{"name":"open override fun add(element: E, expireTime: Int, onExpire: OnExpireCallback<E>?)","description":"dev.racci.minix.api.utils.collections.ExpirationListImpl.add","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list-impl/add.html","searchKeys":["add","open override fun add(element: E, expireTime: Int, onExpire: OnExpireCallback<E>?)","dev.racci.minix.api.utils.collections.ExpirationListImpl.add"]},{"name":"open override fun add(element: Player): Boolean","description":"dev.racci.minix.api.utils.collections.OnlinePlayerList.add","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-list/add.html","searchKeys":["add","open override fun add(element: Player): Boolean","dev.racci.minix.api.utils.collections.OnlinePlayerList.add"]},{"name":"open override fun add(element: Player): Boolean","description":"dev.racci.minix.api.utils.collections.OnlinePlayerSet.add","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-set/add.html","searchKeys":["add","open override fun add(element: Player): Boolean","dev.racci.minix.api.utils.collections.OnlinePlayerSet.add"]},{"name":"open override fun add(element: T)","description":"dev.racci.minix.api.utils.collections.ObservableMutableListIterator.add","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-mutable-list-iterator/add.html","searchKeys":["add","open override fun add(element: T)","dev.racci.minix.api.utils.collections.ObservableMutableListIterator.add"]},{"name":"open override fun add(element: T): Boolean","description":"dev.racci.minix.api.collections.ExpiringArray.add","location":"Minix-API/dev.racci.minix.api.collections/-expiring-array/add.html","searchKeys":["add","open override fun add(element: T): Boolean","dev.racci.minix.api.collections.ExpiringArray.add"]},{"name":"open override fun add(element: T): Boolean","description":"dev.racci.minix.api.utils.collections.ObservableList.add","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-list/add.html","searchKeys":["add","open override fun add(element: T): Boolean","dev.racci.minix.api.utils.collections.ObservableList.add"]},{"name":"open override fun add(element: T): Boolean","description":"dev.racci.minix.api.utils.collections.ObservableSet.add","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-set/add.html","searchKeys":["add","open override fun add(element: T): Boolean","dev.racci.minix.api.utils.collections.ObservableSet.add"]},{"name":"open override fun add(index: Int, element: T)","description":"dev.racci.minix.api.utils.collections.ObservableList.add","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-list/add.html","searchKeys":["add","open override fun add(index: Int, element: T)","dev.racci.minix.api.utils.collections.ObservableList.add"]},{"name":"open override fun add(player: Player, whenPlayerQuit: Player.() -> Unit): Boolean","description":"dev.racci.minix.api.utils.collections.OnlinePlayerList.add","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-list/add.html","searchKeys":["add","open override fun add(player: Player, whenPlayerQuit: Player.() -> Unit): Boolean","dev.racci.minix.api.utils.collections.OnlinePlayerList.add"]},{"name":"open override fun add(player: Player, whenPlayerQuit: WhenPlayerQuitCollectionCallback): Boolean","description":"dev.racci.minix.api.utils.collections.OnlinePlayerSet.add","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-set/add.html","searchKeys":["add","open override fun add(player: Player, whenPlayerQuit: WhenPlayerQuitCollectionCallback): Boolean","dev.racci.minix.api.utils.collections.OnlinePlayerSet.add"]},{"name":"open override fun addAll(elements: Collection<T>): Boolean","description":"dev.racci.minix.api.utils.collections.ObservableList.addAll","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-list/add-all.html","searchKeys":["addAll","open override fun addAll(elements: Collection<T>): Boolean","dev.racci.minix.api.utils.collections.ObservableList.addAll"]},{"name":"open override fun addAll(elements: Collection<T>): Boolean","description":"dev.racci.minix.api.utils.collections.ObservableSet.addAll","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-set/add-all.html","searchKeys":["addAll","open override fun addAll(elements: Collection<T>): Boolean","dev.racci.minix.api.utils.collections.ObservableSet.addAll"]},{"name":"open override fun addAll(index: Int, elements: Collection<T>): Boolean","description":"dev.racci.minix.api.utils.collections.ObservableList.addAll","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-list/add-all.html","searchKeys":["addAll","open override fun addAll(index: Int, elements: Collection<T>): Boolean","dev.racci.minix.api.utils.collections.ObservableList.addAll"]},{"name":"open override fun addFirst(element: E, expireTime: Int, onExpire: OnExpireCallback<E>?)","description":"dev.racci.minix.api.utils.collections.ExpirationListImpl.addFirst","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list-impl/add-first.html","searchKeys":["addFirst","open override fun addFirst(element: E, expireTime: Int, onExpire: OnExpireCallback<E>?)","dev.racci.minix.api.utils.collections.ExpirationListImpl.addFirst"]},{"name":"open override fun allowsChildren(): Boolean","description":"dev.racci.minix.api.utils.adventure.LazyComponentReplacement.allowsChildren","location":"Minix-API/dev.racci.minix.api.utils.adventure/-lazy-component-replacement/allows-children.html","searchKeys":["allowsChildren","open override fun allowsChildren(): Boolean","dev.racci.minix.api.utils.adventure.LazyComponentReplacement.allowsChildren"]},{"name":"open override fun axis(): DoubleArray","description":"dev.racci.minix.api.utils.minecraft.BlockPos.axis","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-block-pos/axis.html","searchKeys":["axis","open override fun axis(): DoubleArray","dev.racci.minix.api.utils.minecraft.BlockPos.axis"]},{"name":"open override fun axis(): DoubleArray","description":"dev.racci.minix.api.utils.minecraft.ChunkPos.axis","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-chunk-pos/axis.html","searchKeys":["axis","open override fun axis(): DoubleArray","dev.racci.minix.api.utils.minecraft.ChunkPos.axis"]},{"name":"open override fun axis(): DoubleArray","description":"dev.racci.minix.api.utils.minecraft.LocationPos.axis","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-location-pos/axis.html","searchKeys":["axis","open override fun axis(): DoubleArray","dev.racci.minix.api.utils.minecraft.LocationPos.axis"]},{"name":"open override fun clear()","description":"dev.racci.minix.api.utils.collections.ExpirationListImpl.clear","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list-impl/clear.html","searchKeys":["clear","open override fun clear()","dev.racci.minix.api.utils.collections.ExpirationListImpl.clear"]},{"name":"open override fun clear()","description":"dev.racci.minix.api.utils.collections.ObservableList.clear","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-list/clear.html","searchKeys":["clear","open override fun clear()","dev.racci.minix.api.utils.collections.ObservableList.clear"]},{"name":"open override fun clear()","description":"dev.racci.minix.api.utils.collections.ObservableMap.clear","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-map/clear.html","searchKeys":["clear","open override fun clear()","dev.racci.minix.api.utils.collections.ObservableMap.clear"]},{"name":"open override fun clear()","description":"dev.racci.minix.api.utils.collections.ObservableSet.clear","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-set/clear.html","searchKeys":["clear","open override fun clear()","dev.racci.minix.api.utils.collections.ObservableSet.clear"]},{"name":"open override fun deserialize(decoder: Decoder): AttributeModifier","description":"dev.racci.minix.api.serializables.AttributeModifierSerializer.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-attribute-modifier-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): AttributeModifier","dev.racci.minix.api.serializables.AttributeModifierSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): CharRange","description":"dev.racci.minix.api.serializables.CharRangeSerializer.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-char-range-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): CharRange","dev.racci.minix.api.serializables.CharRangeSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Component","description":"dev.racci.minix.api.serializables.MiniMessageSerializer.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-mini-message-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Component","dev.racci.minix.api.serializables.MiniMessageSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): DoubleRange","description":"dev.racci.minix.api.serializables.DoubleRangeSerializer.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-double-range-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): DoubleRange","dev.racci.minix.api.serializables.DoubleRangeSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Duration","description":"dev.racci.minix.api.serializables.DurationSerializer.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-duration-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Duration","dev.racci.minix.api.serializables.DurationSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Enchantment","description":"dev.racci.minix.api.serializables.EnchantSerializer.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-enchant-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Enchantment","dev.racci.minix.api.serializables.EnchantSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): FloatRange","description":"dev.racci.minix.api.serializables.FloatRangeSerializer.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-float-range-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): FloatRange","dev.racci.minix.api.serializables.FloatRangeSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): IntRange","description":"dev.racci.minix.api.serializables.IntRangeSerializer.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-int-range-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): IntRange","dev.racci.minix.api.serializables.IntRangeSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Location","description":"dev.racci.minix.api.serializables.LocationSerializer.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-location-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Location","dev.racci.minix.api.serializables.LocationSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): LongRange","description":"dev.racci.minix.api.serializables.LongRangeSerializer.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-long-range-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): LongRange","dev.racci.minix.api.serializables.LongRangeSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): NamespacedKey","description":"dev.racci.minix.api.serializables.NamespacedKeySerializer.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-namespaced-key-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): NamespacedKey","dev.racci.minix.api.serializables.NamespacedKeySerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Pattern","description":"dev.racci.minix.api.serializables.PatternSerializer.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-pattern-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Pattern","dev.racci.minix.api.serializables.PatternSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): PotionEffect","description":"dev.racci.minix.api.serializables.PotionEffectSerializer.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-potion-effect-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): PotionEffect","dev.racci.minix.api.serializables.PotionEffectSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): UUID","description":"dev.racci.minix.api.serializables.UUIDSerializer.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-u-u-i-d-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): UUID","dev.racci.minix.api.serializables.UUIDSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Vector","description":"dev.racci.minix.api.serializables.VectorSerializer.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-vector-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Vector","dev.racci.minix.api.serializables.VectorSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): World","description":"dev.racci.minix.api.serializables.WorldSerializer.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-world-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): World","dev.racci.minix.api.serializables.WorldSerializer.deserialize"]},{"name":"open override fun deserialize(type: Type, node: ConfigurationNode): AttributeModifier","description":"dev.racci.minix.api.serializables.AttributeModifierSerializer.Configurate.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-attribute-modifier-serializer/-configurate/deserialize.html","searchKeys":["deserialize","open override fun deserialize(type: Type, node: ConfigurationNode): AttributeModifier","dev.racci.minix.api.serializables.AttributeModifierSerializer.Configurate.deserialize"]},{"name":"open override fun deserialize(type: Type, node: ConfigurationNode): CharRange","description":"dev.racci.minix.api.serializables.CharRangeSerializer.Configurate.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-char-range-serializer/-configurate/deserialize.html","searchKeys":["deserialize","open override fun deserialize(type: Type, node: ConfigurationNode): CharRange","dev.racci.minix.api.serializables.CharRangeSerializer.Configurate.deserialize"]},{"name":"open override fun deserialize(type: Type, node: ConfigurationNode): Data","description":"dev.racci.minix.api.utils.data.Data.Serializer.deserialize","location":"Minix-API/dev.racci.minix.api.utils.data/-data/-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(type: Type, node: ConfigurationNode): Data","dev.racci.minix.api.utils.data.Data.Serializer.deserialize"]},{"name":"open override fun deserialize(type: Type, node: ConfigurationNode): DoubleRange","description":"dev.racci.minix.api.serializables.DoubleRangeSerializer.Configurate.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-double-range-serializer/-configurate/deserialize.html","searchKeys":["deserialize","open override fun deserialize(type: Type, node: ConfigurationNode): DoubleRange","dev.racci.minix.api.serializables.DoubleRangeSerializer.Configurate.deserialize"]},{"name":"open override fun deserialize(type: Type, node: ConfigurationNode): Duration","description":"dev.racci.minix.api.serializables.DurationSerializer.Configurate.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-duration-serializer/-configurate/deserialize.html","searchKeys":["deserialize","open override fun deserialize(type: Type, node: ConfigurationNode): Duration","dev.racci.minix.api.serializables.DurationSerializer.Configurate.deserialize"]},{"name":"open override fun deserialize(type: Type, node: ConfigurationNode): Enchantment","description":"dev.racci.minix.api.serializables.EnchantSerializer.Configurate.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-enchant-serializer/-configurate/deserialize.html","searchKeys":["deserialize","open override fun deserialize(type: Type, node: ConfigurationNode): Enchantment","dev.racci.minix.api.serializables.EnchantSerializer.Configurate.deserialize"]},{"name":"open override fun deserialize(type: Type, node: ConfigurationNode): FloatRange","description":"dev.racci.minix.api.serializables.FloatRangeSerializer.Configurate.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-float-range-serializer/-configurate/deserialize.html","searchKeys":["deserialize","open override fun deserialize(type: Type, node: ConfigurationNode): FloatRange","dev.racci.minix.api.serializables.FloatRangeSerializer.Configurate.deserialize"]},{"name":"open override fun deserialize(type: Type, node: ConfigurationNode): IntRange","description":"dev.racci.minix.api.serializables.IntRangeSerializer.Configurate.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-int-range-serializer/-configurate/deserialize.html","searchKeys":["deserialize","open override fun deserialize(type: Type, node: ConfigurationNode): IntRange","dev.racci.minix.api.serializables.IntRangeSerializer.Configurate.deserialize"]},{"name":"open override fun deserialize(type: Type, node: ConfigurationNode): Level","description":"dev.racci.minix.api.serializables.LoggingLevelSerializer.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-logging-level-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(type: Type, node: ConfigurationNode): Level","dev.racci.minix.api.serializables.LoggingLevelSerializer.deserialize"]},{"name":"open override fun deserialize(type: Type, node: ConfigurationNode): Location","description":"dev.racci.minix.api.serializables.LocationSerializer.Configurate.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-location-serializer/-configurate/deserialize.html","searchKeys":["deserialize","open override fun deserialize(type: Type, node: ConfigurationNode): Location","dev.racci.minix.api.serializables.LocationSerializer.Configurate.deserialize"]},{"name":"open override fun deserialize(type: Type, node: ConfigurationNode): LongRange","description":"dev.racci.minix.api.serializables.LongRangeSerializer.Configurate.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-long-range-serializer/-configurate/deserialize.html","searchKeys":["deserialize","open override fun deserialize(type: Type, node: ConfigurationNode): LongRange","dev.racci.minix.api.serializables.LongRangeSerializer.Configurate.deserialize"]},{"name":"open override fun deserialize(type: Type, node: ConfigurationNode): NamespacedKey","description":"dev.racci.minix.api.serializables.NamespacedKeySerializer.Configurate.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-namespaced-key-serializer/-configurate/deserialize.html","searchKeys":["deserialize","open override fun deserialize(type: Type, node: ConfigurationNode): NamespacedKey","dev.racci.minix.api.serializables.NamespacedKeySerializer.Configurate.deserialize"]},{"name":"open override fun deserialize(type: Type, node: ConfigurationNode): Pair<*, *>","description":"dev.racci.minix.api.serializables.PairSerializer.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-pair-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(type: Type, node: ConfigurationNode): Pair<*, *>","dev.racci.minix.api.serializables.PairSerializer.deserialize"]},{"name":"open override fun deserialize(type: Type, node: ConfigurationNode): PartialComponent","description":"dev.racci.minix.api.utils.adventure.PartialComponent.Serializer.deserialize","location":"Minix-API/dev.racci.minix.api.utils.adventure/-partial-component/-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(type: Type, node: ConfigurationNode): PartialComponent","dev.racci.minix.api.utils.adventure.PartialComponent.Serializer.deserialize"]},{"name":"open override fun deserialize(type: Type, node: ConfigurationNode): Pattern","description":"dev.racci.minix.api.serializables.PatternSerializer.Configurate.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-pattern-serializer/-configurate/deserialize.html","searchKeys":["deserialize","open override fun deserialize(type: Type, node: ConfigurationNode): Pattern","dev.racci.minix.api.serializables.PatternSerializer.Configurate.deserialize"]},{"name":"open override fun deserialize(type: Type, node: ConfigurationNode): PotionEffect","description":"dev.racci.minix.api.serializables.PotionEffectSerializer.Configurate.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-potion-effect-serializer/-configurate/deserialize.html","searchKeys":["deserialize","open override fun deserialize(type: Type, node: ConfigurationNode): PotionEffect","dev.racci.minix.api.serializables.PotionEffectSerializer.Configurate.deserialize"]},{"name":"open override fun deserialize(type: Type, node: ConfigurationNode): UpdateProvider","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateProviderSerializer.deserialize","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-provider-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(type: Type, node: ConfigurationNode): UpdateProvider","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateProviderSerializer.deserialize"]},{"name":"open override fun deserialize(type: Type, node: ConfigurationNode): Vector","description":"dev.racci.minix.api.serializables.VectorSerializer.Configurate.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-vector-serializer/-configurate/deserialize.html","searchKeys":["deserialize","open override fun deserialize(type: Type, node: ConfigurationNode): Vector","dev.racci.minix.api.serializables.VectorSerializer.Configurate.deserialize"]},{"name":"open override fun deserialize(type: Type?, node: ConfigurationNode?): World","description":"dev.racci.minix.api.serializables.WorldSerializer.Configurate.deserialize","location":"Minix-API/dev.racci.minix.api.serializables/-world-serializer/-configurate/deserialize.html","searchKeys":["deserialize","open override fun deserialize(type: Type?, node: ConfigurationNode?): World","dev.racci.minix.api.serializables.WorldSerializer.Configurate.deserialize"]},{"name":"open override fun expire(key: K, time: Long): Boolean","description":"dev.racci.minix.api.utils.collections.ExpirationMapImpl.expire","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-map-impl/expire.html","searchKeys":["expire","open override fun expire(key: K, time: Long): Boolean","dev.racci.minix.api.utils.collections.ExpirationMapImpl.expire"]},{"name":"open override fun expire(key: K, time: Long, callback: OnExpireMapCallback<K, V>): Boolean","description":"dev.racci.minix.api.utils.collections.ExpirationMapImpl.expire","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-map-impl/expire.html","searchKeys":["expire","open override fun expire(key: K, time: Long, callback: OnExpireMapCallback<K, V>): Boolean","dev.racci.minix.api.utils.collections.ExpirationMapImpl.expire"]},{"name":"open override fun factor(axis: IntArray): BlockPos","description":"dev.racci.minix.api.utils.minecraft.BlockPos.factor","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-block-pos/factor.html","searchKeys":["factor","open override fun factor(axis: IntArray): BlockPos","dev.racci.minix.api.utils.minecraft.BlockPos.factor"]},{"name":"open override fun factor(axis: IntArray): ChunkPos","description":"dev.racci.minix.api.utils.minecraft.ChunkPos.factor","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-chunk-pos/factor.html","searchKeys":["factor","open override fun factor(axis: IntArray): ChunkPos","dev.racci.minix.api.utils.minecraft.ChunkPos.factor"]},{"name":"open override fun factor(axis: IntArray): LocationPos","description":"dev.racci.minix.api.utils.minecraft.LocationPos.factor","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-location-pos/factor.html","searchKeys":["factor","open override fun factor(axis: IntArray): LocationPos","dev.racci.minix.api.utils.minecraft.LocationPos.factor"]},{"name":"open override fun fillInStackTrace(): Throwable","description":"dev.racci.minix.api.exceptions.NoTraceException.fillInStackTrace","location":"Minix-API/dev.racci.minix.api.exceptions/-no-trace-exception/fill-in-stack-trace.html","searchKeys":["fillInStackTrace","open override fun fillInStackTrace(): Throwable","dev.racci.minix.api.exceptions.NoTraceException.fillInStackTrace"]},{"name":"open override fun first(): E?","description":"dev.racci.minix.api.utils.collections.ExpirationListImpl.first","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list-impl/first.html","searchKeys":["first","open override fun first(): E?","dev.racci.minix.api.utils.collections.ExpirationListImpl.first"]},{"name":"open override fun getHandlers(): HandlerList","description":"dev.racci.minix.api.events.KEvent.getHandlers","location":"Minix-API/dev.racci.minix.api.events/-k-event/get-handlers.html","searchKeys":["getHandlers","open override fun getHandlers(): HandlerList","dev.racci.minix.api.events.KEvent.getHandlers"]},{"name":"open override fun getHandlers(): HandlerList","description":"dev.racci.minix.api.events.KPlayerEvent.getHandlers","location":"Minix-API/dev.racci.minix.api.events/-k-player-event/get-handlers.html","searchKeys":["getHandlers","open override fun getHandlers(): HandlerList","dev.racci.minix.api.events.KPlayerEvent.getHandlers"]},{"name":"open override fun getHandlers(): HandlerList","description":"dev.racci.minix.api.events.KWorldEvent.getHandlers","location":"Minix-API/dev.racci.minix.api.events/-k-world-event/get-handlers.html","searchKeys":["getHandlers","open override fun getHandlers(): HandlerList","dev.racci.minix.api.events.KWorldEvent.getHandlers"]},{"name":"open override fun getString(itemStack: ItemStack, key: String?): String?","description":"dev.racci.minix.api.utils.minecraft.Pdc.getString","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pdc/get-string.html","searchKeys":["getString","open override fun getString(itemStack: ItemStack, key: String?): String?","dev.racci.minix.api.utils.minecraft.Pdc.getString"]},{"name":"open override fun hashCode(): Int","description":"dev.racci.minix.api.data.PluginUpdater.hashCode","location":"Minix-API/dev.racci.minix.api.data/-plugin-updater/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.racci.minix.api.data.PluginUpdater.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.racci.minix.api.updater.Version.hashCode","location":"Minix-API/dev.racci.minix.api.updater/-version/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.racci.minix.api.updater.Version.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.hashCode","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-file/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.racci.minix.api.utils.data.Data.hashCode","location":"Minix-API/dev.racci.minix.api.utils.data/-data/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.racci.minix.api.utils.data.Data.hashCode"]},{"name":"open override fun hashCode(): Int","description":"dev.racci.minix.api.utils.minecraft.MCVersion.hashCode","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","dev.racci.minix.api.utils.minecraft.MCVersion.hashCode"]},{"name":"open override fun indexOf(element: E): Int","description":"dev.racci.minix.api.utils.collections.ExpirationListImpl.indexOf","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list-impl/index-of.html","searchKeys":["indexOf","open override fun indexOf(element: E): Int","dev.racci.minix.api.utils.collections.ExpirationListImpl.indexOf"]},{"name":"open override fun isCancelled(): Boolean","description":"dev.racci.minix.api.events.KEvent.isCancelled","location":"Minix-API/dev.racci.minix.api.events/-k-event/is-cancelled.html","searchKeys":["isCancelled","open override fun isCancelled(): Boolean","dev.racci.minix.api.events.KEvent.isCancelled"]},{"name":"open override fun isCancelled(): Boolean","description":"dev.racci.minix.api.events.KPlayerEvent.isCancelled","location":"Minix-API/dev.racci.minix.api.events/-k-player-event/is-cancelled.html","searchKeys":["isCancelled","open override fun isCancelled(): Boolean","dev.racci.minix.api.events.KPlayerEvent.isCancelled"]},{"name":"open override fun isCancelled(): Boolean","description":"dev.racci.minix.api.events.KWorldEvent.isCancelled","location":"Minix-API/dev.racci.minix.api.events/-k-world-event/is-cancelled.html","searchKeys":["isCancelled","open override fun isCancelled(): Boolean","dev.racci.minix.api.events.KWorldEvent.isCancelled"]},{"name":"open override fun isEmpty(): Boolean","description":"dev.racci.minix.api.utils.collections.ExpirationListImpl.isEmpty","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list-impl/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","dev.racci.minix.api.utils.collections.ExpirationListImpl.isEmpty"]},{"name":"open override fun last(): E?","description":"dev.racci.minix.api.utils.collections.ExpirationListImpl.last","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list-impl/last.html","searchKeys":["last","open override fun last(): E?","dev.racci.minix.api.utils.collections.ExpirationListImpl.last"]},{"name":"open override fun listIterator(): MutableListIterator<T>","description":"dev.racci.minix.api.utils.collections.ObservableList.listIterator","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-list/list-iterator.html","searchKeys":["listIterator","open override fun listIterator(): MutableListIterator<T>","dev.racci.minix.api.utils.collections.ObservableList.listIterator"]},{"name":"open override fun listIterator(index: Int): MutableListIterator<T>","description":"dev.racci.minix.api.utils.collections.ObservableList.listIterator","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-list/list-iterator.html","searchKeys":["listIterator","open override fun listIterator(index: Int): MutableListIterator<T>","dev.racci.minix.api.utils.collections.ObservableList.listIterator"]},{"name":"open override fun load()","description":"dev.racci.minix.api.data.LangConfig.load","location":"Minix-API/dev.racci.minix.api.data/-lang-config/load.html","searchKeys":["load","open override fun load()","dev.racci.minix.api.data.LangConfig.load"]},{"name":"open override fun log(message: MinixLogger.FormattedMessage)","description":"dev.racci.minix.api.plugin.logger.PluginDependentMinixLogger.log","location":"Minix-API/dev.racci.minix.api.plugin.logger/-plugin-dependent-minix-logger/log.html","searchKeys":["log","open override fun log(message: MinixLogger.FormattedMessage)","dev.racci.minix.api.plugin.logger.PluginDependentMinixLogger.log"]},{"name":"open override fun missingTime(element: E): Int?","description":"dev.racci.minix.api.utils.collections.ExpirationListImpl.missingTime","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list-impl/missing-time.html","searchKeys":["missingTime","open override fun missingTime(element: E): Int?","dev.racci.minix.api.utils.collections.ExpirationListImpl.missingTime"]},{"name":"open override fun missingTime(key: K): Long?","description":"dev.racci.minix.api.utils.collections.ExpirationMapImpl.missingTime","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-map-impl/missing-time.html","searchKeys":["missingTime","open override fun missingTime(key: K): Long?","dev.racci.minix.api.utils.collections.ExpirationMapImpl.missingTime"]},{"name":"open override fun onDisable()","description":"dev.racci.minix.api.plugin.MinixPlugin.onDisable","location":"Minix-API/dev.racci.minix.api.plugin/-minix-plugin/on-disable.html","searchKeys":["onDisable","open override fun onDisable()","dev.racci.minix.api.plugin.MinixPlugin.onDisable"]},{"name":"open override fun onEnable()","description":"dev.racci.minix.api.plugin.MinixPlugin.onEnable","location":"Minix-API/dev.racci.minix.api.plugin/-minix-plugin/on-enable.html","searchKeys":["onEnable","open override fun onEnable()","dev.racci.minix.api.plugin.MinixPlugin.onEnable"]},{"name":"open override fun onLoad()","description":"dev.racci.minix.api.plugin.MinixPlugin.onLoad","location":"Minix-API/dev.racci.minix.api.plugin/-minix-plugin/on-load.html","searchKeys":["onLoad","open override fun onLoad()","dev.racci.minix.api.plugin.MinixPlugin.onLoad"]},{"name":"open override fun put(key: K, value: V): V?","description":"dev.racci.minix.api.utils.collections.ExpirationMapImpl.put","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-map-impl/put.html","searchKeys":["put","open override fun put(key: K, value: V): V?","dev.racci.minix.api.utils.collections.ExpirationMapImpl.put"]},{"name":"open override fun put(key: K, value: V): V?","description":"dev.racci.minix.api.utils.collections.ObservableMap.put","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-map/put.html","searchKeys":["put","open override fun put(key: K, value: V): V?","dev.racci.minix.api.utils.collections.ObservableMap.put"]},{"name":"open override fun put(key: K, value: V, time: Long): V?","description":"dev.racci.minix.api.utils.collections.ExpirationMapImpl.put","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-map-impl/put.html","searchKeys":["put","open override fun put(key: K, value: V, time: Long): V?","dev.racci.minix.api.utils.collections.ExpirationMapImpl.put"]},{"name":"open override fun put(key: K, value: V, time: Long, callback: OnExpireMapCallback<K, V>): V?","description":"dev.racci.minix.api.utils.collections.ExpirationMapImpl.put","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-map-impl/put.html","searchKeys":["put","open override fun put(key: K, value: V, time: Long, callback: OnExpireMapCallback<K, V>): V?","dev.racci.minix.api.utils.collections.ExpirationMapImpl.put"]},{"name":"open override fun putAll(from: Map<out K, V>)","description":"dev.racci.minix.api.utils.collections.ObservableMap.putAll","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-map/put-all.html","searchKeys":["putAll","open override fun putAll(from: Map<out K, V>)","dev.racci.minix.api.utils.collections.ObservableMap.putAll"]},{"name":"open override fun putIfAbsent(key: K, value: V): V?","description":"dev.racci.minix.api.utils.collections.ObservableMap.putIfAbsent","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-map/put-if-absent.html","searchKeys":["putIfAbsent","open override fun putIfAbsent(key: K, value: V): V?","dev.racci.minix.api.utils.collections.ObservableMap.putIfAbsent"]},{"name":"open override fun quit(player: Player): Boolean","description":"dev.racci.minix.api.utils.collections.OnlinePlayerList.quit","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-list/quit.html","searchKeys":["quit","open override fun quit(player: Player): Boolean","dev.racci.minix.api.utils.collections.OnlinePlayerList.quit"]},{"name":"open override fun quit(player: Player): Boolean","description":"dev.racci.minix.api.utils.collections.OnlinePlayerSet.quit","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-set/quit.html","searchKeys":["quit","open override fun quit(player: Player): Boolean","dev.racci.minix.api.utils.collections.OnlinePlayerSet.quit"]},{"name":"open override fun remove()","description":"dev.racci.minix.api.utils.collections.ObservableMutableIterator.remove","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-mutable-iterator/remove.html","searchKeys":["remove","open override fun remove()","dev.racci.minix.api.utils.collections.ObservableMutableIterator.remove"]},{"name":"open override fun remove()","description":"dev.racci.minix.api.utils.collections.ObservableMutableListIterator.remove","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-mutable-list-iterator/remove.html","searchKeys":["remove","open override fun remove()","dev.racci.minix.api.utils.collections.ObservableMutableListIterator.remove"]},{"name":"open override fun remove(element: E): Boolean","description":"dev.racci.minix.api.utils.collections.ExpirationListImpl.remove","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list-impl/remove.html","searchKeys":["remove","open override fun remove(element: E): Boolean","dev.racci.minix.api.utils.collections.ExpirationListImpl.remove"]},{"name":"open override fun remove(element: Player): Boolean","description":"dev.racci.minix.api.utils.collections.OnlinePlayerList.remove","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-list/remove.html","searchKeys":["remove","open override fun remove(element: Player): Boolean","dev.racci.minix.api.utils.collections.OnlinePlayerList.remove"]},{"name":"open override fun remove(element: Player): Boolean","description":"dev.racci.minix.api.utils.collections.OnlinePlayerSet.remove","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-set/remove.html","searchKeys":["remove","open override fun remove(element: Player): Boolean","dev.racci.minix.api.utils.collections.OnlinePlayerSet.remove"]},{"name":"open override fun remove(element: T): Boolean","description":"dev.racci.minix.api.utils.collections.ObservableList.remove","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-list/remove.html","searchKeys":["remove","open override fun remove(element: T): Boolean","dev.racci.minix.api.utils.collections.ObservableList.remove"]},{"name":"open override fun remove(element: T): Boolean","description":"dev.racci.minix.api.utils.collections.ObservableSet.remove","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-set/remove.html","searchKeys":["remove","open override fun remove(element: T): Boolean","dev.racci.minix.api.utils.collections.ObservableSet.remove"]},{"name":"open override fun remove(key: K): V?","description":"dev.racci.minix.api.utils.collections.ExpirationMapImpl.remove","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-map-impl/remove.html","searchKeys":["remove","open override fun remove(key: K): V?","dev.racci.minix.api.utils.collections.ExpirationMapImpl.remove"]},{"name":"open override fun remove(key: K): V?","description":"dev.racci.minix.api.utils.collections.ObservableMap.remove","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-map/remove.html","searchKeys":["remove","open override fun remove(key: K): V?","dev.racci.minix.api.utils.collections.ObservableMap.remove"]},{"name":"open override fun remove(key: K, value: V): Boolean","description":"dev.racci.minix.api.utils.collections.ObservableMap.remove","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-map/remove.html","searchKeys":["remove","open override fun remove(key: K, value: V): Boolean","dev.racci.minix.api.utils.collections.ObservableMap.remove"]},{"name":"open override fun remove(key: Player): V?","description":"dev.racci.minix.api.utils.collections.OnlinePlayerMap.remove","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-map/remove.html","searchKeys":["remove","open override fun remove(key: Player): V?","dev.racci.minix.api.utils.collections.OnlinePlayerMap.remove"]},{"name":"open override fun remove(key: Player, value: V): Boolean","description":"dev.racci.minix.api.utils.collections.OnlinePlayerMap.remove","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-map/remove.html","searchKeys":["remove","open override fun remove(key: Player, value: V): Boolean","dev.racci.minix.api.utils.collections.OnlinePlayerMap.remove"]},{"name":"open override fun removeAll(elements: Collection<T>): Boolean","description":"dev.racci.minix.api.utils.collections.ObservableList.removeAll","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-list/remove-all.html","searchKeys":["removeAll","open override fun removeAll(elements: Collection<T>): Boolean","dev.racci.minix.api.utils.collections.ObservableList.removeAll"]},{"name":"open override fun removeAll(elements: Collection<T>): Boolean","description":"dev.racci.minix.api.utils.collections.ObservableSet.removeAll","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-set/remove-all.html","searchKeys":["removeAll","open override fun removeAll(elements: Collection<T>): Boolean","dev.racci.minix.api.utils.collections.ObservableSet.removeAll"]},{"name":"open override fun removeAt(index: Int): E?","description":"dev.racci.minix.api.utils.collections.ExpirationListImpl.removeAt","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list-impl/remove-at.html","searchKeys":["removeAt","open override fun removeAt(index: Int): E?","dev.racci.minix.api.utils.collections.ExpirationListImpl.removeAt"]},{"name":"open override fun removeAt(index: Int): T","description":"dev.racci.minix.api.utils.collections.ObservableList.removeAt","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-list/remove-at.html","searchKeys":["removeAt","open override fun removeAt(index: Int): T","dev.racci.minix.api.utils.collections.ObservableList.removeAt"]},{"name":"open override fun removeAt(p0: Int): Player","description":"dev.racci.minix.api.utils.collections.OnlinePlayerList.removeAt","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-list/remove-at.html","searchKeys":["removeAt","open override fun removeAt(p0: Int): Player","dev.racci.minix.api.utils.collections.OnlinePlayerList.removeAt"]},{"name":"open override fun removeFirst(): E?","description":"dev.racci.minix.api.utils.collections.ExpirationListImpl.removeFirst","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list-impl/remove-first.html","searchKeys":["removeFirst","open override fun removeFirst(): E?","dev.racci.minix.api.utils.collections.ExpirationListImpl.removeFirst"]},{"name":"open override fun removeFirst(): Player","description":"dev.racci.minix.api.utils.collections.OnlinePlayerList.removeFirst","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-list/remove-first.html","searchKeys":["removeFirst","open override fun removeFirst(): Player","dev.racci.minix.api.utils.collections.OnlinePlayerList.removeFirst"]},{"name":"open override fun removeLast(): E?","description":"dev.racci.minix.api.utils.collections.ExpirationListImpl.removeLast","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list-impl/remove-last.html","searchKeys":["removeLast","open override fun removeLast(): E?","dev.racci.minix.api.utils.collections.ExpirationListImpl.removeLast"]},{"name":"open override fun removeLast(): Player","description":"dev.racci.minix.api.utils.collections.OnlinePlayerList.removeLast","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-list/remove-last.html","searchKeys":["removeLast","open override fun removeLast(): Player","dev.racci.minix.api.utils.collections.OnlinePlayerList.removeLast"]},{"name":"open override fun removeLastOccurrence(p0: Any?): Boolean","description":"dev.racci.minix.api.utils.collections.OnlinePlayerList.removeLastOccurrence","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-list/remove-last-occurrence.html","searchKeys":["removeLastOccurrence","open override fun removeLastOccurrence(p0: Any?): Boolean","dev.racci.minix.api.utils.collections.OnlinePlayerList.removeLastOccurrence"]},{"name":"open override fun removeTag(itemStack: ItemStack, key: String?): ItemStack","description":"dev.racci.minix.api.utils.minecraft.Pdc.removeTag","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pdc/remove-tag.html","searchKeys":["removeTag","open override fun removeTag(itemStack: ItemStack, key: String?): ItemStack","dev.racci.minix.api.utils.minecraft.Pdc.removeTag"]},{"name":"open override fun replace(key: K, first: V, second: V): Boolean","description":"dev.racci.minix.api.utils.collections.ObservableMap.replace","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-map/replace.html","searchKeys":["replace","open override fun replace(key: K, first: V, second: V): Boolean","dev.racci.minix.api.utils.collections.ObservableMap.replace"]},{"name":"open override fun replace(key: K, value: V): V?","description":"dev.racci.minix.api.utils.collections.ObservableMap.replace","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-map/replace.html","searchKeys":["replace","open override fun replace(key: K, value: V): V?","dev.racci.minix.api.utils.collections.ObservableMap.replace"]},{"name":"open override fun retainAll(elements: Collection<T>): Boolean","description":"dev.racci.minix.api.utils.collections.ObservableList.retainAll","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-list/retain-all.html","searchKeys":["retainAll","open override fun retainAll(elements: Collection<T>): Boolean","dev.racci.minix.api.utils.collections.ObservableList.retainAll"]},{"name":"open override fun retainAll(elements: Collection<T>): Boolean","description":"dev.racci.minix.api.utils.collections.ObservableSet.retainAll","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-set/retain-all.html","searchKeys":["retainAll","open override fun retainAll(elements: Collection<T>): Boolean","dev.racci.minix.api.utils.collections.ObservableSet.retainAll"]},{"name":"open override fun serialize(encoder: Encoder, value: AttributeModifier)","description":"dev.racci.minix.api.serializables.AttributeModifierSerializer.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-attribute-modifier-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: AttributeModifier)","dev.racci.minix.api.serializables.AttributeModifierSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Component)","description":"dev.racci.minix.api.serializables.MiniMessageSerializer.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-mini-message-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Component)","dev.racci.minix.api.serializables.MiniMessageSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Duration)","description":"dev.racci.minix.api.serializables.DurationSerializer.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-duration-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Duration)","dev.racci.minix.api.serializables.DurationSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Enchantment)","description":"dev.racci.minix.api.serializables.EnchantSerializer.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-enchant-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Enchantment)","dev.racci.minix.api.serializables.EnchantSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Location)","description":"dev.racci.minix.api.serializables.LocationSerializer.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-location-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Location)","dev.racci.minix.api.serializables.LocationSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: NamespacedKey)","description":"dev.racci.minix.api.serializables.NamespacedKeySerializer.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-namespaced-key-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: NamespacedKey)","dev.racci.minix.api.serializables.NamespacedKeySerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Pattern)","description":"dev.racci.minix.api.serializables.PatternSerializer.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-pattern-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Pattern)","dev.racci.minix.api.serializables.PatternSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: PotionEffect)","description":"dev.racci.minix.api.serializables.PotionEffectSerializer.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-potion-effect-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: PotionEffect)","dev.racci.minix.api.serializables.PotionEffectSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: T)","description":"dev.racci.minix.api.serializables.RangeSerializer.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-range-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: T)","dev.racci.minix.api.serializables.RangeSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: UUID)","description":"dev.racci.minix.api.serializables.UUIDSerializer.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-u-u-i-d-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: UUID)","dev.racci.minix.api.serializables.UUIDSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Vector)","description":"dev.racci.minix.api.serializables.VectorSerializer.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-vector-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Vector)","dev.racci.minix.api.serializables.VectorSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: World)","description":"dev.racci.minix.api.serializables.WorldSerializer.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-world-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: World)","dev.racci.minix.api.serializables.WorldSerializer.serialize"]},{"name":"open override fun serialize(type: Type, obj: AttributeModifier?, node: ConfigurationNode)","description":"dev.racci.minix.api.serializables.AttributeModifierSerializer.Configurate.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-attribute-modifier-serializer/-configurate/serialize.html","searchKeys":["serialize","open override fun serialize(type: Type, obj: AttributeModifier?, node: ConfigurationNode)","dev.racci.minix.api.serializables.AttributeModifierSerializer.Configurate.serialize"]},{"name":"open override fun serialize(type: Type, obj: Data?, node: ConfigurationNode)","description":"dev.racci.minix.api.utils.data.Data.Serializer.serialize","location":"Minix-API/dev.racci.minix.api.utils.data/-data/-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(type: Type, obj: Data?, node: ConfigurationNode)","dev.racci.minix.api.utils.data.Data.Serializer.serialize"]},{"name":"open override fun serialize(type: Type, obj: Duration?, node: ConfigurationNode)","description":"dev.racci.minix.api.serializables.DurationSerializer.Configurate.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-duration-serializer/-configurate/serialize.html","searchKeys":["serialize","open override fun serialize(type: Type, obj: Duration?, node: ConfigurationNode)","dev.racci.minix.api.serializables.DurationSerializer.Configurate.serialize"]},{"name":"open override fun serialize(type: Type, obj: Enchantment?, node: ConfigurationNode)","description":"dev.racci.minix.api.serializables.EnchantSerializer.Configurate.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-enchant-serializer/-configurate/serialize.html","searchKeys":["serialize","open override fun serialize(type: Type, obj: Enchantment?, node: ConfigurationNode)","dev.racci.minix.api.serializables.EnchantSerializer.Configurate.serialize"]},{"name":"open override fun serialize(type: Type, obj: Level?, node: ConfigurationNode)","description":"dev.racci.minix.api.serializables.LoggingLevelSerializer.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-logging-level-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(type: Type, obj: Level?, node: ConfigurationNode)","dev.racci.minix.api.serializables.LoggingLevelSerializer.serialize"]},{"name":"open override fun serialize(type: Type, obj: Location?, node: ConfigurationNode)","description":"dev.racci.minix.api.serializables.LocationSerializer.Configurate.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-location-serializer/-configurate/serialize.html","searchKeys":["serialize","open override fun serialize(type: Type, obj: Location?, node: ConfigurationNode)","dev.racci.minix.api.serializables.LocationSerializer.Configurate.serialize"]},{"name":"open override fun serialize(type: Type, obj: NamespacedKey?, node: ConfigurationNode)","description":"dev.racci.minix.api.serializables.NamespacedKeySerializer.Configurate.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-namespaced-key-serializer/-configurate/serialize.html","searchKeys":["serialize","open override fun serialize(type: Type, obj: NamespacedKey?, node: ConfigurationNode)","dev.racci.minix.api.serializables.NamespacedKeySerializer.Configurate.serialize"]},{"name":"open override fun serialize(type: Type, obj: Pair<*, *>?, node: ConfigurationNode)","description":"dev.racci.minix.api.serializables.PairSerializer.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-pair-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(type: Type, obj: Pair<*, *>?, node: ConfigurationNode)","dev.racci.minix.api.serializables.PairSerializer.serialize"]},{"name":"open override fun serialize(type: Type, obj: PartialComponent?, node: ConfigurationNode)","description":"dev.racci.minix.api.utils.adventure.PartialComponent.Serializer.serialize","location":"Minix-API/dev.racci.minix.api.utils.adventure/-partial-component/-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(type: Type, obj: PartialComponent?, node: ConfigurationNode)","dev.racci.minix.api.utils.adventure.PartialComponent.Serializer.serialize"]},{"name":"open override fun serialize(type: Type, obj: Pattern?, node: ConfigurationNode)","description":"dev.racci.minix.api.serializables.PatternSerializer.Configurate.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-pattern-serializer/-configurate/serialize.html","searchKeys":["serialize","open override fun serialize(type: Type, obj: Pattern?, node: ConfigurationNode)","dev.racci.minix.api.serializables.PatternSerializer.Configurate.serialize"]},{"name":"open override fun serialize(type: Type, obj: PotionEffect?, node: ConfigurationNode)","description":"dev.racci.minix.api.serializables.PotionEffectSerializer.Configurate.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-potion-effect-serializer/-configurate/serialize.html","searchKeys":["serialize","open override fun serialize(type: Type, obj: PotionEffect?, node: ConfigurationNode)","dev.racci.minix.api.serializables.PotionEffectSerializer.Configurate.serialize"]},{"name":"open override fun serialize(type: Type, obj: T?, node: ConfigurationNode)","description":"dev.racci.minix.api.serializables.RangeSerializer.Configurate.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-range-serializer/-configurate/serialize.html","searchKeys":["serialize","open override fun serialize(type: Type, obj: T?, node: ConfigurationNode)","dev.racci.minix.api.serializables.RangeSerializer.Configurate.serialize"]},{"name":"open override fun serialize(type: Type, obj: UpdateProvider?, node: ConfigurationNode)","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateProviderSerializer.serialize","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-provider-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(type: Type, obj: UpdateProvider?, node: ConfigurationNode)","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateProviderSerializer.serialize"]},{"name":"open override fun serialize(type: Type, obj: Vector?, node: ConfigurationNode)","description":"dev.racci.minix.api.serializables.VectorSerializer.Configurate.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-vector-serializer/-configurate/serialize.html","searchKeys":["serialize","open override fun serialize(type: Type, obj: Vector?, node: ConfigurationNode)","dev.racci.minix.api.serializables.VectorSerializer.Configurate.serialize"]},{"name":"open override fun serialize(type: Type, obj: World?, node: ConfigurationNode)","description":"dev.racci.minix.api.serializables.WorldSerializer.Configurate.serialize","location":"Minix-API/dev.racci.minix.api.serializables/-world-serializer/-configurate/serialize.html","searchKeys":["serialize","open override fun serialize(type: Type, obj: World?, node: ConfigurationNode)","dev.racci.minix.api.serializables.WorldSerializer.Configurate.serialize"]},{"name":"open override fun set(element: T)","description":"dev.racci.minix.api.utils.collections.ObservableMutableListIterator.set","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-mutable-list-iterator/set.html","searchKeys":["set","open override fun set(element: T)","dev.racci.minix.api.utils.collections.ObservableMutableListIterator.set"]},{"name":"open override fun setBoolean(itemStack: ItemStack, key: String?, value: Boolean): ItemStack","description":"dev.racci.minix.api.utils.minecraft.Pdc.setBoolean","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pdc/set-boolean.html","searchKeys":["setBoolean","open override fun setBoolean(itemStack: ItemStack, key: String?, value: Boolean): ItemStack","dev.racci.minix.api.utils.minecraft.Pdc.setBoolean"]},{"name":"open override fun setCancelled(cancel: Boolean)","description":"dev.racci.minix.api.events.KEvent.setCancelled","location":"Minix-API/dev.racci.minix.api.events/-k-event/set-cancelled.html","searchKeys":["setCancelled","open override fun setCancelled(cancel: Boolean)","dev.racci.minix.api.events.KEvent.setCancelled"]},{"name":"open override fun setCancelled(cancel: Boolean)","description":"dev.racci.minix.api.events.KPlayerEvent.setCancelled","location":"Minix-API/dev.racci.minix.api.events/-k-player-event/set-cancelled.html","searchKeys":["setCancelled","open override fun setCancelled(cancel: Boolean)","dev.racci.minix.api.events.KPlayerEvent.setCancelled"]},{"name":"open override fun setCancelled(cancel: Boolean)","description":"dev.racci.minix.api.events.KWorldEvent.setCancelled","location":"Minix-API/dev.racci.minix.api.events/-k-world-event/set-cancelled.html","searchKeys":["setCancelled","open override fun setCancelled(cancel: Boolean)","dev.racci.minix.api.events.KWorldEvent.setCancelled"]},{"name":"open override fun setString(itemStack: ItemStack, key: String?, value: String?): ItemStack","description":"dev.racci.minix.api.utils.minecraft.Pdc.setString","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pdc/set-string.html","searchKeys":["setString","open override fun setString(itemStack: ItemStack, key: String?, value: String?): ItemStack","dev.racci.minix.api.utils.minecraft.Pdc.setString"]},{"name":"open override fun toRecipe(key: NamespacedKey, result: ItemStack, group: String): Recipe","description":"dev.racci.minix.api.serializables.recipes.BlastingRecipeIngredients.toRecipe","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-blasting-recipe-ingredients/to-recipe.html","searchKeys":["toRecipe","open override fun toRecipe(key: NamespacedKey, result: ItemStack, group: String): Recipe","dev.racci.minix.api.serializables.recipes.BlastingRecipeIngredients.toRecipe"]},{"name":"open override fun toRecipe(key: NamespacedKey, result: ItemStack, group: String): Recipe","description":"dev.racci.minix.api.serializables.recipes.CampfireRecipeIngredients.toRecipe","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-campfire-recipe-ingredients/to-recipe.html","searchKeys":["toRecipe","open override fun toRecipe(key: NamespacedKey, result: ItemStack, group: String): Recipe","dev.racci.minix.api.serializables.recipes.CampfireRecipeIngredients.toRecipe"]},{"name":"open override fun toRecipe(key: NamespacedKey, result: ItemStack, group: String): Recipe","description":"dev.racci.minix.api.serializables.recipes.FurnaceRecipeIngredients.toRecipe","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-furnace-recipe-ingredients/to-recipe.html","searchKeys":["toRecipe","open override fun toRecipe(key: NamespacedKey, result: ItemStack, group: String): Recipe","dev.racci.minix.api.serializables.recipes.FurnaceRecipeIngredients.toRecipe"]},{"name":"open override fun toRecipe(key: NamespacedKey, result: ItemStack, group: String): Recipe","description":"dev.racci.minix.api.serializables.recipes.ShapedRecipeIngredients.toRecipe","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-shaped-recipe-ingredients/to-recipe.html","searchKeys":["toRecipe","open override fun toRecipe(key: NamespacedKey, result: ItemStack, group: String): Recipe","dev.racci.minix.api.serializables.recipes.ShapedRecipeIngredients.toRecipe"]},{"name":"open override fun toRecipe(key: NamespacedKey, result: ItemStack, group: String): Recipe","description":"dev.racci.minix.api.serializables.recipes.ShapelessRecipeIngredients.toRecipe","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-shapeless-recipe-ingredients/to-recipe.html","searchKeys":["toRecipe","open override fun toRecipe(key: NamespacedKey, result: ItemStack, group: String): Recipe","dev.racci.minix.api.serializables.recipes.ShapelessRecipeIngredients.toRecipe"]},{"name":"open override fun toRecipe(key: NamespacedKey, result: ItemStack, group: String): Recipe","description":"dev.racci.minix.api.serializables.recipes.SmithingRecipeIngredients.toRecipe","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-smithing-recipe-ingredients/to-recipe.html","searchKeys":["toRecipe","open override fun toRecipe(key: NamespacedKey, result: ItemStack, group: String): Recipe","dev.racci.minix.api.serializables.recipes.SmithingRecipeIngredients.toRecipe"]},{"name":"open override fun toRecipe(key: NamespacedKey, result: ItemStack, group: String): Recipe","description":"dev.racci.minix.api.serializables.recipes.SmokingRecipeIngredients.toRecipe","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-smoking-recipe-ingredients/to-recipe.html","searchKeys":["toRecipe","open override fun toRecipe(key: NamespacedKey, result: ItemStack, group: String): Recipe","dev.racci.minix.api.serializables.recipes.SmokingRecipeIngredients.toRecipe"]},{"name":"open override fun toRecipe(key: NamespacedKey, result: ItemStack, group: String): Recipe","description":"dev.racci.minix.api.serializables.recipes.StoneCuttingRecipeIngredients.toRecipe","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-stone-cutting-recipe-ingredients/to-recipe.html","searchKeys":["toRecipe","open override fun toRecipe(key: NamespacedKey, result: ItemStack, group: String): Recipe","dev.racci.minix.api.serializables.recipes.StoneCuttingRecipeIngredients.toRecipe"]},{"name":"open override fun toString(): String","description":"dev.racci.minix.api.data.PluginUpdater.toString","location":"Minix-API/dev.racci.minix.api.data/-plugin-updater/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.racci.minix.api.data.PluginUpdater.toString"]},{"name":"open override fun toString(): String","description":"dev.racci.minix.api.updater.Version.toString","location":"Minix-API/dev.racci.minix.api.updater/-version/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.racci.minix.api.updater.Version.toString"]},{"name":"open override fun toString(): String","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.toString","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-file/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.toString"]},{"name":"open override fun toString(): String","description":"dev.racci.minix.api.utils.data.Data.toString","location":"Minix-API/dev.racci.minix.api.utils.data/-data/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.racci.minix.api.utils.data.Data.toString"]},{"name":"open override fun toString(): String","description":"dev.racci.minix.api.utils.minecraft.MCVersion.toString","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.racci.minix.api.utils.minecraft.MCVersion.toString"]},{"name":"open override fun validate(value: MinixConfig.Minix<*>?)","description":"dev.racci.minix.api.data.ConfigConstraints.Minix.validate","location":"Minix-API/dev.racci.minix.api.data/-config-constraints/-minix/validate.html","searchKeys":["validate","open override fun validate(value: MinixConfig.Minix<*>?)","dev.racci.minix.api.data.ConfigConstraints.Minix.validate"]},{"name":"open override fun value(): Component","description":"dev.racci.minix.api.utils.adventure.LazyComponentReplacement.value","location":"Minix-API/dev.racci.minix.api.utils.adventure/-lazy-component-replacement/value.html","searchKeys":["value","open override fun value(): Component","dev.racci.minix.api.utils.adventure.LazyComponentReplacement.value"]},{"name":"open override fun value(): String","description":"dev.racci.minix.api.utils.adventure.LazyStringReplacement.value","location":"Minix-API/dev.racci.minix.api.utils.adventure/-lazy-string-replacement/value.html","searchKeys":["value","open override fun value(): String","dev.racci.minix.api.utils.adventure.LazyStringReplacement.value"]},{"name":"open override val bStatsId: Int?","description":"dev.racci.minix.api.plugin.MinixPlugin.bStatsId","location":"Minix-API/dev.racci.minix.api.plugin/-minix-plugin/b-stats-id.html","searchKeys":["bStatsId","open override val bStatsId: Int?","dev.racci.minix.api.plugin.MinixPlugin.bStatsId"]},{"name":"open override val bindToKClass: KClass<out MinixPlugin>?","description":"dev.racci.minix.api.plugin.MinixPlugin.bindToKClass","location":"Minix-API/dev.racci.minix.api.plugin/-minix-plugin/bind-to-k-class.html","searchKeys":["bindToKClass","open override val bindToKClass: KClass<out MinixPlugin>?","dev.racci.minix.api.plugin.MinixPlugin.bindToKClass"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.racci.minix.api.serializables.AttributeModifierSerializer.descriptor","location":"Minix-API/dev.racci.minix.api.serializables/-attribute-modifier-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.racci.minix.api.serializables.AttributeModifierSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.racci.minix.api.serializables.DurationSerializer.descriptor","location":"Minix-API/dev.racci.minix.api.serializables/-duration-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.racci.minix.api.serializables.DurationSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.racci.minix.api.serializables.EnchantSerializer.descriptor","location":"Minix-API/dev.racci.minix.api.serializables/-enchant-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.racci.minix.api.serializables.EnchantSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.racci.minix.api.serializables.LocationSerializer.descriptor","location":"Minix-API/dev.racci.minix.api.serializables/-location-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.racci.minix.api.serializables.LocationSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.racci.minix.api.serializables.MiniMessageSerializer.descriptor","location":"Minix-API/dev.racci.minix.api.serializables/-mini-message-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.racci.minix.api.serializables.MiniMessageSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.racci.minix.api.serializables.NamespacedKeySerializer.descriptor","location":"Minix-API/dev.racci.minix.api.serializables/-namespaced-key-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.racci.minix.api.serializables.NamespacedKeySerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.racci.minix.api.serializables.PatternSerializer.descriptor","location":"Minix-API/dev.racci.minix.api.serializables/-pattern-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.racci.minix.api.serializables.PatternSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.racci.minix.api.serializables.PotionEffectSerializer.descriptor","location":"Minix-API/dev.racci.minix.api.serializables/-potion-effect-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.racci.minix.api.serializables.PotionEffectSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.racci.minix.api.serializables.RangeSerializer.descriptor","location":"Minix-API/dev.racci.minix.api.serializables/-range-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.racci.minix.api.serializables.RangeSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.racci.minix.api.serializables.UUIDSerializer.descriptor","location":"Minix-API/dev.racci.minix.api.serializables/-u-u-i-d-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.racci.minix.api.serializables.UUIDSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.racci.minix.api.serializables.VectorSerializer.descriptor","location":"Minix-API/dev.racci.minix.api.serializables/-vector-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.racci.minix.api.serializables.VectorSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"dev.racci.minix.api.serializables.WorldSerializer.descriptor","location":"Minix-API/dev.racci.minix.api.serializables/-world-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","dev.racci.minix.api.serializables.WorldSerializer.descriptor"]},{"name":"open override val endInclusive: POS","description":"dev.racci.minix.api.utils.minecraft.PosRange.endInclusive","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pos-range/end-inclusive.html","searchKeys":["endInclusive","open override val endInclusive: POS","dev.racci.minix.api.utils.minecraft.PosRange.endInclusive"]},{"name":"open override val hasItem: Boolean","description":"dev.racci.minix.api.events.PlayerDoubleOffhandEvent.hasItem","location":"Minix-API/dev.racci.minix.api.events/-player-double-offhand-event/has-item.html","searchKeys":["hasItem","open override val hasItem: Boolean","dev.racci.minix.api.events.PlayerDoubleOffhandEvent.hasItem"]},{"name":"open override val hasItem: Boolean","description":"dev.racci.minix.api.events.PlayerShiftDoubleOffhandEvent.hasItem","location":"Minix-API/dev.racci.minix.api.events/-player-shift-double-offhand-event/has-item.html","searchKeys":["hasItem","open override val hasItem: Boolean","dev.racci.minix.api.events.PlayerShiftDoubleOffhandEvent.hasItem"]},{"name":"open override val hasItem: Boolean","description":"dev.racci.minix.api.events.PlayerShiftOffhandEvent.hasItem","location":"Minix-API/dev.racci.minix.api.events/-player-shift-offhand-event/has-item.html","searchKeys":["hasItem","open override val hasItem: Boolean","dev.racci.minix.api.events.PlayerShiftOffhandEvent.hasItem"]},{"name":"open override val latestChangelog: String?","description":"dev.racci.minix.api.updater.providers.JenkinsUpdateProvider.latestChangelog","location":"Minix-API/dev.racci.minix.api.updater.providers/-jenkins-update-provider/latest-changelog.html","searchKeys":["latestChangelog","open override val latestChangelog: String?","dev.racci.minix.api.updater.providers.JenkinsUpdateProvider.latestChangelog"]},{"name":"open override val latestChecksum: String?","description":"dev.racci.minix.api.updater.providers.BukkitUpdateProvider.latestChecksum","location":"Minix-API/dev.racci.minix.api.updater.providers/-bukkit-update-provider/latest-checksum.html","searchKeys":["latestChecksum","open override val latestChecksum: String?","dev.racci.minix.api.updater.providers.BukkitUpdateProvider.latestChecksum"]},{"name":"open override val latestChecksum: String?","description":"dev.racci.minix.api.updater.providers.GithubUpdateProvider.latestChecksum","location":"Minix-API/dev.racci.minix.api.updater.providers/-github-update-provider/latest-checksum.html","searchKeys":["latestChecksum","open override val latestChecksum: String?","dev.racci.minix.api.updater.providers.GithubUpdateProvider.latestChecksum"]},{"name":"open override val latestChecksum: String?","description":"dev.racci.minix.api.updater.providers.JenkinsUpdateProvider.latestChecksum","location":"Minix-API/dev.racci.minix.api.updater.providers/-jenkins-update-provider/latest-checksum.html","searchKeys":["latestChecksum","open override val latestChecksum: String?","dev.racci.minix.api.updater.providers.JenkinsUpdateProvider.latestChecksum"]},{"name":"open override val latestFileName: String","description":"dev.racci.minix.api.updater.providers.AlwaysUpdateProvider.latestFileName","location":"Minix-API/dev.racci.minix.api.updater.providers/-always-update-provider/latest-file-name.html","searchKeys":["latestFileName","open override val latestFileName: String","dev.racci.minix.api.updater.providers.AlwaysUpdateProvider.latestFileName"]},{"name":"open override val latestFileName: String","description":"dev.racci.minix.api.updater.providers.NullUpdateProvider.latestFileName","location":"Minix-API/dev.racci.minix.api.updater.providers/-null-update-provider/latest-file-name.html","searchKeys":["latestFileName","open override val latestFileName: String","dev.racci.minix.api.updater.providers.NullUpdateProvider.latestFileName"]},{"name":"open override val latestFileName: String?","description":"dev.racci.minix.api.updater.providers.BaseOnlineProviderWithDownload.latestFileName","location":"Minix-API/dev.racci.minix.api.updater.providers/-base-online-provider-with-download/latest-file-name.html","searchKeys":["latestFileName","open override val latestFileName: String?","dev.racci.minix.api.updater.providers.BaseOnlineProviderWithDownload.latestFileName"]},{"name":"open override val latestFileName: String?","description":"dev.racci.minix.api.updater.providers.SpigotUpdateProvider.latestFileName","location":"Minix-API/dev.racci.minix.api.updater.providers/-spigot-update-provider/latest-file-name.html","searchKeys":["latestFileName","open override val latestFileName: String?","dev.racci.minix.api.updater.providers.SpigotUpdateProvider.latestFileName"]},{"name":"open override val latestFileURL: URL","description":"dev.racci.minix.api.updater.providers.AlwaysUpdateProvider.latestFileURL","location":"Minix-API/dev.racci.minix.api.updater.providers/-always-update-provider/latest-file-u-r-l.html","searchKeys":["latestFileURL","open override val latestFileURL: URL","dev.racci.minix.api.updater.providers.AlwaysUpdateProvider.latestFileURL"]},{"name":"open override val latestFileURL: URL","description":"dev.racci.minix.api.updater.providers.SpigotUpdateProvider.latestFileURL","location":"Minix-API/dev.racci.minix.api.updater.providers/-spigot-update-provider/latest-file-u-r-l.html","searchKeys":["latestFileURL","open override val latestFileURL: URL","dev.racci.minix.api.updater.providers.SpigotUpdateProvider.latestFileURL"]},{"name":"open override val latestFileURL: URL?","description":"dev.racci.minix.api.updater.providers.BaseOnlineProviderWithDownload.latestFileURL","location":"Minix-API/dev.racci.minix.api.updater.providers/-base-online-provider-with-download/latest-file-u-r-l.html","searchKeys":["latestFileURL","open override val latestFileURL: URL?","dev.racci.minix.api.updater.providers.BaseOnlineProviderWithDownload.latestFileURL"]},{"name":"open override val latestMinecraftVersion: String?","description":"dev.racci.minix.api.updater.providers.BukkitUpdateProvider.latestMinecraftVersion","location":"Minix-API/dev.racci.minix.api.updater.providers/-bukkit-update-provider/latest-minecraft-version.html","searchKeys":["latestMinecraftVersion","open override val latestMinecraftVersion: String?","dev.racci.minix.api.updater.providers.BukkitUpdateProvider.latestMinecraftVersion"]},{"name":"open override val latestMinecraftVersion: String?","description":"dev.racci.minix.api.updater.providers.SpigotUpdateProvider.latestMinecraftVersion","location":"Minix-API/dev.racci.minix.api.updater.providers/-spigot-update-provider/latest-minecraft-version.html","searchKeys":["latestMinecraftVersion","open override val latestMinecraftVersion: String?","dev.racci.minix.api.updater.providers.SpigotUpdateProvider.latestMinecraftVersion"]},{"name":"open override val latestMinecraftVersions: Array<String>","description":"dev.racci.minix.api.updater.providers.SpigotUpdateProvider.latestMinecraftVersions","location":"Minix-API/dev.racci.minix.api.updater.providers/-spigot-update-provider/latest-minecraft-versions.html","searchKeys":["latestMinecraftVersions","open override val latestMinecraftVersions: Array<String>","dev.racci.minix.api.updater.providers.SpigotUpdateProvider.latestMinecraftVersions"]},{"name":"open override val latestName: String?","description":"dev.racci.minix.api.updater.providers.BaseOnlineProviderWithDownload.latestName","location":"Minix-API/dev.racci.minix.api.updater.providers/-base-online-provider-with-download/latest-name.html","searchKeys":["latestName","open override val latestName: String?","dev.racci.minix.api.updater.providers.BaseOnlineProviderWithDownload.latestName"]},{"name":"open override val latestName: String?","description":"dev.racci.minix.api.updater.providers.SpigotUpdateProvider.latestName","location":"Minix-API/dev.racci.minix.api.updater.providers/-spigot-update-provider/latest-name.html","searchKeys":["latestName","open override val latestName: String?","dev.racci.minix.api.updater.providers.SpigotUpdateProvider.latestName"]},{"name":"open override val latestReleaseType: ReleaseType","description":"dev.racci.minix.api.updater.providers.AlwaysUpdateProvider.latestReleaseType","location":"Minix-API/dev.racci.minix.api.updater.providers/-always-update-provider/latest-release-type.html","searchKeys":["latestReleaseType","open override val latestReleaseType: ReleaseType","dev.racci.minix.api.updater.providers.AlwaysUpdateProvider.latestReleaseType"]},{"name":"open override val latestReleaseType: ReleaseType","description":"dev.racci.minix.api.updater.providers.BaseOnlineProvider.latestReleaseType","location":"Minix-API/dev.racci.minix.api.updater.providers/-base-online-provider/latest-release-type.html","searchKeys":["latestReleaseType","open override val latestReleaseType: ReleaseType","dev.racci.minix.api.updater.providers.BaseOnlineProvider.latestReleaseType"]},{"name":"open override val latestReleaseType: ReleaseType","description":"dev.racci.minix.api.updater.providers.NullUpdateProvider.latestReleaseType","location":"Minix-API/dev.racci.minix.api.updater.providers/-null-update-provider/latest-release-type.html","searchKeys":["latestReleaseType","open override val latestReleaseType: ReleaseType","dev.racci.minix.api.updater.providers.NullUpdateProvider.latestReleaseType"]},{"name":"open override val latestVersion: Version","description":"dev.racci.minix.api.updater.providers.AlwaysUpdateProvider.latestVersion","location":"Minix-API/dev.racci.minix.api.updater.providers/-always-update-provider/latest-version.html","searchKeys":["latestVersion","open override val latestVersion: Version","dev.racci.minix.api.updater.providers.AlwaysUpdateProvider.latestVersion"]},{"name":"open override val latestVersion: Version","description":"dev.racci.minix.api.updater.providers.NullUpdateProvider.latestVersion","location":"Minix-API/dev.racci.minix.api.updater.providers/-null-update-provider/latest-version.html","searchKeys":["latestVersion","open override val latestVersion: Version","dev.racci.minix.api.updater.providers.NullUpdateProvider.latestVersion"]},{"name":"open override val latestVersion: Version?","description":"dev.racci.minix.api.updater.providers.BaseOnlineProviderWithDownload.latestVersion","location":"Minix-API/dev.racci.minix.api.updater.providers/-base-online-provider-with-download/latest-version.html","searchKeys":["latestVersion","open override val latestVersion: Version?","dev.racci.minix.api.updater.providers.BaseOnlineProviderWithDownload.latestVersion"]},{"name":"open override val latestVersion: Version?","description":"dev.racci.minix.api.updater.providers.SpigotUpdateProvider.latestVersion","location":"Minix-API/dev.racci.minix.api.updater.providers/-spigot-update-provider/latest-version.html","searchKeys":["latestVersion","open override val latestVersion: Version?","dev.racci.minix.api.updater.providers.SpigotUpdateProvider.latestVersion"]},{"name":"open override val listeners: MultiMap<Function<Unit>, ObservableAction?>","description":"dev.racci.minix.api.utils.collections.ObservableList.listeners","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-list/listeners.html","searchKeys":["listeners","open override val listeners: MultiMap<Function<Unit>, ObservableAction?>","dev.racci.minix.api.utils.collections.ObservableList.listeners"]},{"name":"open override val listeners: MultiMap<Function<Unit>, ObservableAction?>","description":"dev.racci.minix.api.utils.collections.ObservableMap.listeners","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-map/listeners.html","searchKeys":["listeners","open override val listeners: MultiMap<Function<Unit>, ObservableAction?>","dev.racci.minix.api.utils.collections.ObservableMap.listeners"]},{"name":"open override val listeners: MultiMap<Function<Unit>, ObservableAction?>","description":"dev.racci.minix.api.utils.collections.ObservableSet.listeners","location":"Minix-API/dev.racci.minix.api.utils.collections/-observable-set/listeners.html","searchKeys":["listeners","open override val listeners: MultiMap<Function<Unit>, ObservableAction?>","dev.racci.minix.api.utils.collections.ObservableSet.listeners"]},{"name":"open override val minix: MinixPlugin","description":"dev.racci.minix.api.utils.UtilObject.Companion.minix","location":"Minix-API/dev.racci.minix.api.utils/-util-object/-companion/minix.html","searchKeys":["minix","open override val minix: MinixPlugin","dev.racci.minix.api.utils.UtilObject.Companion.minix"]},{"name":"open override val name: String","description":"dev.racci.minix.api.updater.providers.AlwaysUpdateProvider.name","location":"Minix-API/dev.racci.minix.api.updater.providers/-always-update-provider/name.html","searchKeys":["name","open override val name: String","dev.racci.minix.api.updater.providers.AlwaysUpdateProvider.name"]},{"name":"open override val name: String","description":"dev.racci.minix.api.updater.providers.BukkitUpdateProvider.name","location":"Minix-API/dev.racci.minix.api.updater.providers/-bukkit-update-provider/name.html","searchKeys":["name","open override val name: String","dev.racci.minix.api.updater.providers.BukkitUpdateProvider.name"]},{"name":"open override val name: String","description":"dev.racci.minix.api.updater.providers.GithubUpdateProvider.name","location":"Minix-API/dev.racci.minix.api.updater.providers/-github-update-provider/name.html","searchKeys":["name","open override val name: String","dev.racci.minix.api.updater.providers.GithubUpdateProvider.name"]},{"name":"open override val name: String","description":"dev.racci.minix.api.updater.providers.JenkinsUpdateProvider.name","location":"Minix-API/dev.racci.minix.api.updater.providers/-jenkins-update-provider/name.html","searchKeys":["name","open override val name: String","dev.racci.minix.api.updater.providers.JenkinsUpdateProvider.name"]},{"name":"open override val name: String","description":"dev.racci.minix.api.updater.providers.NullUpdateProvider.name","location":"Minix-API/dev.racci.minix.api.updater.providers/-null-update-provider/name.html","searchKeys":["name","open override val name: String","dev.racci.minix.api.updater.providers.NullUpdateProvider.name"]},{"name":"open override val name: String","description":"dev.racci.minix.api.updater.providers.SpigotUpdateProvider.name","location":"Minix-API/dev.racci.minix.api.updater.providers/-spigot-update-provider/name.html","searchKeys":["name","open override val name: String","dev.racci.minix.api.updater.providers.SpigotUpdateProvider.name"]},{"name":"open override val plugin: MinixPlugin","description":"dev.racci.minix.api.collections.PlayerMap.plugin","location":"Minix-API/dev.racci.minix.api.collections/-player-map/plugin.html","searchKeys":["plugin","open override val plugin: MinixPlugin","dev.racci.minix.api.collections.PlayerMap.plugin"]},{"name":"open override val plugin: MinixPlugin","description":"dev.racci.minix.api.extensions.SimpleKListener.plugin","location":"Minix-API/dev.racci.minix.api.extensions/-simple-k-listener/plugin.html","searchKeys":["plugin","open override val plugin: MinixPlugin","dev.racci.minix.api.extensions.SimpleKListener.plugin"]},{"name":"open override val plugin: MinixPlugin","description":"dev.racci.minix.api.utils.collections.ExpirationMapImpl.plugin","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-map-impl/plugin.html","searchKeys":["plugin","open override val plugin: MinixPlugin","dev.racci.minix.api.utils.collections.ExpirationMapImpl.plugin"]},{"name":"open override val plugin: MinixPlugin","description":"dev.racci.minix.api.utils.collections.OnlinePlayerList.plugin","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-list/plugin.html","searchKeys":["plugin","open override val plugin: MinixPlugin","dev.racci.minix.api.utils.collections.OnlinePlayerList.plugin"]},{"name":"open override val plugin: MinixPlugin","description":"dev.racci.minix.api.utils.collections.OnlinePlayerMap.plugin","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-map/plugin.html","searchKeys":["plugin","open override val plugin: MinixPlugin","dev.racci.minix.api.utils.collections.OnlinePlayerMap.plugin"]},{"name":"open override val plugin: MinixPlugin","description":"dev.racci.minix.api.utils.collections.OnlinePlayerSet.plugin","location":"Minix-API/dev.racci.minix.api.utils.collections/-online-player-set/plugin.html","searchKeys":["plugin","open override val plugin: MinixPlugin","dev.racci.minix.api.utils.collections.OnlinePlayerSet.plugin"]},{"name":"open override val plugin: T","description":"dev.racci.minix.api.plugin.logger.PluginDependentMinixLogger.plugin","location":"Minix-API/dev.racci.minix.api.plugin.logger/-plugin-dependent-minix-logger/plugin.html","searchKeys":["plugin","open override val plugin: T","dev.racci.minix.api.plugin.logger.PluginDependentMinixLogger.plugin"]},{"name":"open override val providesChangelog: Boolean","description":"dev.racci.minix.api.updater.providers.GithubUpdateProvider.providesChangelog","location":"Minix-API/dev.racci.minix.api.updater.providers/-github-update-provider/provides-changelog.html","searchKeys":["providesChangelog","open override val providesChangelog: Boolean","dev.racci.minix.api.updater.providers.GithubUpdateProvider.providesChangelog"]},{"name":"open override val providesChangelog: Boolean","description":"dev.racci.minix.api.updater.providers.JenkinsUpdateProvider.providesChangelog","location":"Minix-API/dev.racci.minix.api.updater.providers/-jenkins-update-provider/provides-changelog.html","searchKeys":["providesChangelog","open override val providesChangelog: Boolean","dev.racci.minix.api.updater.providers.JenkinsUpdateProvider.providesChangelog"]},{"name":"open override val providesChangelog: Boolean","description":"dev.racci.minix.api.updater.providers.NullUpdateProvider.providesChangelog","location":"Minix-API/dev.racci.minix.api.updater.providers/-null-update-provider/provides-changelog.html","searchKeys":["providesChangelog","open override val providesChangelog: Boolean","dev.racci.minix.api.updater.providers.NullUpdateProvider.providesChangelog"]},{"name":"open override val providesChangelog: Boolean","description":"dev.racci.minix.api.updater.providers.SpigotUpdateProvider.providesChangelog","location":"Minix-API/dev.racci.minix.api.updater.providers/-spigot-update-provider/provides-changelog.html","searchKeys":["providesChangelog","open override val providesChangelog: Boolean","dev.racci.minix.api.updater.providers.SpigotUpdateProvider.providesChangelog"]},{"name":"open override val providesChecksum: ChecksumType","description":"dev.racci.minix.api.updater.providers.BukkitUpdateProvider.providesChecksum","location":"Minix-API/dev.racci.minix.api.updater.providers/-bukkit-update-provider/provides-checksum.html","searchKeys":["providesChecksum","open override val providesChecksum: ChecksumType","dev.racci.minix.api.updater.providers.BukkitUpdateProvider.providesChecksum"]},{"name":"open override val providesChecksum: ChecksumType","description":"dev.racci.minix.api.updater.providers.GithubUpdateProvider.providesChecksum","location":"Minix-API/dev.racci.minix.api.updater.providers/-github-update-provider/provides-checksum.html","searchKeys":["providesChecksum","open override val providesChecksum: ChecksumType","dev.racci.minix.api.updater.providers.GithubUpdateProvider.providesChecksum"]},{"name":"open override val providesChecksum: ChecksumType","description":"dev.racci.minix.api.updater.providers.JenkinsUpdateProvider.providesChecksum","location":"Minix-API/dev.racci.minix.api.updater.providers/-jenkins-update-provider/provides-checksum.html","searchKeys":["providesChecksum","open override val providesChecksum: ChecksumType","dev.racci.minix.api.updater.providers.JenkinsUpdateProvider.providesChecksum"]},{"name":"open override val providesChecksum: ChecksumType","description":"dev.racci.minix.api.updater.providers.NullUpdateProvider.providesChecksum","location":"Minix-API/dev.racci.minix.api.updater.providers/-null-update-provider/provides-checksum.html","searchKeys":["providesChecksum","open override val providesChecksum: ChecksumType","dev.racci.minix.api.updater.providers.NullUpdateProvider.providesChecksum"]},{"name":"open override val providesChecksum: ChecksumType","description":"dev.racci.minix.api.updater.providers.SpigotUpdateProvider.providesChecksum","location":"Minix-API/dev.racci.minix.api.updater.providers/-spigot-update-provider/provides-checksum.html","searchKeys":["providesChecksum","open override val providesChecksum: ChecksumType","dev.racci.minix.api.updater.providers.SpigotUpdateProvider.providesChecksum"]},{"name":"open override val providesDependencies: Boolean","description":"dev.racci.minix.api.updater.providers.GithubUpdateProvider.providesDependencies","location":"Minix-API/dev.racci.minix.api.updater.providers/-github-update-provider/provides-dependencies.html","searchKeys":["providesDependencies","open override val providesDependencies: Boolean","dev.racci.minix.api.updater.providers.GithubUpdateProvider.providesDependencies"]},{"name":"open override val providesDependencies: Boolean","description":"dev.racci.minix.api.updater.providers.NullUpdateProvider.providesDependencies","location":"Minix-API/dev.racci.minix.api.updater.providers/-null-update-provider/provides-dependencies.html","searchKeys":["providesDependencies","open override val providesDependencies: Boolean","dev.racci.minix.api.updater.providers.NullUpdateProvider.providesDependencies"]},{"name":"open override val providesDependencies: Boolean","description":"dev.racci.minix.api.updater.providers.SpigotUpdateProvider.providesDependencies","location":"Minix-API/dev.racci.minix.api.updater.providers/-spigot-update-provider/provides-dependencies.html","searchKeys":["providesDependencies","open override val providesDependencies: Boolean","dev.racci.minix.api.updater.providers.SpigotUpdateProvider.providesDependencies"]},{"name":"open override val providesDownloadURL: Boolean","description":"dev.racci.minix.api.updater.providers.AlwaysUpdateProvider.providesDownloadURL","location":"Minix-API/dev.racci.minix.api.updater.providers/-always-update-provider/provides-download-u-r-l.html","searchKeys":["providesDownloadURL","open override val providesDownloadURL: Boolean","dev.racci.minix.api.updater.providers.AlwaysUpdateProvider.providesDownloadURL"]},{"name":"open override val providesDownloadURL: Boolean","description":"dev.racci.minix.api.updater.providers.BaseOnlineProvider.providesDownloadURL","location":"Minix-API/dev.racci.minix.api.updater.providers/-base-online-provider/provides-download-u-r-l.html","searchKeys":["providesDownloadURL","open override val providesDownloadURL: Boolean","dev.racci.minix.api.updater.providers.BaseOnlineProvider.providesDownloadURL"]},{"name":"open override val providesDownloadURL: Boolean","description":"dev.racci.minix.api.updater.providers.NullUpdateProvider.providesDownloadURL","location":"Minix-API/dev.racci.minix.api.updater.providers/-null-update-provider/provides-download-u-r-l.html","searchKeys":["providesDownloadURL","open override val providesDownloadURL: Boolean","dev.racci.minix.api.updater.providers.NullUpdateProvider.providesDownloadURL"]},{"name":"open override val providesDownloadURL: Boolean","description":"dev.racci.minix.api.updater.providers.SpigotUpdateProvider.providesDownloadURL","location":"Minix-API/dev.racci.minix.api.updater.providers/-spigot-update-provider/provides-download-u-r-l.html","searchKeys":["providesDownloadURL","open override val providesDownloadURL: Boolean","dev.racci.minix.api.updater.providers.SpigotUpdateProvider.providesDownloadURL"]},{"name":"open override val providesMinecraftVersion: Boolean","description":"dev.racci.minix.api.updater.providers.BukkitUpdateProvider.providesMinecraftVersion","location":"Minix-API/dev.racci.minix.api.updater.providers/-bukkit-update-provider/provides-minecraft-version.html","searchKeys":["providesMinecraftVersion","open override val providesMinecraftVersion: Boolean","dev.racci.minix.api.updater.providers.BukkitUpdateProvider.providesMinecraftVersion"]},{"name":"open override val providesMinecraftVersion: Boolean","description":"dev.racci.minix.api.updater.providers.GithubUpdateProvider.providesMinecraftVersion","location":"Minix-API/dev.racci.minix.api.updater.providers/-github-update-provider/provides-minecraft-version.html","searchKeys":["providesMinecraftVersion","open override val providesMinecraftVersion: Boolean","dev.racci.minix.api.updater.providers.GithubUpdateProvider.providesMinecraftVersion"]},{"name":"open override val providesMinecraftVersion: Boolean","description":"dev.racci.minix.api.updater.providers.NullUpdateProvider.providesMinecraftVersion","location":"Minix-API/dev.racci.minix.api.updater.providers/-null-update-provider/provides-minecraft-version.html","searchKeys":["providesMinecraftVersion","open override val providesMinecraftVersion: Boolean","dev.racci.minix.api.updater.providers.NullUpdateProvider.providesMinecraftVersion"]},{"name":"open override val providesMinecraftVersion: Boolean","description":"dev.racci.minix.api.updater.providers.SpigotUpdateProvider.providesMinecraftVersion","location":"Minix-API/dev.racci.minix.api.updater.providers/-spigot-update-provider/provides-minecraft-version.html","searchKeys":["providesMinecraftVersion","open override val providesMinecraftVersion: Boolean","dev.racci.minix.api.updater.providers.SpigotUpdateProvider.providesMinecraftVersion"]},{"name":"open override val providesMinecraftVersions: Boolean","description":"dev.racci.minix.api.updater.providers.GithubUpdateProvider.providesMinecraftVersions","location":"Minix-API/dev.racci.minix.api.updater.providers/-github-update-provider/provides-minecraft-versions.html","searchKeys":["providesMinecraftVersions","open override val providesMinecraftVersions: Boolean","dev.racci.minix.api.updater.providers.GithubUpdateProvider.providesMinecraftVersions"]},{"name":"open override val providesMinecraftVersions: Boolean","description":"dev.racci.minix.api.updater.providers.NullUpdateProvider.providesMinecraftVersions","location":"Minix-API/dev.racci.minix.api.updater.providers/-null-update-provider/provides-minecraft-versions.html","searchKeys":["providesMinecraftVersions","open override val providesMinecraftVersions: Boolean","dev.racci.minix.api.updater.providers.NullUpdateProvider.providesMinecraftVersions"]},{"name":"open override val providesMinecraftVersions: Boolean","description":"dev.racci.minix.api.updater.providers.SpigotUpdateProvider.providesMinecraftVersions","location":"Minix-API/dev.racci.minix.api.updater.providers/-spigot-update-provider/provides-minecraft-versions.html","searchKeys":["providesMinecraftVersions","open override val providesMinecraftVersions: Boolean","dev.racci.minix.api.updater.providers.SpigotUpdateProvider.providesMinecraftVersions"]},{"name":"open override val providesUpdateHistory: Boolean","description":"dev.racci.minix.api.updater.providers.BukkitUpdateProvider.providesUpdateHistory","location":"Minix-API/dev.racci.minix.api.updater.providers/-bukkit-update-provider/provides-update-history.html","searchKeys":["providesUpdateHistory","open override val providesUpdateHistory: Boolean","dev.racci.minix.api.updater.providers.BukkitUpdateProvider.providesUpdateHistory"]},{"name":"open override val providesUpdateHistory: Boolean","description":"dev.racci.minix.api.updater.providers.GithubUpdateProvider.providesUpdateHistory","location":"Minix-API/dev.racci.minix.api.updater.providers/-github-update-provider/provides-update-history.html","searchKeys":["providesUpdateHistory","open override val providesUpdateHistory: Boolean","dev.racci.minix.api.updater.providers.GithubUpdateProvider.providesUpdateHistory"]},{"name":"open override val providesUpdateHistory: Boolean","description":"dev.racci.minix.api.updater.providers.JenkinsUpdateProvider.providesUpdateHistory","location":"Minix-API/dev.racci.minix.api.updater.providers/-jenkins-update-provider/provides-update-history.html","searchKeys":["providesUpdateHistory","open override val providesUpdateHistory: Boolean","dev.racci.minix.api.updater.providers.JenkinsUpdateProvider.providesUpdateHistory"]},{"name":"open override val providesUpdateHistory: Boolean","description":"dev.racci.minix.api.updater.providers.NullUpdateProvider.providesUpdateHistory","location":"Minix-API/dev.racci.minix.api.updater.providers/-null-update-provider/provides-update-history.html","searchKeys":["providesUpdateHistory","open override val providesUpdateHistory: Boolean","dev.racci.minix.api.updater.providers.NullUpdateProvider.providesUpdateHistory"]},{"name":"open override val providesUpdateHistory: Boolean = false","description":"dev.racci.minix.api.updater.providers.SpigotUpdateProvider.providesUpdateHistory","location":"Minix-API/dev.racci.minix.api.updater.providers/-spigot-update-provider/provides-update-history.html","searchKeys":["providesUpdateHistory","open override val providesUpdateHistory: Boolean = false","dev.racci.minix.api.updater.providers.SpigotUpdateProvider.providesUpdateHistory"]},{"name":"open override val size: Int","description":"dev.racci.minix.api.utils.collections.ExpirationListImpl.size","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-list-impl/size.html","searchKeys":["size","open override val size: Int","dev.racci.minix.api.utils.collections.ExpirationListImpl.size"]},{"name":"open override val start: POS","description":"dev.racci.minix.api.utils.minecraft.PosRange.start","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pos-range/start.html","searchKeys":["start","open override val start: POS","dev.racci.minix.api.utils.minecraft.PosRange.start"]},{"name":"open override val updateHistory: Array<UpdateProvider.UpdateFile>?","description":"dev.racci.minix.api.updater.providers.BukkitUpdateProvider.updateHistory","location":"Minix-API/dev.racci.minix.api.updater.providers/-bukkit-update-provider/update-history.html","searchKeys":["updateHistory","open override val updateHistory: Array<UpdateProvider.UpdateFile>?","dev.racci.minix.api.updater.providers.BukkitUpdateProvider.updateHistory"]},{"name":"open suspend fun handleAfterEnable()","description":"dev.racci.minix.api.plugin.SusPlugin.handleAfterEnable","location":"Minix-API/dev.racci.minix.api.plugin/-sus-plugin/handle-after-enable.html","searchKeys":["handleAfterEnable","open suspend fun handleAfterEnable()","dev.racci.minix.api.plugin.SusPlugin.handleAfterEnable"]},{"name":"open suspend fun handleAfterLoad()","description":"dev.racci.minix.api.plugin.SusPlugin.handleAfterLoad","location":"Minix-API/dev.racci.minix.api.plugin/-sus-plugin/handle-after-load.html","searchKeys":["handleAfterLoad","open suspend fun handleAfterLoad()","dev.racci.minix.api.plugin.SusPlugin.handleAfterLoad"]},{"name":"open suspend fun handleDisable()","description":"dev.racci.minix.api.plugin.SusPlugin.handleDisable","location":"Minix-API/dev.racci.minix.api.plugin/-sus-plugin/handle-disable.html","searchKeys":["handleDisable","open suspend fun handleDisable()","dev.racci.minix.api.plugin.SusPlugin.handleDisable"]},{"name":"open suspend fun handleEnable()","description":"dev.racci.minix.api.plugin.SusPlugin.handleEnable","location":"Minix-API/dev.racci.minix.api.plugin/-sus-plugin/handle-enable.html","searchKeys":["handleEnable","open suspend fun handleEnable()","dev.racci.minix.api.plugin.SusPlugin.handleEnable"]},{"name":"open suspend fun handleLoad()","description":"dev.racci.minix.api.plugin.SusPlugin.handleLoad","location":"Minix-API/dev.racci.minix.api.plugin/-sus-plugin/handle-load.html","searchKeys":["handleLoad","open suspend fun handleLoad()","dev.racci.minix.api.plugin.SusPlugin.handleLoad"]},{"name":"open suspend override fun connect(url: URL): HttpResponse?","description":"dev.racci.minix.api.updater.providers.BaseOnlineProvider.connect","location":"Minix-API/dev.racci.minix.api.updater.providers/-base-online-provider/connect.html","searchKeys":["connect","open suspend override fun connect(url: URL): HttpResponse?","dev.racci.minix.api.updater.providers.BaseOnlineProvider.connect"]},{"name":"open suspend override fun connect(url: URL): Nothing?","description":"dev.racci.minix.api.updater.providers.NullUpdateProvider.connect","location":"Minix-API/dev.racci.minix.api.updater.providers/-null-update-provider/connect.html","searchKeys":["connect","open suspend override fun connect(url: URL): Nothing?","dev.racci.minix.api.updater.providers.NullUpdateProvider.connect"]},{"name":"open suspend override fun handleEnable()","description":"dev.racci.minix.api.extension.Extension.handleEnable","location":"Minix-API/dev.racci.minix.api.extension/-extension/handle-enable.html","searchKeys":["handleEnable","open suspend override fun handleEnable()","dev.racci.minix.api.extension.Extension.handleEnable"]},{"name":"open suspend override fun handleLoad()","description":"dev.racci.minix.api.extension.Extension.handleLoad","location":"Minix-API/dev.racci.minix.api.extension/-extension/handle-load.html","searchKeys":["handleLoad","open suspend override fun handleLoad()","dev.racci.minix.api.extension.Extension.handleLoad"]},{"name":"open suspend override fun handleUnload()","description":"dev.racci.minix.api.extension.Extension.handleUnload","location":"Minix-API/dev.racci.minix.api.extension/-extension/handle-unload.html","searchKeys":["handleUnload","open suspend override fun handleUnload()","dev.racci.minix.api.extension.Extension.handleUnload"]},{"name":"open suspend override fun query(): UpdateResult","description":"dev.racci.minix.api.updater.providers.AlwaysUpdateProvider.query","location":"Minix-API/dev.racci.minix.api.updater.providers/-always-update-provider/query.html","searchKeys":["query","open suspend override fun query(): UpdateResult","dev.racci.minix.api.updater.providers.AlwaysUpdateProvider.query"]},{"name":"open suspend override fun query(): UpdateResult","description":"dev.racci.minix.api.updater.providers.BukkitUpdateProvider.query","location":"Minix-API/dev.racci.minix.api.updater.providers/-bukkit-update-provider/query.html","searchKeys":["query","open suspend override fun query(): UpdateResult","dev.racci.minix.api.updater.providers.BukkitUpdateProvider.query"]},{"name":"open suspend override fun query(): UpdateResult","description":"dev.racci.minix.api.updater.providers.GithubUpdateProvider.query","location":"Minix-API/dev.racci.minix.api.updater.providers/-github-update-provider/query.html","searchKeys":["query","open suspend override fun query(): UpdateResult","dev.racci.minix.api.updater.providers.GithubUpdateProvider.query"]},{"name":"open suspend override fun query(): UpdateResult","description":"dev.racci.minix.api.updater.providers.JenkinsUpdateProvider.query","location":"Minix-API/dev.racci.minix.api.updater.providers/-jenkins-update-provider/query.html","searchKeys":["query","open suspend override fun query(): UpdateResult","dev.racci.minix.api.updater.providers.JenkinsUpdateProvider.query"]},{"name":"open suspend override fun query(): UpdateResult","description":"dev.racci.minix.api.updater.providers.NullUpdateProvider.query","location":"Minix-API/dev.racci.minix.api.updater.providers/-null-update-provider/query.html","searchKeys":["query","open suspend override fun query(): UpdateResult","dev.racci.minix.api.updater.providers.NullUpdateProvider.query"]},{"name":"open suspend override fun query(): UpdateResult","description":"dev.racci.minix.api.updater.providers.SpigotUpdateProvider.query","location":"Minix-API/dev.racci.minix.api.updater.providers/-spigot-update-provider/query.html","searchKeys":["query","open suspend override fun query(): UpdateResult","dev.racci.minix.api.updater.providers.SpigotUpdateProvider.query"]},{"name":"open val hasItem: Boolean","description":"dev.racci.minix.api.events.AbstractComboEvent.hasItem","location":"Minix-API/dev.racci.minix.api.events/-abstract-combo-event/has-item.html","searchKeys":["hasItem","open val hasItem: Boolean","dev.racci.minix.api.events.AbstractComboEvent.hasItem"]},{"name":"open val latestChangelog: String?","description":"dev.racci.minix.api.updater.providers.UpdateProvider.latestChangelog","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/latest-changelog.html","searchKeys":["latestChangelog","open val latestChangelog: String?","dev.racci.minix.api.updater.providers.UpdateProvider.latestChangelog"]},{"name":"open val latestChecksum: String?","description":"dev.racci.minix.api.updater.providers.UpdateProvider.latestChecksum","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/latest-checksum.html","searchKeys":["latestChecksum","open val latestChecksum: String?","dev.racci.minix.api.updater.providers.UpdateProvider.latestChecksum"]},{"name":"open val latestDependencies: Array<UpdateProvider.UpdateFile>?","description":"dev.racci.minix.api.updater.providers.UpdateProvider.latestDependencies","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/latest-dependencies.html","searchKeys":["latestDependencies","open val latestDependencies: Array<UpdateProvider.UpdateFile>?","dev.racci.minix.api.updater.providers.UpdateProvider.latestDependencies"]},{"name":"open val latestFileURL: URL?","description":"dev.racci.minix.api.updater.providers.UpdateProvider.latestFileURL","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/latest-file-u-r-l.html","searchKeys":["latestFileURL","open val latestFileURL: URL?","dev.racci.minix.api.updater.providers.UpdateProvider.latestFileURL"]},{"name":"open val latestMinecraftVersion: String?","description":"dev.racci.minix.api.updater.providers.UpdateProvider.latestMinecraftVersion","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/latest-minecraft-version.html","searchKeys":["latestMinecraftVersion","open val latestMinecraftVersion: String?","dev.racci.minix.api.updater.providers.UpdateProvider.latestMinecraftVersion"]},{"name":"open val latestMinecraftVersions: Array<String>?","description":"dev.racci.minix.api.updater.providers.UpdateProvider.latestMinecraftVersions","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/latest-minecraft-versions.html","searchKeys":["latestMinecraftVersions","open val latestMinecraftVersions: Array<String>?","dev.racci.minix.api.updater.providers.UpdateProvider.latestMinecraftVersions"]},{"name":"open val latestName: String?","description":"dev.racci.minix.api.updater.providers.UpdateProvider.latestName","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/latest-name.html","searchKeys":["latestName","open val latestName: String?","dev.racci.minix.api.updater.providers.UpdateProvider.latestName"]},{"name":"open val name: String","description":"dev.racci.minix.api.updater.providers.UpdateProvider.name","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/name.html","searchKeys":["name","open val name: String","dev.racci.minix.api.updater.providers.UpdateProvider.name"]},{"name":"open val prefixes: Map<String, String>","description":"dev.racci.minix.api.data.LangConfig.prefixes","location":"Minix-API/dev.racci.minix.api.data/-lang-config/prefixes.html","searchKeys":["prefixes","open val prefixes: Map<String, String>","dev.racci.minix.api.data.LangConfig.prefixes"]},{"name":"open val providesChangelog: Boolean","description":"dev.racci.minix.api.updater.providers.UpdateProvider.providesChangelog","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/provides-changelog.html","searchKeys":["providesChangelog","open val providesChangelog: Boolean","dev.racci.minix.api.updater.providers.UpdateProvider.providesChangelog"]},{"name":"open val providesChecksum: ChecksumType","description":"dev.racci.minix.api.updater.providers.UpdateProvider.providesChecksum","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/provides-checksum.html","searchKeys":["providesChecksum","open val providesChecksum: ChecksumType","dev.racci.minix.api.updater.providers.UpdateProvider.providesChecksum"]},{"name":"open val providesDependencies: Boolean","description":"dev.racci.minix.api.updater.providers.UpdateProvider.providesDependencies","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/provides-dependencies.html","searchKeys":["providesDependencies","open val providesDependencies: Boolean","dev.racci.minix.api.updater.providers.UpdateProvider.providesDependencies"]},{"name":"open val providesDownloadURL: Boolean","description":"dev.racci.minix.api.updater.providers.UpdateProvider.providesDownloadURL","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/provides-download-u-r-l.html","searchKeys":["providesDownloadURL","open val providesDownloadURL: Boolean","dev.racci.minix.api.updater.providers.UpdateProvider.providesDownloadURL"]},{"name":"open val providesMinecraftVersion: Boolean","description":"dev.racci.minix.api.updater.providers.UpdateProvider.providesMinecraftVersion","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/provides-minecraft-version.html","searchKeys":["providesMinecraftVersion","open val providesMinecraftVersion: Boolean","dev.racci.minix.api.updater.providers.UpdateProvider.providesMinecraftVersion"]},{"name":"open val providesMinecraftVersions: Boolean","description":"dev.racci.minix.api.updater.providers.UpdateProvider.providesMinecraftVersions","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/provides-minecraft-versions.html","searchKeys":["providesMinecraftVersions","open val providesMinecraftVersions: Boolean","dev.racci.minix.api.updater.providers.UpdateProvider.providesMinecraftVersions"]},{"name":"open val providesUpdateHistory: Boolean","description":"dev.racci.minix.api.updater.providers.UpdateProvider.providesUpdateHistory","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/provides-update-history.html","searchKeys":["providesUpdateHistory","open val providesUpdateHistory: Boolean","dev.racci.minix.api.updater.providers.UpdateProvider.providesUpdateHistory"]},{"name":"open val updateHistory: Array<UpdateProvider.UpdateFile>?","description":"dev.racci.minix.api.updater.providers.UpdateProvider.updateHistory","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/update-history.html","searchKeys":["updateHistory","open val updateHistory: Array<UpdateProvider.UpdateFile>?","dev.racci.minix.api.updater.providers.UpdateProvider.updateHistory"]},{"name":"open val updater: PluginUpdater? = null","description":"dev.racci.minix.api.plugin.MinixPlugin.updater","location":"Minix-API/dev.racci.minix.api.plugin/-minix-plugin/updater.html","searchKeys":["updater","open val updater: PluginUpdater? = null","dev.racci.minix.api.plugin.MinixPlugin.updater"]},{"name":"open val version: Int = 1","description":"dev.racci.minix.api.data.MinixConfig.version","location":"Minix-API/dev.racci.minix.api.data/-minix-config/version.html","searchKeys":["version","open val version: Int = 1","dev.racci.minix.api.data.MinixConfig.version"]},{"name":"open val versionTransformations: Map<Int, ConfigurationTransformation>","description":"dev.racci.minix.api.data.MinixConfig.versionTransformations","location":"Minix-API/dev.racci.minix.api.data/-minix-config/version-transformations.html","searchKeys":["versionTransformations","open val versionTransformations: Map<Int, ConfigurationTransformation>","dev.racci.minix.api.data.MinixConfig.versionTransformations"]},{"name":"operator fun <K, V> Map<K, V>.get(key: K, default: V): V","description":"dev.racci.minix.api.utils.collections.CollectionUtils.get","location":"Minix-API/dev.racci.minix.api.utils.collections/-collection-utils/get.html","searchKeys":["get","operator fun <K, V> Map<K, V>.get(key: K, default: V): V","dev.racci.minix.api.utils.collections.CollectionUtils.get"]},{"name":"operator fun <T> getValue(thisRef: P, property: KProperty<*>): T","description":"dev.racci.minix.api.plugin.PluginData.getValue","location":"Minix-API/dev.racci.minix.api.plugin/-plugin-data/get-value.html","searchKeys":["getValue","operator fun <T> getValue(thisRef: P, property: KProperty<*>): T","dev.racci.minix.api.plugin.PluginData.getValue"]},{"name":"operator fun Block.rangeTo(other: Block): PosRange<Block, BlockPos>","description":"dev.racci.minix.api.utils.minecraft.rangeTo","location":"Minix-API/dev.racci.minix.api.utils.minecraft/range-to.html","searchKeys":["rangeTo","operator fun Block.rangeTo(other: Block): PosRange<Block, BlockPos>","dev.racci.minix.api.utils.minecraft.rangeTo"]},{"name":"operator fun BlockEvent.component1(): Block","description":"dev.racci.minix.api.destructors.component1","location":"Minix-API/dev.racci.minix.api.destructors/component1.html","searchKeys":["component1","operator fun BlockEvent.component1(): Block","dev.racci.minix.api.destructors.component1"]},{"name":"operator fun Chunk.rangeTo(other: Chunk): PosRange<Chunk, ChunkPos>","description":"dev.racci.minix.api.utils.minecraft.rangeTo","location":"Minix-API/dev.racci.minix.api.utils.minecraft/range-to.html","searchKeys":["rangeTo","operator fun Chunk.rangeTo(other: Chunk): PosRange<Chunk, ChunkPos>","dev.racci.minix.api.utils.minecraft.rangeTo"]},{"name":"operator fun EntityEvent.component1(): Entity","description":"dev.racci.minix.api.destructors.component1","location":"Minix-API/dev.racci.minix.api.destructors/component1.html","searchKeys":["component1","operator fun EntityEvent.component1(): Entity","dev.racci.minix.api.destructors.component1"]},{"name":"operator fun InventoryEvent.component1(): Inventory","description":"dev.racci.minix.api.destructors.component1","location":"Minix-API/dev.racci.minix.api.destructors/component1.html","searchKeys":["component1","operator fun InventoryEvent.component1(): Inventory","dev.racci.minix.api.destructors.component1"]},{"name":"operator fun InventoryEvent.component2(): MutableList<HumanEntity>","description":"dev.racci.minix.api.destructors.component2","location":"Minix-API/dev.racci.minix.api.destructors/component2.html","searchKeys":["component2","operator fun InventoryEvent.component2(): MutableList<HumanEntity>","dev.racci.minix.api.destructors.component2"]},{"name":"operator fun InventoryEvent.component3(): InventoryView","description":"dev.racci.minix.api.destructors.component3","location":"Minix-API/dev.racci.minix.api.destructors/component3.html","searchKeys":["component3","operator fun InventoryEvent.component3(): InventoryView","dev.racci.minix.api.destructors.component3"]},{"name":"operator fun InventoryMoveItemEvent.component1(): ItemStack","description":"dev.racci.minix.api.destructors.component1","location":"Minix-API/dev.racci.minix.api.destructors/component1.html","searchKeys":["component1","operator fun InventoryMoveItemEvent.component1(): ItemStack","dev.racci.minix.api.destructors.component1"]},{"name":"operator fun InventoryMoveItemEvent.component2(): Inventory","description":"dev.racci.minix.api.destructors.component2","location":"Minix-API/dev.racci.minix.api.destructors/component2.html","searchKeys":["component2","operator fun InventoryMoveItemEvent.component2(): Inventory","dev.racci.minix.api.destructors.component2"]},{"name":"operator fun InventoryMoveItemEvent.component3(): Inventory","description":"dev.racci.minix.api.destructors.component3","location":"Minix-API/dev.racci.minix.api.destructors/component3.html","searchKeys":["component3","operator fun InventoryMoveItemEvent.component3(): Inventory","dev.racci.minix.api.destructors.component3"]},{"name":"operator fun InventoryPickupItemEvent.component1(): Item","description":"dev.racci.minix.api.destructors.component1","location":"Minix-API/dev.racci.minix.api.destructors/component1.html","searchKeys":["component1","operator fun InventoryPickupItemEvent.component1(): Item","dev.racci.minix.api.destructors.component1"]},{"name":"operator fun InventoryPickupItemEvent.component2(): Inventory","description":"dev.racci.minix.api.destructors.component2","location":"Minix-API/dev.racci.minix.api.destructors/component2.html","searchKeys":["component2","operator fun InventoryPickupItemEvent.component2(): Inventory","dev.racci.minix.api.destructors.component2"]},{"name":"operator fun Location.component1(): Double","description":"dev.racci.minix.api.destructors.component1","location":"Minix-API/dev.racci.minix.api.destructors/component1.html","searchKeys":["component1","operator fun Location.component1(): Double","dev.racci.minix.api.destructors.component1"]},{"name":"operator fun Location.component2(): Double","description":"dev.racci.minix.api.destructors.component2","location":"Minix-API/dev.racci.minix.api.destructors/component2.html","searchKeys":["component2","operator fun Location.component2(): Double","dev.racci.minix.api.destructors.component2"]},{"name":"operator fun Location.component3(): Double","description":"dev.racci.minix.api.destructors.component3","location":"Minix-API/dev.racci.minix.api.destructors/component3.html","searchKeys":["component3","operator fun Location.component3(): Double","dev.racci.minix.api.destructors.component3"]},{"name":"operator fun Location.component4(): World?","description":"dev.racci.minix.api.destructors.component4","location":"Minix-API/dev.racci.minix.api.destructors/component4.html","searchKeys":["component4","operator fun Location.component4(): World?","dev.racci.minix.api.destructors.component4"]},{"name":"operator fun Location.rangeTo(other: Location): PosRange<Location, BlockPos>","description":"dev.racci.minix.api.utils.minecraft.rangeTo","location":"Minix-API/dev.racci.minix.api.utils.minecraft/range-to.html","searchKeys":["rangeTo","operator fun Location.rangeTo(other: Location): PosRange<Location, BlockPos>","dev.racci.minix.api.utils.minecraft.rangeTo"]},{"name":"operator fun Pattern.component1(): DyeColor","description":"dev.racci.minix.api.destructors.component1","location":"Minix-API/dev.racci.minix.api.destructors/component1.html","searchKeys":["component1","operator fun Pattern.component1(): DyeColor","dev.racci.minix.api.destructors.component1"]},{"name":"operator fun Pattern.component2(): PatternType","description":"dev.racci.minix.api.destructors.component2","location":"Minix-API/dev.racci.minix.api.destructors/component2.html","searchKeys":["component2","operator fun Pattern.component2(): PatternType","dev.racci.minix.api.destructors.component2"]},{"name":"operator fun PlayerEvent.component1(): Player","description":"dev.racci.minix.api.destructors.component1","location":"Minix-API/dev.racci.minix.api.destructors/component1.html","searchKeys":["component1","operator fun PlayerEvent.component1(): Player","dev.racci.minix.api.destructors.component1"]},{"name":"operator fun PlayerExpChangeEvent.component2(): Int","description":"dev.racci.minix.api.destructors.component2","location":"Minix-API/dev.racci.minix.api.destructors/component2.html","searchKeys":["component2","operator fun PlayerExpChangeEvent.component2(): Int","dev.racci.minix.api.destructors.component2"]},{"name":"operator fun PlayerItemHeldEvent.component2(): Int","description":"dev.racci.minix.api.destructors.component2","location":"Minix-API/dev.racci.minix.api.destructors/component2.html","searchKeys":["component2","operator fun PlayerItemHeldEvent.component2(): Int","dev.racci.minix.api.destructors.component2"]},{"name":"operator fun PlayerItemHeldEvent.component3(): Int","description":"dev.racci.minix.api.destructors.component3","location":"Minix-API/dev.racci.minix.api.destructors/component3.html","searchKeys":["component3","operator fun PlayerItemHeldEvent.component3(): Int","dev.racci.minix.api.destructors.component3"]},{"name":"operator fun PlayerLeashEntityEvent.component1(): Player","description":"dev.racci.minix.api.destructors.component1","location":"Minix-API/dev.racci.minix.api.destructors/component1.html","searchKeys":["component1","operator fun PlayerLeashEntityEvent.component1(): Player","dev.racci.minix.api.destructors.component1"]},{"name":"operator fun PlayerLeashEntityEvent.component2(): Entity","description":"dev.racci.minix.api.destructors.component2","location":"Minix-API/dev.racci.minix.api.destructors/component2.html","searchKeys":["component2","operator fun PlayerLeashEntityEvent.component2(): Entity","dev.racci.minix.api.destructors.component2"]},{"name":"operator fun PlayerLeashEntityEvent.component3(): Entity","description":"dev.racci.minix.api.destructors.component3","location":"Minix-API/dev.racci.minix.api.destructors/component3.html","searchKeys":["component3","operator fun PlayerLeashEntityEvent.component3(): Entity","dev.racci.minix.api.destructors.component3"]},{"name":"operator fun PlayerMoveEvent.component2(): Location","description":"dev.racci.minix.api.destructors.component2","location":"Minix-API/dev.racci.minix.api.destructors/component2.html","searchKeys":["component2","operator fun PlayerMoveEvent.component2(): Location","dev.racci.minix.api.destructors.component2"]},{"name":"operator fun PlayerMoveEvent.component3(): Location","description":"dev.racci.minix.api.destructors.component3","location":"Minix-API/dev.racci.minix.api.destructors/component3.html","searchKeys":["component3","operator fun PlayerMoveEvent.component3(): Location","dev.racci.minix.api.destructors.component3"]},{"name":"operator fun PosRange<*, BlockPos>.contains(other: Block): Boolean","description":"dev.racci.minix.api.utils.minecraft.contains","location":"Minix-API/dev.racci.minix.api.utils.minecraft/contains.html","searchKeys":["contains","operator fun PosRange<*, BlockPos>.contains(other: Block): Boolean","dev.racci.minix.api.utils.minecraft.contains"]},{"name":"operator fun PosRange<*, BlockPos>.contains(other: Location): Boolean","description":"dev.racci.minix.api.utils.minecraft.contains","location":"Minix-API/dev.racci.minix.api.utils.minecraft/contains.html","searchKeys":["contains","operator fun PosRange<*, BlockPos>.contains(other: Location): Boolean","dev.racci.minix.api.utils.minecraft.contains"]},{"name":"operator fun PosRange<*, ChunkPos>.contains(other: Chunk): Boolean","description":"dev.racci.minix.api.utils.minecraft.contains","location":"Minix-API/dev.racci.minix.api.utils.minecraft/contains.html","searchKeys":["contains","operator fun PosRange<*, ChunkPos>.contains(other: Chunk): Boolean","dev.racci.minix.api.utils.minecraft.contains"]},{"name":"operator fun TabCompleteEvent.component1(): CommandSender","description":"dev.racci.minix.api.destructors.component1","location":"Minix-API/dev.racci.minix.api.destructors/component1.html","searchKeys":["component1","operator fun TabCompleteEvent.component1(): CommandSender","dev.racci.minix.api.destructors.component1"]},{"name":"operator fun TabCompleteEvent.component2(): MutableList<String>","description":"dev.racci.minix.api.destructors.component2","location":"Minix-API/dev.racci.minix.api.destructors/component2.html","searchKeys":["component2","operator fun TabCompleteEvent.component2(): MutableList<String>","dev.racci.minix.api.destructors.component2"]},{"name":"operator fun TabCompleteEvent.component3(): String","description":"dev.racci.minix.api.destructors.component3","location":"Minix-API/dev.racci.minix.api.destructors/component3.html","searchKeys":["component3","operator fun TabCompleteEvent.component3(): String","dev.racci.minix.api.destructors.component3"]},{"name":"operator fun Vector.component1(): Double","description":"dev.racci.minix.api.destructors.component1","location":"Minix-API/dev.racci.minix.api.destructors/component1.html","searchKeys":["component1","operator fun Vector.component1(): Double","dev.racci.minix.api.destructors.component1"]},{"name":"operator fun Vector.component2(): Double","description":"dev.racci.minix.api.destructors.component2","location":"Minix-API/dev.racci.minix.api.destructors/component2.html","searchKeys":["component2","operator fun Vector.component2(): Double","dev.racci.minix.api.destructors.component2"]},{"name":"operator fun Vector.component3(): Double","description":"dev.racci.minix.api.destructors.component3","location":"Minix-API/dev.racci.minix.api.destructors/component3.html","searchKeys":["component3","operator fun Vector.component3(): Double","dev.racci.minix.api.destructors.component3"]},{"name":"operator fun VehicleEvent.component1(): Vehicle","description":"dev.racci.minix.api.destructors.component1","location":"Minix-API/dev.racci.minix.api.destructors/component1.html","searchKeys":["component1","operator fun VehicleEvent.component1(): Vehicle","dev.racci.minix.api.destructors.component1"]},{"name":"operator fun VehicleMoveEvent.component2(): Location","description":"dev.racci.minix.api.destructors.component2","location":"Minix-API/dev.racci.minix.api.destructors/component2.html","searchKeys":["component2","operator fun VehicleMoveEvent.component2(): Location","dev.racci.minix.api.destructors.component2"]},{"name":"operator fun VehicleMoveEvent.component3(): Location","description":"dev.racci.minix.api.destructors.component3","location":"Minix-API/dev.racci.minix.api.destructors/component3.html","searchKeys":["component3","operator fun VehicleMoveEvent.component3(): Location","dev.racci.minix.api.destructors.component3"]},{"name":"operator fun WeatherEvent.component1(): World","description":"dev.racci.minix.api.destructors.component1","location":"Minix-API/dev.racci.minix.api.destructors/component1.html","searchKeys":["component1","operator fun WeatherEvent.component1(): World","dev.racci.minix.api.destructors.component1"]},{"name":"operator fun WorldEvent.component1(): World","description":"dev.racci.minix.api.destructors.component1","location":"Minix-API/dev.racci.minix.api.destructors/component1.html","searchKeys":["component1","operator fun WorldEvent.component1(): World","dev.racci.minix.api.destructors.component1"]},{"name":"operator fun compareTo(other: String): Int","description":"dev.racci.minix.api.updater.Version.compareTo","location":"Minix-API/dev.racci.minix.api.updater/-version/compare-to.html","searchKeys":["compareTo","operator fun compareTo(other: String): Int","dev.racci.minix.api.updater.Version.compareTo"]},{"name":"operator fun component1(): Player?","description":"dev.racci.minix.api.events.PlayerUnloadEvent.component1","location":"Minix-API/dev.racci.minix.api.events/-player-unload-event/component1.html","searchKeys":["component1","operator fun component1(): Player?","dev.racci.minix.api.events.PlayerUnloadEvent.component1"]},{"name":"operator fun component2(): ItemStack?","description":"dev.racci.minix.api.events.AbstractComboEvent.component2","location":"Minix-API/dev.racci.minix.api.events/-abstract-combo-event/component2.html","searchKeys":["component2","operator fun component2(): ItemStack?","dev.racci.minix.api.events.AbstractComboEvent.component2"]},{"name":"operator fun component2(): LiquidType","description":"dev.racci.minix.api.events.PlayerLiquidEvent.component2","location":"Minix-API/dev.racci.minix.api.events/-player-liquid-event/component2.html","searchKeys":["component2","operator fun component2(): LiquidType","dev.racci.minix.api.events.PlayerLiquidEvent.component2"]},{"name":"operator fun component2(): Location","description":"dev.racci.minix.api.events.PlayerMoveFullXYZEvent.component2","location":"Minix-API/dev.racci.minix.api.events/-player-move-full-x-y-z-event/component2.html","searchKeys":["component2","operator fun component2(): Location","dev.racci.minix.api.events.PlayerMoveFullXYZEvent.component2"]},{"name":"operator fun component2(): Location","description":"dev.racci.minix.api.events.PlayerMoveXYZEvent.component2","location":"Minix-API/dev.racci.minix.api.events/-player-move-x-y-z-event/component2.html","searchKeys":["component2","operator fun component2(): Location","dev.racci.minix.api.events.PlayerMoveXYZEvent.component2"]},{"name":"operator fun component2(): UUID","description":"dev.racci.minix.api.events.PlayerUnloadEvent.component2","location":"Minix-API/dev.racci.minix.api.events/-player-unload-event/component2.html","searchKeys":["component2","operator fun component2(): UUID","dev.racci.minix.api.events.PlayerUnloadEvent.component2"]},{"name":"operator fun component3(): BlockData?","description":"dev.racci.minix.api.events.AbstractComboEvent.component3","location":"Minix-API/dev.racci.minix.api.events/-abstract-combo-event/component3.html","searchKeys":["component3","operator fun component3(): BlockData?","dev.racci.minix.api.events.AbstractComboEvent.component3"]},{"name":"operator fun component3(): LiquidType","description":"dev.racci.minix.api.events.PlayerLiquidEvent.component3","location":"Minix-API/dev.racci.minix.api.events/-player-liquid-event/component3.html","searchKeys":["component3","operator fun component3(): LiquidType","dev.racci.minix.api.events.PlayerLiquidEvent.component3"]},{"name":"operator fun component3(): Location","description":"dev.racci.minix.api.events.PlayerMoveFullXYZEvent.component3","location":"Minix-API/dev.racci.minix.api.events/-player-move-full-x-y-z-event/component3.html","searchKeys":["component3","operator fun component3(): Location","dev.racci.minix.api.events.PlayerMoveFullXYZEvent.component3"]},{"name":"operator fun component3(): Location","description":"dev.racci.minix.api.events.PlayerMoveXYZEvent.component3","location":"Minix-API/dev.racci.minix.api.events/-player-move-x-y-z-event/component3.html","searchKeys":["component3","operator fun component3(): Location","dev.racci.minix.api.events.PlayerMoveXYZEvent.component3"]},{"name":"operator fun component4(): Entity?","description":"dev.racci.minix.api.events.AbstractComboEvent.component4","location":"Minix-API/dev.racci.minix.api.events/-abstract-combo-event/component4.html","searchKeys":["component4","operator fun component4(): Entity?","dev.racci.minix.api.events.AbstractComboEvent.component4"]},{"name":"operator fun component5(): ItemStack?","description":"dev.racci.minix.api.events.PlayerDoubleOffhandEvent.component5","location":"Minix-API/dev.racci.minix.api.events/-player-double-offhand-event/component5.html","searchKeys":["component5","operator fun component5(): ItemStack?","dev.racci.minix.api.events.PlayerDoubleOffhandEvent.component5"]},{"name":"operator fun component5(): ItemStack?","description":"dev.racci.minix.api.events.PlayerShiftDoubleOffhandEvent.component5","location":"Minix-API/dev.racci.minix.api.events/-player-shift-double-offhand-event/component5.html","searchKeys":["component5","operator fun component5(): ItemStack?","dev.racci.minix.api.events.PlayerShiftDoubleOffhandEvent.component5"]},{"name":"operator fun component5(): ItemStack?","description":"dev.racci.minix.api.events.PlayerShiftOffhandEvent.component5","location":"Minix-API/dev.racci.minix.api.events/-player-shift-offhand-event/component5.html","searchKeys":["component5","operator fun component5(): ItemStack?","dev.racci.minix.api.events.PlayerShiftOffhandEvent.component5"]},{"name":"operator fun get(key: Any?): MutableCollection<V>?","description":"dev.racci.minix.api.utils.collections.MultiMap.get","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/get.html","searchKeys":["get","operator fun get(key: Any?): MutableCollection<V>?","dev.racci.minix.api.utils.collections.MultiMap.get"]},{"name":"operator fun get(key: String): R","description":"dev.racci.minix.api.utils.PropertyFinder.get","location":"Minix-API/dev.racci.minix.api.utils/-property-finder/get.html","searchKeys":["get","operator fun get(key: String): R","dev.racci.minix.api.utils.PropertyFinder.get"]},{"name":"operator fun get(key: String, vararg placeholder: Pair<String, () -> Any>): Component","description":"dev.racci.minix.api.data.LangConfig.get","location":"Minix-API/dev.racci.minix.api.data/-lang-config/get.html","searchKeys":["get","operator fun get(key: String, vararg placeholder: Pair<String, () -> Any>): Component","dev.racci.minix.api.data.LangConfig.get"]},{"name":"operator fun get(protocolVersion: Int): MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.get","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/get.html","searchKeys":["get","operator fun get(protocolVersion: Int): MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.get"]},{"name":"operator fun get(vararg placeholder: Pair<String, () -> Any>): Component","description":"dev.racci.minix.api.utils.adventure.PartialComponent.get","location":"Minix-API/dev.racci.minix.api.utils.adventure/-partial-component/get.html","searchKeys":["get","operator fun get(vararg placeholder: Pair<String, () -> Any>): Component","dev.racci.minix.api.utils.adventure.PartialComponent.get"]},{"name":"operator fun get(versionName: String): MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.get","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/get.html","searchKeys":["get","operator fun get(versionName: String): MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.get"]},{"name":"operator fun getValue(ref: Any, property: KProperty<*>): T","description":"dev.racci.minix.api.utils.Closeable.getValue","location":"Minix-API/dev.racci.minix.api.utils/-closeable/get-value.html","searchKeys":["getValue","operator fun getValue(ref: Any, property: KProperty<*>): T","dev.racci.minix.api.utils.Closeable.getValue"]},{"name":"operator fun getValue(thisRef: Any?, property: KProperty<*>): MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.MCVersionDelegate.getValue","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-m-c-version-delegate/get-value.html","searchKeys":["getValue","operator fun getValue(thisRef: Any?, property: KProperty<*>): MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.MCVersionDelegate.getValue"]},{"name":"operator fun getValue(thisRef: Extension.ExtensionCompanion<E>, property: KProperty<*>): E","description":"dev.racci.minix.api.extension.Extension.ExtensionCompanion.getValue","location":"Minix-API/dev.racci.minix.api.extension/-extension/-extension-companion/get-value.html","searchKeys":["getValue","operator fun getValue(thisRef: Extension.ExtensionCompanion<E>, property: KProperty<*>): E","dev.racci.minix.api.extension.Extension.ExtensionCompanion.getValue"]},{"name":"operator fun plusAssign(value: Pair<K, MutableCollection<V>>)","description":"dev.racci.minix.api.utils.collections.MultiMap.plusAssign","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(value: Pair<K, MutableCollection<V>>)","dev.racci.minix.api.utils.collections.MultiMap.plusAssign"]},{"name":"override fun toString(): String","description":"dev.racci.minix.api.extension.Extension.toString","location":"Minix-API/dev.racci.minix.api.extension/-extension/to-string.html","searchKeys":["toString","override fun toString(): String","dev.racci.minix.api.extension.Extension.toString"]},{"name":"override val bindToKClass: KClass<*>?","description":"dev.racci.minix.api.extension.Extension.bindToKClass","location":"Minix-API/dev.racci.minix.api.extension/-extension/bind-to-k-class.html","searchKeys":["bindToKClass","override val bindToKClass: KClass<*>?","dev.racci.minix.api.extension.Extension.bindToKClass"]},{"name":"override val dependencies: ImmutableSet<KClass<Extension<*>>>","description":"dev.racci.minix.api.extension.Extension.dependencies","location":"Minix-API/dev.racci.minix.api.extension/-extension/dependencies.html","searchKeys":["dependencies","override val dependencies: ImmutableSet<KClass<Extension<*>>>","dev.racci.minix.api.extension.Extension.dependencies"]},{"name":"override val eventListener: KListener<P>","description":"dev.racci.minix.api.extension.Extension.eventListener","location":"Minix-API/dev.racci.minix.api.extension/-extension/event-listener.html","searchKeys":["eventListener","override val eventListener: KListener<P>","dev.racci.minix.api.extension.Extension.eventListener"]},{"name":"override val loaded: Boolean","description":"dev.racci.minix.api.extension.Extension.loaded","location":"Minix-API/dev.racci.minix.api.extension/-extension/loaded.html","searchKeys":["loaded","override val loaded: Boolean","dev.racci.minix.api.extension.Extension.loaded"]},{"name":"override val log: MinixLogger","description":"dev.racci.minix.api.extension.Extension.log","location":"Minix-API/dev.racci.minix.api.extension/-extension/log.html","searchKeys":["log","override val log: MinixLogger","dev.racci.minix.api.extension.Extension.log"]},{"name":"override val name: String","description":"dev.racci.minix.api.extension.Extension.name","location":"Minix-API/dev.racci.minix.api.extension/-extension/name.html","searchKeys":["name","override val name: String","dev.racci.minix.api.extension.Extension.name"]},{"name":"override val supervisor: CoroutineScope","description":"dev.racci.minix.api.extension.Extension.supervisor","location":"Minix-API/dev.racci.minix.api.extension/-extension/supervisor.html","searchKeys":["supervisor","override val supervisor: CoroutineScope","dev.racci.minix.api.extension.Extension.supervisor"]},{"name":"override val value: String","description":"dev.racci.minix.api.extension.Extension.value","location":"Minix-API/dev.racci.minix.api.extension/-extension/value.html","searchKeys":["value","override val value: String","dev.racci.minix.api.extension.Extension.value"]},{"name":"override var bound: Boolean = false","description":"dev.racci.minix.api.extension.Extension.bound","location":"Minix-API/dev.racci.minix.api.extension/-extension/bound.html","searchKeys":["bound","override var bound: Boolean = false","dev.racci.minix.api.extension.Extension.bound"]},{"name":"override var state: ExtensionState","description":"dev.racci.minix.api.extension.Extension.state","location":"Minix-API/dev.racci.minix.api.extension/-extension/state.html","searchKeys":["state","override var state: ExtensionState","dev.racci.minix.api.extension.Extension.state"]},{"name":"sealed class AbstractComboEvent : KPlayerEvent","description":"dev.racci.minix.api.events.AbstractComboEvent","location":"Minix-API/dev.racci.minix.api.events/-abstract-combo-event/index.html","searchKeys":["AbstractComboEvent","sealed class AbstractComboEvent : KPlayerEvent","dev.racci.minix.api.events.AbstractComboEvent"]},{"name":"sealed class PlayerLiquidEvent : KPlayerEvent","description":"dev.racci.minix.api.events.PlayerLiquidEvent","location":"Minix-API/dev.racci.minix.api.events/-player-liquid-event/index.html","searchKeys":["PlayerLiquidEvent","sealed class PlayerLiquidEvent : KPlayerEvent","dev.racci.minix.api.events.PlayerLiquidEvent"]},{"name":"sealed class SerializableRecipeIngredients","description":"dev.racci.minix.api.serializables.recipes.SerializableRecipeIngredients","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-serializable-recipe-ingredients/index.html","searchKeys":["SerializableRecipeIngredients","sealed class SerializableRecipeIngredients","dev.racci.minix.api.serializables.recipes.SerializableRecipeIngredients"]},{"name":"suspend fun HttpResponse.getBuffered(): BufferedReader","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateProviderSerializer.Companion.getBuffered","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-provider-serializer/-companion/get-buffered.html","searchKeys":["getBuffered","suspend fun HttpResponse.getBuffered(): BufferedReader","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateProviderSerializer.Companion.getBuffered"]},{"name":"suspend fun MinixPlugin.takeMaxPerTick(time: Duration)","description":"dev.racci.minix.api.utils.takeMaxPerTick","location":"Minix-API/dev.racci.minix.api.utils/take-max-per-tick.html","searchKeys":["takeMaxPerTick","suspend fun MinixPlugin.takeMaxPerTick(time: Duration)","dev.racci.minix.api.utils.takeMaxPerTick"]},{"name":"suspend fun Player.chatInput(plugin: MinixPlugin): ComponentLike?","description":"dev.racci.minix.api.utils.minecraft.PlayerUtils.chatInput","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-player-utils/chat-input.html","searchKeys":["chatInput","suspend fun Player.chatInput(plugin: MinixPlugin): ComponentLike?","dev.racci.minix.api.utils.minecraft.PlayerUtils.chatInput"]},{"name":"suspend fun WithPlugin<*>.takeMaxPerTick(time: Duration)","description":"dev.racci.minix.api.utils.takeMaxPerTick","location":"Minix-API/dev.racci.minix.api.utils/take-max-per-tick.html","searchKeys":["takeMaxPerTick","suspend fun WithPlugin<*>.takeMaxPerTick(time: Duration)","dev.racci.minix.api.utils.takeMaxPerTick"]},{"name":"suspend fun setState(state: ExtensionState)","description":"dev.racci.minix.api.extension.Extension.setState","location":"Minix-API/dev.racci.minix.api.extension/-extension/set-state.html","searchKeys":["setState","suspend fun setState(state: ExtensionState)","dev.racci.minix.api.extension.Extension.setState"]},{"name":"val <T : Any> KClass<T>.companionParent: KClass<out Any>?","description":"dev.racci.minix.api.utils.kotlin.companionParent","location":"Minix-API/dev.racci.minix.api.utils.kotlin/companion-parent.html","searchKeys":["companionParent","val <T : Any> KClass<T>.companionParent: KClass<out Any>?","dev.racci.minix.api.utils.kotlin.companionParent"]},{"name":"val Block.liquidType: LiquidType","description":"dev.racci.minix.api.events.LiquidType.Companion.liquidType","location":"Minix-API/dev.racci.minix.api.events/-liquid-type/-companion/liquid-type.html","searchKeys":["liquidType","val Block.liquidType: LiquidType","dev.racci.minix.api.events.LiquidType.Companion.liquidType"]},{"name":"val CARBS: MaterialSetTag","description":"dev.racci.minix.api.utils.minecraft.MaterialTagsExtension.CARBS","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-material-tags-extension/-c-a-r-b-s.html","searchKeys":["CARBS","val CARBS: MaterialSetTag","dev.racci.minix.api.utils.minecraft.MaterialTagsExtension.CARBS"]},{"name":"val COOKED_MEATS: MaterialSetTag","description":"dev.racci.minix.api.utils.minecraft.MaterialTagsExtension.COOKED_MEATS","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-material-tags-extension/-c-o-o-k-e-d_-m-e-a-t-s.html","searchKeys":["COOKED_MEATS","val COOKED_MEATS: MaterialSetTag","dev.racci.minix.api.utils.minecraft.MaterialTagsExtension.COOKED_MEATS"]},{"name":"val DOUBLE_DELAY: Duration","description":"dev.racci.minix.api.data.PlayerData.Companion.DOUBLE_DELAY","location":"Minix-API/dev.racci.minix.api.data/-player-data/-companion/-d-o-u-b-l-e_-d-e-l-a-y.html","searchKeys":["DOUBLE_DELAY","val DOUBLE_DELAY: Duration","dev.racci.minix.api.data.PlayerData.Companion.DOUBLE_DELAY"]},{"name":"val Double.ticks: Duration","description":"dev.racci.minix.api.utils.ticks","location":"Minix-API/dev.racci.minix.api.utils/ticks.html","searchKeys":["ticks","val Double.ticks: Duration","dev.racci.minix.api.utils.ticks"]},{"name":"val Duration.inWholeTicks: Long","description":"dev.racci.minix.api.extensions.inWholeTicks","location":"Minix-API/dev.racci.minix.api.extensions/in-whole-ticks.html","searchKeys":["inWholeTicks","val Duration.inWholeTicks: Long","dev.racci.minix.api.extensions.inWholeTicks"]},{"name":"val Duration.ticks: Long","description":"dev.racci.minix.api.utils.ticks","location":"Minix-API/dev.racci.minix.api.utils/ticks.html","searchKeys":["ticks","val Duration.ticks: Long","dev.racci.minix.api.utils.ticks"]},{"name":"val ERROR: Version","description":"dev.racci.minix.api.updater.Version.Companion.ERROR","location":"Minix-API/dev.racci.minix.api.updater/-version/-companion/-e-r-r-o-r.html","searchKeys":["ERROR","val ERROR: Version","dev.racci.minix.api.updater.Version.Companion.ERROR"]},{"name":"val FRUITS: MaterialSetTag","description":"dev.racci.minix.api.utils.minecraft.MaterialTagsExtension.FRUITS","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-material-tags-extension/-f-r-u-i-t-s.html","searchKeys":["FRUITS","val FRUITS: MaterialSetTag","dev.racci.minix.api.utils.minecraft.MaterialTagsExtension.FRUITS"]},{"name":"val Int.ticks: Duration","description":"dev.racci.minix.api.utils.ticks","location":"Minix-API/dev.racci.minix.api.utils/ticks.html","searchKeys":["ticks","val Int.ticks: Duration","dev.racci.minix.api.utils.ticks"]},{"name":"val Inventory.hasSpace: Boolean","description":"dev.racci.minix.api.extensions.hasSpace","location":"Minix-API/dev.racci.minix.api.extensions/has-space.html","searchKeys":["hasSpace","val Inventory.hasSpace: Boolean","dev.racci.minix.api.extensions.hasSpace"]},{"name":"val ItemStack.pdc: PersistentDataContainer","description":"dev.racci.minix.api.extensions.pdc","location":"Minix-API/dev.racci.minix.api.extensions/pdc.html","searchKeys":["pdc","val ItemStack.pdc: PersistentDataContainer","dev.racci.minix.api.extensions.pdc"]},{"name":"val Location.isDay: Boolean","description":"dev.racci.minix.api.extensions.isDay","location":"Minix-API/dev.racci.minix.api.extensions/is-day.html","searchKeys":["isDay","val Location.isDay: Boolean","dev.racci.minix.api.extensions.isDay"]},{"name":"val Location.isNight: Boolean","description":"dev.racci.minix.api.extensions.isNight","location":"Minix-API/dev.racci.minix.api.extensions/is-night.html","searchKeys":["isNight","val Location.isNight: Boolean","dev.racci.minix.api.extensions.isNight"]},{"name":"val Long.ticks: Duration","description":"dev.racci.minix.api.utils.ticks","location":"Minix-API/dev.racci.minix.api.utils/ticks.html","searchKeys":["ticks","val Long.ticks: Duration","dev.racci.minix.api.utils.ticks"]},{"name":"val MC_1_10: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_10","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_10.html","searchKeys":["MC_1_10","val MC_1_10: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_10"]},{"name":"val MC_1_10_1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_10_1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_10_1.html","searchKeys":["MC_1_10_1","val MC_1_10_1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_10_1"]},{"name":"val MC_1_10_2: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_10_2","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_10_2.html","searchKeys":["MC_1_10_2","val MC_1_10_2: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_10_2"]},{"name":"val MC_1_11: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_11","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_11.html","searchKeys":["MC_1_11","val MC_1_11: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_11"]},{"name":"val MC_1_11_1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_11_1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_11_1.html","searchKeys":["MC_1_11_1","val MC_1_11_1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_11_1"]},{"name":"val MC_1_11_2: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_11_2","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_11_2.html","searchKeys":["MC_1_11_2","val MC_1_11_2: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_11_2"]},{"name":"val MC_1_12: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_12","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_12.html","searchKeys":["MC_1_12","val MC_1_12: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_12"]},{"name":"val MC_1_12_1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_12_1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_12_1.html","searchKeys":["MC_1_12_1","val MC_1_12_1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_12_1"]},{"name":"val MC_1_12_2: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_12_2","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_12_2.html","searchKeys":["MC_1_12_2","val MC_1_12_2: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_12_2"]},{"name":"val MC_1_13: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_13","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_13.html","searchKeys":["MC_1_13","val MC_1_13: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_13"]},{"name":"val MC_1_13_1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_13_1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_13_1.html","searchKeys":["MC_1_13_1","val MC_1_13_1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_13_1"]},{"name":"val MC_1_13_2: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_13_2","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_13_2.html","searchKeys":["MC_1_13_2","val MC_1_13_2: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_13_2"]},{"name":"val MC_1_14: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_14","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_14.html","searchKeys":["MC_1_14","val MC_1_14: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_14"]},{"name":"val MC_1_14_1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_14_1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_14_1.html","searchKeys":["MC_1_14_1","val MC_1_14_1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_14_1"]},{"name":"val MC_1_14_2: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_14_2","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_14_2.html","searchKeys":["MC_1_14_2","val MC_1_14_2: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_14_2"]},{"name":"val MC_1_14_3: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_14_3","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_14_3.html","searchKeys":["MC_1_14_3","val MC_1_14_3: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_14_3"]},{"name":"val MC_1_14_4: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_14_4","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_14_4.html","searchKeys":["MC_1_14_4","val MC_1_14_4: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_14_4"]},{"name":"val MC_1_15: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_15","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_15.html","searchKeys":["MC_1_15","val MC_1_15: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_15"]},{"name":"val MC_1_15_1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_15_1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_15_1.html","searchKeys":["MC_1_15_1","val MC_1_15_1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_15_1"]},{"name":"val MC_1_15_2: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_15_2","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_15_2.html","searchKeys":["MC_1_15_2","val MC_1_15_2: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_15_2"]},{"name":"val MC_1_16: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_16","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_16.html","searchKeys":["MC_1_16","val MC_1_16: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_16"]},{"name":"val MC_1_16_1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_16_1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_16_1.html","searchKeys":["MC_1_16_1","val MC_1_16_1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_16_1"]},{"name":"val MC_1_16_2: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_16_2","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_16_2.html","searchKeys":["MC_1_16_2","val MC_1_16_2: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_16_2"]},{"name":"val MC_1_16_3: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_16_3","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_16_3.html","searchKeys":["MC_1_16_3","val MC_1_16_3: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_16_3"]},{"name":"val MC_1_16_4: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_16_4","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_16_4.html","searchKeys":["MC_1_16_4","val MC_1_16_4: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_16_4"]},{"name":"val MC_1_16_5: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_16_5","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_16_5.html","searchKeys":["MC_1_16_5","val MC_1_16_5: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_16_5"]},{"name":"val MC_1_17: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_17","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_17.html","searchKeys":["MC_1_17","val MC_1_17: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_17"]},{"name":"val MC_1_17_1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_17_1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_17_1.html","searchKeys":["MC_1_17_1","val MC_1_17_1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_17_1"]},{"name":"val MC_1_18: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_18","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_18.html","searchKeys":["MC_1_18","val MC_1_18: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_18"]},{"name":"val MC_1_18_1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_18_1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_18_1.html","searchKeys":["MC_1_18_1","val MC_1_18_1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_18_1"]},{"name":"val MC_1_18_2: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_18_2","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_18_2.html","searchKeys":["MC_1_18_2","val MC_1_18_2: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_18_2"]},{"name":"val MC_1_19: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_19","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_19.html","searchKeys":["MC_1_19","val MC_1_19: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_19"]},{"name":"val MC_1_7: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_7.html","searchKeys":["MC_1_7","val MC_1_7: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7"]},{"name":"val MC_1_7_10: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7_10","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_7_10.html","searchKeys":["MC_1_7_10","val MC_1_7_10: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7_10"]},{"name":"val MC_1_7_1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7_1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_7_1.html","searchKeys":["MC_1_7_1","val MC_1_7_1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7_1"]},{"name":"val MC_1_7_2: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7_2","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_7_2.html","searchKeys":["MC_1_7_2","val MC_1_7_2: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7_2"]},{"name":"val MC_1_7_3: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7_3","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_7_3.html","searchKeys":["MC_1_7_3","val MC_1_7_3: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7_3"]},{"name":"val MC_1_7_4: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7_4","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_7_4.html","searchKeys":["MC_1_7_4","val MC_1_7_4: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7_4"]},{"name":"val MC_1_7_5: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7_5","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_7_5.html","searchKeys":["MC_1_7_5","val MC_1_7_5: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7_5"]},{"name":"val MC_1_7_6: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7_6","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_7_6.html","searchKeys":["MC_1_7_6","val MC_1_7_6: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7_6"]},{"name":"val MC_1_7_7: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7_7","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_7_7.html","searchKeys":["MC_1_7_7","val MC_1_7_7: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7_7"]},{"name":"val MC_1_7_8: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7_8","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_7_8.html","searchKeys":["MC_1_7_8","val MC_1_7_8: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7_8"]},{"name":"val MC_1_7_9: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7_9","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_7_9.html","searchKeys":["MC_1_7_9","val MC_1_7_9: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_7_9"]},{"name":"val MC_1_8: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_8","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_8.html","searchKeys":["MC_1_8","val MC_1_8: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_8"]},{"name":"val MC_1_8_1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_8_1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_8_1.html","searchKeys":["MC_1_8_1","val MC_1_8_1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_8_1"]},{"name":"val MC_1_8_2: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_8_2","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_8_2.html","searchKeys":["MC_1_8_2","val MC_1_8_2: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_8_2"]},{"name":"val MC_1_8_3: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_8_3","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_8_3.html","searchKeys":["MC_1_8_3","val MC_1_8_3: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_8_3"]},{"name":"val MC_1_8_4: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_8_4","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_8_4.html","searchKeys":["MC_1_8_4","val MC_1_8_4: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_8_4"]},{"name":"val MC_1_8_5: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_8_5","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_8_5.html","searchKeys":["MC_1_8_5","val MC_1_8_5: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_8_5"]},{"name":"val MC_1_8_6: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_8_6","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_8_6.html","searchKeys":["MC_1_8_6","val MC_1_8_6: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_8_6"]},{"name":"val MC_1_8_7: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_8_7","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_8_7.html","searchKeys":["MC_1_8_7","val MC_1_8_7: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_8_7"]},{"name":"val MC_1_8_8: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_8_8","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_8_8.html","searchKeys":["MC_1_8_8","val MC_1_8_8: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_8_8"]},{"name":"val MC_1_8_9: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_8_9","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_8_9.html","searchKeys":["MC_1_8_9","val MC_1_8_9: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_8_9"]},{"name":"val MC_1_9: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_9","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_9.html","searchKeys":["MC_1_9","val MC_1_9: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_9"]},{"name":"val MC_1_9_1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_9_1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_9_1.html","searchKeys":["MC_1_9_1","val MC_1_9_1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_9_1"]},{"name":"val MC_1_9_2: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_9_2","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_9_2.html","searchKeys":["MC_1_9_2","val MC_1_9_2: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_9_2"]},{"name":"val MC_1_9_3: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_9_3","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_9_3.html","searchKeys":["MC_1_9_3","val MC_1_9_3: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_9_3"]},{"name":"val MC_1_9_4: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_9_4","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_1_9_4.html","searchKeys":["MC_1_9_4","val MC_1_9_4: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_1_9_4"]},{"name":"val MC_NMS_1_10_R1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_10_R1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_10_-r1.html","searchKeys":["MC_NMS_1_10_R1","val MC_NMS_1_10_R1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_10_R1"]},{"name":"val MC_NMS_1_11_R1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_11_R1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_11_-r1.html","searchKeys":["MC_NMS_1_11_R1","val MC_NMS_1_11_R1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_11_R1"]},{"name":"val MC_NMS_1_12_R1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_12_R1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_12_-r1.html","searchKeys":["MC_NMS_1_12_R1","val MC_NMS_1_12_R1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_12_R1"]},{"name":"val MC_NMS_1_13_R1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_13_R1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_13_-r1.html","searchKeys":["MC_NMS_1_13_R1","val MC_NMS_1_13_R1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_13_R1"]},{"name":"val MC_NMS_1_13_R2: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_13_R2","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_13_-r2.html","searchKeys":["MC_NMS_1_13_R2","val MC_NMS_1_13_R2: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_13_R2"]},{"name":"val MC_NMS_1_14_R1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_14_R1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_14_-r1.html","searchKeys":["MC_NMS_1_14_R1","val MC_NMS_1_14_R1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_14_R1"]},{"name":"val MC_NMS_1_15_R1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_15_R1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_15_-r1.html","searchKeys":["MC_NMS_1_15_R1","val MC_NMS_1_15_R1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_15_R1"]},{"name":"val MC_NMS_1_16_R1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_16_R1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_16_-r1.html","searchKeys":["MC_NMS_1_16_R1","val MC_NMS_1_16_R1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_16_R1"]},{"name":"val MC_NMS_1_16_R2: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_16_R2","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_16_-r2.html","searchKeys":["MC_NMS_1_16_R2","val MC_NMS_1_16_R2: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_16_R2"]},{"name":"val MC_NMS_1_16_R3: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_16_R3","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_16_-r3.html","searchKeys":["MC_NMS_1_16_R3","val MC_NMS_1_16_R3: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_16_R3"]},{"name":"val MC_NMS_1_17_R1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_17_R1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_17_-r1.html","searchKeys":["MC_NMS_1_17_R1","val MC_NMS_1_17_R1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_17_R1"]},{"name":"val MC_NMS_1_18_R1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_18_R1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_18_-r1.html","searchKeys":["MC_NMS_1_18_R1","val MC_NMS_1_18_R1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_18_R1"]},{"name":"val MC_NMS_1_18_R2: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_18_R2","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_18_-r2.html","searchKeys":["MC_NMS_1_18_R2","val MC_NMS_1_18_R2: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_18_R2"]},{"name":"val MC_NMS_1_19_R1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_19_R1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_19_-r1.html","searchKeys":["MC_NMS_1_19_R1","val MC_NMS_1_19_R1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_19_R1"]},{"name":"val MC_NMS_1_7_R1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_7_R1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_7_-r1.html","searchKeys":["MC_NMS_1_7_R1","val MC_NMS_1_7_R1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_7_R1"]},{"name":"val MC_NMS_1_7_R2: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_7_R2","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_7_-r2.html","searchKeys":["MC_NMS_1_7_R2","val MC_NMS_1_7_R2: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_7_R2"]},{"name":"val MC_NMS_1_7_R3: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_7_R3","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_7_-r3.html","searchKeys":["MC_NMS_1_7_R3","val MC_NMS_1_7_R3: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_7_R3"]},{"name":"val MC_NMS_1_7_R4: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_7_R4","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_7_-r4.html","searchKeys":["MC_NMS_1_7_R4","val MC_NMS_1_7_R4: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_7_R4"]},{"name":"val MC_NMS_1_8_R1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_8_R1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_8_-r1.html","searchKeys":["MC_NMS_1_8_R1","val MC_NMS_1_8_R1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_8_R1"]},{"name":"val MC_NMS_1_8_R2: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_8_R2","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_8_-r2.html","searchKeys":["MC_NMS_1_8_R2","val MC_NMS_1_8_R2: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_8_R2"]},{"name":"val MC_NMS_1_8_R3: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_8_R3","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_8_-r3.html","searchKeys":["MC_NMS_1_8_R3","val MC_NMS_1_8_R3: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_8_R3"]},{"name":"val MC_NMS_1_9_R1: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_9_R1","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_9_-r1.html","searchKeys":["MC_NMS_1_9_R1","val MC_NMS_1_9_R1: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_9_R1"]},{"name":"val MC_NMS_1_9_R2: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_9_R2","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-m-c_-n-m-s_1_9_-r2.html","searchKeys":["MC_NMS_1_9_R2","val MC_NMS_1_9_R2: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.MC_NMS_1_9_R2"]},{"name":"val Material.isAxe: Boolean","description":"dev.racci.minix.api.extensions.isAxe","location":"Minix-API/dev.racci.minix.api.extensions/is-axe.html","searchKeys":["isAxe","val Material.isAxe: Boolean","dev.racci.minix.api.extensions.isAxe"]},{"name":"val Material.isDoor: Boolean","description":"dev.racci.minix.api.extensions.isDoor","location":"Minix-API/dev.racci.minix.api.extensions/is-door.html","searchKeys":["isDoor","val Material.isDoor: Boolean","dev.racci.minix.api.extensions.isDoor"]},{"name":"val Material.isHoe: Boolean","description":"dev.racci.minix.api.extensions.isHoe","location":"Minix-API/dev.racci.minix.api.extensions/is-hoe.html","searchKeys":["isHoe","val Material.isHoe: Boolean","dev.racci.minix.api.extensions.isHoe"]},{"name":"val Material.isIngot: Boolean","description":"dev.racci.minix.api.extensions.isIngot","location":"Minix-API/dev.racci.minix.api.extensions/is-ingot.html","searchKeys":["isIngot","val Material.isIngot: Boolean","dev.racci.minix.api.extensions.isIngot"]},{"name":"val Material.isLava: Boolean","description":"dev.racci.minix.api.extensions.isLava","location":"Minix-API/dev.racci.minix.api.extensions/is-lava.html","searchKeys":["isLava","val Material.isLava: Boolean","dev.racci.minix.api.extensions.isLava"]},{"name":"val Material.isMinecart: Boolean","description":"dev.racci.minix.api.extensions.isMinecart","location":"Minix-API/dev.racci.minix.api.extensions/is-minecart.html","searchKeys":["isMinecart","val Material.isMinecart: Boolean","dev.racci.minix.api.extensions.isMinecart"]},{"name":"val Material.isOre: Boolean","description":"dev.racci.minix.api.extensions.isOre","location":"Minix-API/dev.racci.minix.api.extensions/is-ore.html","searchKeys":["isOre","val Material.isOre: Boolean","dev.racci.minix.api.extensions.isOre"]},{"name":"val Material.isPickaxe: Boolean","description":"dev.racci.minix.api.extensions.isPickaxe","location":"Minix-API/dev.racci.minix.api.extensions/is-pickaxe.html","searchKeys":["isPickaxe","val Material.isPickaxe: Boolean","dev.racci.minix.api.extensions.isPickaxe"]},{"name":"val Material.isSpade: Boolean","description":"dev.racci.minix.api.extensions.isSpade","location":"Minix-API/dev.racci.minix.api.extensions/is-spade.html","searchKeys":["isSpade","val Material.isSpade: Boolean","dev.racci.minix.api.extensions.isSpade"]},{"name":"val Material.isSword: Boolean","description":"dev.racci.minix.api.extensions.isSword","location":"Minix-API/dev.racci.minix.api.extensions/is-sword.html","searchKeys":["isSword","val Material.isSword: Boolean","dev.racci.minix.api.extensions.isSword"]},{"name":"val Material.isWater: Boolean","description":"dev.racci.minix.api.extensions.isWater","location":"Minix-API/dev.racci.minix.api.extensions/is-water.html","searchKeys":["isWater","val Material.isWater: Boolean","dev.racci.minix.api.extensions.isWater"]},{"name":"val Material.liquidType: LiquidType","description":"dev.racci.minix.api.events.LiquidType.Companion.liquidType","location":"Minix-API/dev.racci.minix.api.events/-liquid-type/-companion/liquid-type.html","searchKeys":["liquidType","val Material.liquidType: LiquidType","dev.racci.minix.api.events.LiquidType.Companion.liquidType"]},{"name":"val MinixPlugin.asyncDispatcher: CoroutineContext","description":"dev.racci.minix.api.coroutine.asyncDispatcher","location":"Minix-API/dev.racci.minix.api.coroutine/async-dispatcher.html","searchKeys":["asyncDispatcher","val MinixPlugin.asyncDispatcher: CoroutineContext","dev.racci.minix.api.coroutine.asyncDispatcher"]},{"name":"val MinixPlugin.minecraftDispatcher: CoroutineContext","description":"dev.racci.minix.api.coroutine.minecraftDispatcher","location":"Minix-API/dev.racci.minix.api.coroutine/minecraft-dispatcher.html","searchKeys":["minecraftDispatcher","val MinixPlugin.minecraftDispatcher: CoroutineContext","dev.racci.minix.api.coroutine.minecraftDispatcher"]},{"name":"val MinixPlugin.scope: CoroutineScope","description":"dev.racci.minix.api.coroutine.scope","location":"Minix-API/dev.racci.minix.api.coroutine/scope.html","searchKeys":["scope","val MinixPlugin.scope: CoroutineScope","dev.racci.minix.api.coroutine.scope"]},{"name":"val MinixPlugin.serverVersion: String","description":"dev.racci.minix.api.coroutine.serverVersion","location":"Minix-API/dev.racci.minix.api.coroutine/server-version.html","searchKeys":["serverVersion","val MinixPlugin.serverVersion: String","dev.racci.minix.api.coroutine.serverVersion"]},{"name":"val Number.ticks: Duration","description":"dev.racci.minix.api.extensions.ticks","location":"Minix-API/dev.racci.minix.api.extensions/ticks.html","searchKeys":["ticks","val Number.ticks: Duration","dev.racci.minix.api.extensions.ticks"]},{"name":"val PersistentDataHolder.pdc: PersistentDataContainer","description":"dev.racci.minix.api.extensions.pdc","location":"Minix-API/dev.racci.minix.api.extensions/pdc.html","searchKeys":["pdc","val PersistentDataHolder.pdc: PersistentDataContainer","dev.racci.minix.api.extensions.pdc"]},{"name":"val Player.inEnd: Boolean","description":"dev.racci.minix.api.extensions.inEnd","location":"Minix-API/dev.racci.minix.api.extensions/in-end.html","searchKeys":["inEnd","val Player.inEnd: Boolean","dev.racci.minix.api.extensions.inEnd"]},{"name":"val Player.inNether: Boolean","description":"dev.racci.minix.api.extensions.inNether","location":"Minix-API/dev.racci.minix.api.extensions/in-nether.html","searchKeys":["inNether","val Player.inNether: Boolean","dev.racci.minix.api.extensions.inNether"]},{"name":"val Player.inOverworld: Boolean","description":"dev.racci.minix.api.extensions.inOverworld","location":"Minix-API/dev.racci.minix.api.extensions/in-overworld.html","searchKeys":["inOverworld","val Player.inOverworld: Boolean","dev.racci.minix.api.extensions.inOverworld"]},{"name":"val Player.isDay: Boolean","description":"dev.racci.minix.api.extensions.isDay","location":"Minix-API/dev.racci.minix.api.extensions/is-day.html","searchKeys":["isDay","val Player.isDay: Boolean","dev.racci.minix.api.extensions.isDay"]},{"name":"val Player.isNight: Boolean","description":"dev.racci.minix.api.extensions.isNight","location":"Minix-API/dev.racci.minix.api.extensions/is-night.html","searchKeys":["isNight","val Player.isNight: Boolean","dev.racci.minix.api.extensions.isNight"]},{"name":"val PlayerMoveEvent.displaced: Boolean","description":"dev.racci.minix.api.extensions.displaced","location":"Minix-API/dev.racci.minix.api.extensions/displaced.html","searchKeys":["displaced","val PlayerMoveEvent.displaced: Boolean","dev.racci.minix.api.extensions.displaced"]},{"name":"val RAW_MEATS: MaterialSetTag","description":"dev.racci.minix.api.utils.minecraft.MaterialTagsExtension.RAW_MEATS","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-material-tags-extension/-r-a-w_-m-e-a-t-s.html","searchKeys":["RAW_MEATS","val RAW_MEATS: MaterialSetTag","dev.racci.minix.api.utils.minecraft.MaterialTagsExtension.RAW_MEATS"]},{"name":"val SERIALIZER: LegacyComponentSerializer","description":"dev.racci.minix.api.utils.primitive.Legacy.Companion.SERIALIZER","location":"Minix-API/dev.racci.minix.api.utils.primitive/-legacy/-companion/-s-e-r-i-a-l-i-z-e-r.html","searchKeys":["SERIALIZER","val SERIALIZER: LegacyComponentSerializer","dev.racci.minix.api.utils.primitive.Legacy.Companion.SERIALIZER"]},{"name":"val SkullMeta.texture: String?","description":"dev.racci.minix.api.extensions.texture","location":"Minix-API/dev.racci.minix.api.extensions/texture.html","searchKeys":["texture","val SkullMeta.texture: String?","dev.racci.minix.api.extensions.texture"]},{"name":"val UNKNOWN: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.UNKNOWN","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/-u-n-k-n-o-w-n.html","searchKeys":["UNKNOWN","val UNKNOWN: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.UNKNOWN"]},{"name":"val VEGETABLES: MaterialSetTag","description":"dev.racci.minix.api.utils.minecraft.MaterialTagsExtension.VEGETABLES","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-material-tags-extension/-v-e-g-e-t-a-b-l-e-s.html","searchKeys":["VEGETABLES","val VEGETABLES: MaterialSetTag","dev.racci.minix.api.utils.minecraft.MaterialTagsExtension.VEGETABLES"]},{"name":"val WithPlugin<*>.log: MinixLogger","description":"dev.racci.minix.api.extensions.log","location":"Minix-API/dev.racci.minix.api.extensions/log.html","searchKeys":["log","val WithPlugin<*>.log: MinixLogger","dev.racci.minix.api.extensions.log"]},{"name":"val World.isEnd: Boolean","description":"dev.racci.minix.api.extensions.isEnd","location":"Minix-API/dev.racci.minix.api.extensions/is-end.html","searchKeys":["isEnd","val World.isEnd: Boolean","dev.racci.minix.api.extensions.isEnd"]},{"name":"val World.isNether: Boolean","description":"dev.racci.minix.api.extensions.isNether","location":"Minix-API/dev.racci.minix.api.extensions/is-nether.html","searchKeys":["isNether","val World.isNether: Boolean","dev.racci.minix.api.extensions.isNether"]},{"name":"val World.isNight: Boolean","description":"dev.racci.minix.api.extensions.isNight","location":"Minix-API/dev.racci.minix.api.extensions/is-night.html","searchKeys":["isNight","val World.isNight: Boolean","dev.racci.minix.api.extensions.isNight"]},{"name":"val World.isOverworld: Boolean","description":"dev.racci.minix.api.extensions.isOverworld","location":"Minix-API/dev.racci.minix.api.extensions/is-overworld.html","searchKeys":["isOverworld","val World.isOverworld: Boolean","dev.racci.minix.api.extensions.isOverworld"]},{"name":"val addition: SerializableItemStack","description":"dev.racci.minix.api.serializables.recipes.SmithingRecipeIngredients.addition","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-smithing-recipe-ingredients/addition.html","searchKeys":["addition","val addition: SerializableItemStack","dev.racci.minix.api.serializables.recipes.SmithingRecipeIngredients.addition"]},{"name":"val algorithm: String? = null","description":"dev.racci.minix.api.updater.ChecksumType.algorithm","location":"Minix-API/dev.racci.minix.api.updater/-checksum-type/algorithm.html","searchKeys":["algorithm","val algorithm: String? = null","dev.racci.minix.api.updater.ChecksumType.algorithm"]},{"name":"val allowEnd: Boolean","description":"dev.racci.minix.api.extensions.allowEnd","location":"Minix-API/dev.racci.minix.api.extensions/allow-end.html","searchKeys":["allowEnd","val allowEnd: Boolean","dev.racci.minix.api.extensions.allowEnd"]},{"name":"val allowFlight: Boolean","description":"dev.racci.minix.api.extensions.allowFlight","location":"Minix-API/dev.racci.minix.api.extensions/allow-flight.html","searchKeys":["allowFlight","val allowFlight: Boolean","dev.racci.minix.api.extensions.allowFlight"]},{"name":"val allowNether: Boolean","description":"dev.racci.minix.api.extensions.allowNether","location":"Minix-API/dev.racci.minix.api.extensions/allow-nether.html","searchKeys":["allowNether","val allowNether: Boolean","dev.racci.minix.api.extensions.allowNether"]},{"name":"val ambientSpawnLimit: Int","description":"dev.racci.minix.api.extensions.ambientSpawnLimit","location":"Minix-API/dev.racci.minix.api.extensions/ambient-spawn-limit.html","searchKeys":["ambientSpawnLimit","val ambientSpawnLimit: Int","dev.racci.minix.api.extensions.ambientSpawnLimit"]},{"name":"val animalSpawnLimit: Int","description":"dev.racci.minix.api.extensions.animalSpawnLimit","location":"Minix-API/dev.racci.minix.api.extensions/animal-spawn-limit.html","searchKeys":["animalSpawnLimit","val animalSpawnLimit: Int","dev.racci.minix.api.extensions.animalSpawnLimit"]},{"name":"val annotation: MappedPlugin?","description":"dev.racci.minix.api.plugin.MinixPlugin.annotation","location":"Minix-API/dev.racci.minix.api.plugin/-minix-plugin/annotation.html","searchKeys":["annotation","val annotation: MappedPlugin?","dev.racci.minix.api.plugin.MinixPlugin.annotation"]},{"name":"val bStatsId: Int","description":"dev.racci.minix.api.annotations.MappedPlugin.bStatsId","location":"Minix-API/dev.racci.minix.api.annotations/-mapped-plugin/b-stats-id.html","searchKeys":["bStatsId","val bStatsId: Int","dev.racci.minix.api.annotations.MappedPlugin.bStatsId"]},{"name":"val bannedPlayers: Set<OfflinePlayer>","description":"dev.racci.minix.api.extensions.bannedPlayers","location":"Minix-API/dev.racci.minix.api.extensions/banned-players.html","searchKeys":["bannedPlayers","val bannedPlayers: Set<OfflinePlayer>","dev.racci.minix.api.extensions.bannedPlayers"]},{"name":"val bindToKClass: KClass<*>","description":"dev.racci.minix.api.annotations.MappedExtension.bindToKClass","location":"Minix-API/dev.racci.minix.api.annotations/-mapped-extension/bind-to-k-class.html","searchKeys":["bindToKClass","val bindToKClass: KClass<*>","dev.racci.minix.api.annotations.MappedExtension.bindToKClass"]},{"name":"val bindToKClass: KClass<*>","description":"dev.racci.minix.api.annotations.MappedPlugin.bindToKClass","location":"Minix-API/dev.racci.minix.api.annotations/-mapped-plugin/bind-to-k-class.html","searchKeys":["bindToKClass","val bindToKClass: KClass<*>","dev.racci.minix.api.annotations.MappedPlugin.bindToKClass"]},{"name":"val block: Block","description":"dev.racci.minix.api.events.BlockData.block","location":"Minix-API/dev.racci.minix.api.events/-block-data/block.html","searchKeys":["block","val block: Block","dev.racci.minix.api.events.BlockData.block"]},{"name":"val blockData: BlockData? = null","description":"dev.racci.minix.api.events.AbstractComboEvent.blockData","location":"Minix-API/dev.racci.minix.api.events/-abstract-combo-event/block-data.html","searchKeys":["blockData","val blockData: BlockData? = null","dev.racci.minix.api.events.AbstractComboEvent.blockData"]},{"name":"val blockFace: BlockFace","description":"dev.racci.minix.api.events.BlockData.blockFace","location":"Minix-API/dev.racci.minix.api.events/-block-data/block-face.html","searchKeys":["blockFace","val blockFace: BlockFace","dev.racci.minix.api.events.BlockData.blockFace"]},{"name":"val buildIterator: () -> Iterator<T>","description":"dev.racci.minix.api.utils.minecraft.PosRange.buildIterator","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pos-range/build-iterator.html","searchKeys":["buildIterator","val buildIterator: () -> Iterator<T>","dev.racci.minix.api.utils.minecraft.PosRange.buildIterator"]},{"name":"val buildNumber: Long","description":"dev.racci.minix.api.updater.Version.buildNumber","location":"Minix-API/dev.racci.minix.api.updater/-version/build-number.html","searchKeys":["buildNumber","val buildNumber: Long","dev.racci.minix.api.updater.Version.buildNumber"]},{"name":"val bytes: Long","description":"dev.racci.minix.api.utils.data.Data.bytes","location":"Minix-API/dev.racci.minix.api.utils.data/-data/bytes.html","searchKeys":["bytes","val bytes: Long","dev.racci.minix.api.utils.data.Data.bytes"]},{"name":"val callback: ChatInputCallBack","description":"dev.racci.minix.api.utils.minecraft.PlayerUtils.ChatInput.callback","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-player-utils/-chat-input/callback.html","searchKeys":["callback","val callback: ChatInputCallBack","dev.racci.minix.api.utils.minecraft.PlayerUtils.ChatInput.callback"]},{"name":"val callback: PlayerCallbackFunction<R>","description":"dev.racci.minix.api.utils.minecraft.PlayerUtils.PlayerCallback.callback","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-player-utils/-player-callback/callback.html","searchKeys":["callback","val callback: PlayerCallbackFunction<R>","dev.racci.minix.api.utils.minecraft.PlayerUtils.PlayerCallback.callback"]},{"name":"val cancelled: Boolean","description":"dev.racci.minix.api.scheduler.CoroutineRunnable.cancelled","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-runnable/cancelled.html","searchKeys":["cancelled","val cancelled: Boolean","dev.racci.minix.api.scheduler.CoroutineRunnable.cancelled"]},{"name":"val column: Column<ExposedBlob>","description":"dev.racci.minix.api.utils.exposed.ItemStackExposedDelegate.column","location":"Minix-API/dev.racci.minix.api.utils.exposed/-item-stack-exposed-delegate/column.html","searchKeys":["column","val column: Column<ExposedBlob>","dev.racci.minix.api.utils.exposed.ItemStackExposedDelegate.column"]},{"name":"val column: Column<ExposedBlob?>","description":"dev.racci.minix.api.utils.exposed.ItemStackExposedDelegateNullable.column","location":"Minix-API/dev.racci.minix.api.utils.exposed/-item-stack-exposed-delegate-nullable/column.html","searchKeys":["column","val column: Column<ExposedBlob?>","dev.racci.minix.api.utils.exposed.ItemStackExposedDelegateNullable.column"]},{"name":"val column: Column<String>","description":"dev.racci.minix.api.utils.exposed.BlockExposedDelegate.column","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-exposed-delegate/column.html","searchKeys":["column","val column: Column<String>","dev.racci.minix.api.utils.exposed.BlockExposedDelegate.column"]},{"name":"val column: Column<String>","description":"dev.racci.minix.api.utils.exposed.BlockPosExposedDelegate.column","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-exposed-delegate/column.html","searchKeys":["column","val column: Column<String>","dev.racci.minix.api.utils.exposed.BlockPosExposedDelegate.column"]},{"name":"val column: Column<String>","description":"dev.racci.minix.api.utils.exposed.ChunkExposedDelegate.column","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-exposed-delegate/column.html","searchKeys":["column","val column: Column<String>","dev.racci.minix.api.utils.exposed.ChunkExposedDelegate.column"]},{"name":"val column: Column<String>","description":"dev.racci.minix.api.utils.exposed.ChunkPosExposedDelegate.column","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-exposed-delegate/column.html","searchKeys":["column","val column: Column<String>","dev.racci.minix.api.utils.exposed.ChunkPosExposedDelegate.column"]},{"name":"val column: Column<String>","description":"dev.racci.minix.api.utils.exposed.LocationExposedDelegate.column","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-exposed-delegate/column.html","searchKeys":["column","val column: Column<String>","dev.racci.minix.api.utils.exposed.LocationExposedDelegate.column"]},{"name":"val column: Column<String>","description":"dev.racci.minix.api.utils.exposed.LocationPosExposedDelegate.column","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-exposed-delegate/column.html","searchKeys":["column","val column: Column<String>","dev.racci.minix.api.utils.exposed.LocationPosExposedDelegate.column"]},{"name":"val column: Column<String>","description":"dev.racci.minix.api.utils.exposed.WorldExposedDelegate.column","location":"Minix-API/dev.racci.minix.api.utils.exposed/-world-exposed-delegate/column.html","searchKeys":["column","val column: Column<String>","dev.racci.minix.api.utils.exposed.WorldExposedDelegate.column"]},{"name":"val column: Column<String?>","description":"dev.racci.minix.api.utils.exposed.BlockExposedDelegateNullable.column","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-exposed-delegate-nullable/column.html","searchKeys":["column","val column: Column<String?>","dev.racci.minix.api.utils.exposed.BlockExposedDelegateNullable.column"]},{"name":"val column: Column<String?>","description":"dev.racci.minix.api.utils.exposed.BlockPosExposedDelegateNullable.column","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-exposed-delegate-nullable/column.html","searchKeys":["column","val column: Column<String?>","dev.racci.minix.api.utils.exposed.BlockPosExposedDelegateNullable.column"]},{"name":"val column: Column<String?>","description":"dev.racci.minix.api.utils.exposed.ChunkExposedDelegateNullable.column","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-exposed-delegate-nullable/column.html","searchKeys":["column","val column: Column<String?>","dev.racci.minix.api.utils.exposed.ChunkExposedDelegateNullable.column"]},{"name":"val column: Column<String?>","description":"dev.racci.minix.api.utils.exposed.ChunkPosExposedDelegateNullable.column","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-exposed-delegate-nullable/column.html","searchKeys":["column","val column: Column<String?>","dev.racci.minix.api.utils.exposed.ChunkPosExposedDelegateNullable.column"]},{"name":"val column: Column<String?>","description":"dev.racci.minix.api.utils.exposed.LocationExposedDelegateNullable.column","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-exposed-delegate-nullable/column.html","searchKeys":["column","val column: Column<String?>","dev.racci.minix.api.utils.exposed.LocationExposedDelegateNullable.column"]},{"name":"val column: Column<String?>","description":"dev.racci.minix.api.utils.exposed.LocationPosExposedDelegateNullable.column","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-exposed-delegate-nullable/column.html","searchKeys":["column","val column: Column<String?>","dev.racci.minix.api.utils.exposed.LocationPosExposedDelegateNullable.column"]},{"name":"val column: Column<String?>","description":"dev.racci.minix.api.utils.exposed.WorldExposedDelegateNullable.column","location":"Minix-API/dev.racci.minix.api.utils.exposed/-world-exposed-delegate-nullable/column.html","searchKeys":["column","val column: Column<String?>","dev.racci.minix.api.utils.exposed.WorldExposedDelegateNullable.column"]},{"name":"val column: Column<UUID>","description":"dev.racci.minix.api.utils.exposed.OfflinePlayerExposedDelegate.column","location":"Minix-API/dev.racci.minix.api.utils.exposed/-offline-player-exposed-delegate/column.html","searchKeys":["column","val column: Column<UUID>","dev.racci.minix.api.utils.exposed.OfflinePlayerExposedDelegate.column"]},{"name":"val column: Column<UUID?>","description":"dev.racci.minix.api.utils.exposed.OfflinePlayerExposedDelegateNullable.column","location":"Minix-API/dev.racci.minix.api.utils.exposed/-offline-player-exposed-delegate-nullable/column.html","searchKeys":["column","val column: Column<UUID?>","dev.racci.minix.api.utils.exposed.OfflinePlayerExposedDelegateNullable.column"]},{"name":"val configuration: String","description":"dev.racci.minix.api.serializables.recipes.ShapedRecipeIngredients.configuration","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-shaped-recipe-ingredients/configuration.html","searchKeys":["configuration","val configuration: String","dev.racci.minix.api.serializables.recipes.ShapedRecipeIngredients.configuration"]},{"name":"val configurations: MutableList<KClass<MinixConfig<P>>>","description":"dev.racci.minix.api.plugin.PluginData.configurations","location":"Minix-API/dev.racci.minix.api.plugin/-plugin-data/configurations.html","searchKeys":["configurations","val configurations: MutableList<KClass<MinixConfig<P>>>","dev.racci.minix.api.plugin.PluginData.configurations"]},{"name":"val connectionThrottle: Long","description":"dev.racci.minix.api.extensions.connectionThrottle","location":"Minix-API/dev.racci.minix.api.extensions/connection-throttle.html","searchKeys":["connectionThrottle","val connectionThrottle: Long","dev.racci.minix.api.extensions.connectionThrottle"]},{"name":"val cookingTime: Int","description":"dev.racci.minix.api.serializables.recipes.BlastingRecipeIngredients.cookingTime","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-blasting-recipe-ingredients/cooking-time.html","searchKeys":["cookingTime","val cookingTime: Int","dev.racci.minix.api.serializables.recipes.BlastingRecipeIngredients.cookingTime"]},{"name":"val cookingTime: Int","description":"dev.racci.minix.api.serializables.recipes.CampfireRecipeIngredients.cookingTime","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-campfire-recipe-ingredients/cooking-time.html","searchKeys":["cookingTime","val cookingTime: Int","dev.racci.minix.api.serializables.recipes.CampfireRecipeIngredients.cookingTime"]},{"name":"val cookingTime: Int","description":"dev.racci.minix.api.serializables.recipes.FurnaceRecipeIngredients.cookingTime","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-furnace-recipe-ingredients/cooking-time.html","searchKeys":["cookingTime","val cookingTime: Int","dev.racci.minix.api.serializables.recipes.FurnaceRecipeIngredients.cookingTime"]},{"name":"val cookingTime: Int","description":"dev.racci.minix.api.serializables.recipes.SmokingRecipeIngredients.cookingTime","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-smoking-recipe-ingredients/cooking-time.html","searchKeys":["cookingTime","val cookingTime: Int","dev.racci.minix.api.serializables.recipes.SmokingRecipeIngredients.cookingTime"]},{"name":"val coroutineService: CoroutineService","description":"dev.racci.minix.api.coroutine.coroutineService","location":"Minix-API/dev.racci.minix.api.coroutine/coroutine-service.html","searchKeys":["coroutineService","val coroutineService: CoroutineService","dev.racci.minix.api.coroutine.coroutineService"]},{"name":"val currentVersion: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.currentVersion","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/current-version.html","searchKeys":["currentVersion","val currentVersion: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.currentVersion"]},{"name":"val dependencies: Array<KClass<*>>","description":"dev.racci.minix.api.annotations.MappedExtension.dependencies","location":"Minix-API/dev.racci.minix.api.annotations/-mapped-extension/dependencies.html","searchKeys":["dependencies","val dependencies: Array<KClass<*>>","dev.racci.minix.api.annotations.MappedExtension.dependencies"]},{"name":"val duration: Duration","description":"dev.racci.minix.api.collections.ExpiringArray.duration","location":"Minix-API/dev.racci.minix.api.collections/-expiring-array/duration.html","searchKeys":["duration","val duration: Duration","dev.racci.minix.api.collections.ExpiringArray.duration"]},{"name":"val entity: Entity? = null","description":"dev.racci.minix.api.events.AbstractComboEvent.entity","location":"Minix-API/dev.racci.minix.api.events/-abstract-combo-event/entity.html","searchKeys":["entity","val entity: Entity? = null","dev.racci.minix.api.events.AbstractComboEvent.entity"]},{"name":"val entries: MutableSet<MutableMap.MutableEntry<K, MutableCollection<V>?>>","description":"dev.racci.minix.api.utils.collections.MultiMap.entries","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/entries.html","searchKeys":["entries","val entries: MutableSet<MutableMap.MutableEntry<K, MutableCollection<V>?>>","dev.racci.minix.api.utils.collections.MultiMap.entries"]},{"name":"val experience: Float","description":"dev.racci.minix.api.serializables.recipes.BlastingRecipeIngredients.experience","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-blasting-recipe-ingredients/experience.html","searchKeys":["experience","val experience: Float","dev.racci.minix.api.serializables.recipes.BlastingRecipeIngredients.experience"]},{"name":"val experience: Float","description":"dev.racci.minix.api.serializables.recipes.CampfireRecipeIngredients.experience","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-campfire-recipe-ingredients/experience.html","searchKeys":["experience","val experience: Float","dev.racci.minix.api.serializables.recipes.CampfireRecipeIngredients.experience"]},{"name":"val experience: Float","description":"dev.racci.minix.api.serializables.recipes.FurnaceRecipeIngredients.experience","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-furnace-recipe-ingredients/experience.html","searchKeys":["experience","val experience: Float","dev.racci.minix.api.serializables.recipes.FurnaceRecipeIngredients.experience"]},{"name":"val experience: Float","description":"dev.racci.minix.api.serializables.recipes.SmokingRecipeIngredients.experience","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-smoking-recipe-ingredients/experience.html","searchKeys":["experience","val experience: Float","dev.racci.minix.api.serializables.recipes.SmokingRecipeIngredients.experience"]},{"name":"val extension: Extension<*>","description":"dev.racci.minix.api.extension.ExtensionStateEvent.extension","location":"Minix-API/dev.racci.minix.api.extension/-extension-state-event/extension.html","searchKeys":["extension","val extension: Extension<*>","dev.racci.minix.api.extension.ExtensionStateEvent.extension"]},{"name":"val extensionEvents: MutableSharedFlow<ExtensionStateEvent>","description":"dev.racci.minix.api.plugin.PluginData.extensionEvents","location":"Minix-API/dev.racci.minix.api.plugin/-plugin-data/extension-events.html","searchKeys":["extensionEvents","val extensionEvents: MutableSharedFlow<ExtensionStateEvent>","dev.racci.minix.api.plugin.PluginData.extensionEvents"]},{"name":"val extensions: Array<KClass<*>>","description":"dev.racci.minix.api.annotations.MappedPlugin.extensions","location":"Minix-API/dev.racci.minix.api.annotations/-mapped-plugin/extensions.html","searchKeys":["extensions","val extensions: Array<KClass<*>>","dev.racci.minix.api.annotations.MappedPlugin.extensions"]},{"name":"val extensions: MutableList<ExtensionUnit<P>>","description":"dev.racci.minix.api.plugin.PluginData.extensions","location":"Minix-API/dev.racci.minix.api.plugin/-plugin-data/extensions.html","searchKeys":["extensions","val extensions: MutableList<ExtensionUnit<P>>","dev.racci.minix.api.plugin.PluginData.extensions"]},{"name":"val extensionsBuilder: MinixPlugin.ExtensionsBuilder","description":"dev.racci.minix.api.plugin.PluginData.extensionsBuilder","location":"Minix-API/dev.racci.minix.api.plugin/-plugin-data/extensions-builder.html","searchKeys":["extensionsBuilder","val extensionsBuilder: MinixPlugin.ExtensionsBuilder","dev.racci.minix.api.plugin.PluginData.extensionsBuilder"]},{"name":"val factor: (axis: IntArray) -> T","description":"dev.racci.minix.api.utils.minecraft.PosRangeIterator.factor","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pos-range-iterator/factor.html","searchKeys":["factor","val factor: (axis: IntArray) -> T","dev.racci.minix.api.utils.minecraft.PosRangeIterator.factor"]},{"name":"val failed: Boolean","description":"dev.racci.minix.api.utils.Loadable.failed","location":"Minix-API/dev.racci.minix.api.utils/-loadable/failed.html","searchKeys":["failed","val failed: Boolean","dev.racci.minix.api.utils.Loadable.failed"]},{"name":"val file: String","description":"dev.racci.minix.api.annotations.MappedConfig.file","location":"Minix-API/dev.racci.minix.api.annotations/-mapped-config/file.html","searchKeys":["file","val file: String","dev.racci.minix.api.annotations.MappedConfig.file"]},{"name":"val first: POS","description":"dev.racci.minix.api.utils.minecraft.PosRange.first","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pos-range/first.html","searchKeys":["first","val first: POS","dev.racci.minix.api.utils.minecraft.PosRange.first"]},{"name":"val formatted: String","description":"dev.racci.minix.api.plugin.logger.MinixLogger.FormattedMessage.formatted","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-formatted-message/formatted.html","searchKeys":["formatted","val formatted: String","dev.racci.minix.api.plugin.logger.MinixLogger.FormattedMessage.formatted"]},{"name":"val from: Location","description":"dev.racci.minix.api.events.PlayerMoveFullXYZEvent.from","location":"Minix-API/dev.racci.minix.api.events/-player-move-full-x-y-z-event/from.html","searchKeys":["from","val from: Location","dev.racci.minix.api.events.PlayerMoveFullXYZEvent.from"]},{"name":"val from: Location","description":"dev.racci.minix.api.events.PlayerMoveXYZEvent.from","location":"Minix-API/dev.racci.minix.api.events/-player-move-x-y-z-event/from.html","searchKeys":["from","val from: Location","dev.racci.minix.api.events.PlayerMoveXYZEvent.from"]},{"name":"val generateStructures: Boolean","description":"dev.racci.minix.api.extensions.generateStructures","location":"Minix-API/dev.racci.minix.api.extensions/generate-structures.html","searchKeys":["generateStructures","val generateStructures: Boolean","dev.racci.minix.api.extensions.generateStructures"]},{"name":"val gigabytes: Double","description":"dev.racci.minix.api.utils.data.Data.gigabytes","location":"Minix-API/dev.racci.minix.api.utils.data/-data/gigabytes.html","searchKeys":["gigabytes","val gigabytes: Double","dev.racci.minix.api.utils.data.Data.gigabytes"]},{"name":"val gigabytesRounded: Long","description":"dev.racci.minix.api.utils.data.Data.gigabytesRounded","location":"Minix-API/dev.racci.minix.api.utils.data/-data/gigabytes-rounded.html","searchKeys":["gigabytesRounded","val gigabytesRounded: Long","dev.racci.minix.api.utils.data.Data.gigabytesRounded"]},{"name":"val group: String","description":"dev.racci.minix.api.serializables.recipes.SerializableRecipe.group","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-serializable-recipe/group.html","searchKeys":["group","val group: String","dev.racci.minix.api.serializables.recipes.SerializableRecipe.group"]},{"name":"val groupTagRegex: Regex","description":"dev.racci.minix.api.updater.Version.Companion.groupTagRegex","location":"Minix-API/dev.racci.minix.api.updater/-version/-companion/group-tag-regex.html","searchKeys":["groupTagRegex","val groupTagRegex: Regex","dev.racci.minix.api.updater.Version.Companion.groupTagRegex"]},{"name":"val handlerMap: LoadingCache<KClass<out Event>, HandlerList>","description":"dev.racci.minix.api.events.KEvent.Companion.handlerMap","location":"Minix-API/dev.racci.minix.api.events/-k-event/-companion/handler-map.html","searchKeys":["handlerMap","val handlerMap: LoadingCache<KClass<out Event>, HandlerList>","dev.racci.minix.api.events.KEvent.Companion.handlerMap"]},{"name":"val ingredients: SerializableRecipeIngredients","description":"dev.racci.minix.api.serializables.recipes.SerializableRecipe.ingredients","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-serializable-recipe/ingredients.html","searchKeys":["ingredients","val ingredients: SerializableRecipeIngredients","dev.racci.minix.api.serializables.recipes.SerializableRecipe.ingredients"]},{"name":"val initialMap: MutableMap<K, V>","description":"dev.racci.minix.api.utils.collections.ExpirationMapImpl.initialMap","location":"Minix-API/dev.racci.minix.api.utils.collections/-expiration-map-impl/initial-map.html","searchKeys":["initialMap","val initialMap: MutableMap<K, V>","dev.racci.minix.api.utils.collections.ExpirationMapImpl.initialMap"]},{"name":"val input: SerializableItemStack","description":"dev.racci.minix.api.serializables.recipes.BlastingRecipeIngredients.input","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-blasting-recipe-ingredients/input.html","searchKeys":["input","val input: SerializableItemStack","dev.racci.minix.api.serializables.recipes.BlastingRecipeIngredients.input"]},{"name":"val input: SerializableItemStack","description":"dev.racci.minix.api.serializables.recipes.CampfireRecipeIngredients.input","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-campfire-recipe-ingredients/input.html","searchKeys":["input","val input: SerializableItemStack","dev.racci.minix.api.serializables.recipes.CampfireRecipeIngredients.input"]},{"name":"val input: SerializableItemStack","description":"dev.racci.minix.api.serializables.recipes.FurnaceRecipeIngredients.input","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-furnace-recipe-ingredients/input.html","searchKeys":["input","val input: SerializableItemStack","dev.racci.minix.api.serializables.recipes.FurnaceRecipeIngredients.input"]},{"name":"val input: SerializableItemStack","description":"dev.racci.minix.api.serializables.recipes.SmithingRecipeIngredients.input","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-smithing-recipe-ingredients/input.html","searchKeys":["input","val input: SerializableItemStack","dev.racci.minix.api.serializables.recipes.SmithingRecipeIngredients.input"]},{"name":"val input: SerializableItemStack","description":"dev.racci.minix.api.serializables.recipes.SmokingRecipeIngredients.input","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-smoking-recipe-ingredients/input.html","searchKeys":["input","val input: SerializableItemStack","dev.racci.minix.api.serializables.recipes.SmokingRecipeIngredients.input"]},{"name":"val input: SerializableItemStack","description":"dev.racci.minix.api.serializables.recipes.StoneCuttingRecipeIngredients.input","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-stone-cutting-recipe-ingredients/input.html","searchKeys":["input","val input: SerializableItemStack","dev.racci.minix.api.serializables.recipes.StoneCuttingRecipeIngredients.input"]},{"name":"val instance: MessageDigest","description":"dev.racci.minix.api.updater.ChecksumType.instance","location":"Minix-API/dev.racci.minix.api.updater/-checksum-type/instance.html","searchKeys":["instance","val instance: MessageDigest","dev.racci.minix.api.updater.ChecksumType.instance"]},{"name":"val instanceOrNull: MessageDigest?","description":"dev.racci.minix.api.updater.ChecksumType.instanceOrNull","location":"Minix-API/dev.racci.minix.api.updater/-checksum-type/instance-or-null.html","searchKeys":["instanceOrNull","val instanceOrNull: MessageDigest?","dev.racci.minix.api.updater.ChecksumType.instanceOrNull"]},{"name":"val ipBans: Set<String>","description":"dev.racci.minix.api.extensions.ipBans","location":"Minix-API/dev.racci.minix.api.extensions/ip-bans.html","searchKeys":["ipBans","val ipBans: Set<String>","dev.racci.minix.api.extensions.ipBans"]},{"name":"val isBlockEvent: Boolean","description":"dev.racci.minix.api.events.AbstractComboEvent.isBlockEvent","location":"Minix-API/dev.racci.minix.api.events/-abstract-combo-event/is-block-event.html","searchKeys":["isBlockEvent","val isBlockEvent: Boolean","dev.racci.minix.api.events.AbstractComboEvent.isBlockEvent"]},{"name":"val isCustom: Boolean","description":"dev.racci.minix.api.events.KWorldEvent.isCustom","location":"Minix-API/dev.racci.minix.api.events/-k-world-event/is-custom.html","searchKeys":["isCustom","val isCustom: Boolean","dev.racci.minix.api.events.KWorldEvent.isCustom"]},{"name":"val isDoubleAttack: Boolean","description":"dev.racci.minix.api.data.PlayerData.isDoubleAttack","location":"Minix-API/dev.racci.minix.api.data/-player-data/is-double-attack.html","searchKeys":["isDoubleAttack","val isDoubleAttack: Boolean","dev.racci.minix.api.data.PlayerData.isDoubleAttack"]},{"name":"val isDoubleInteract: Boolean","description":"dev.racci.minix.api.data.PlayerData.isDoubleInteract","location":"Minix-API/dev.racci.minix.api.data/-player-data/is-double-interact.html","searchKeys":["isDoubleInteract","val isDoubleInteract: Boolean","dev.racci.minix.api.data.PlayerData.isDoubleInteract"]},{"name":"val isDoubleJump: Boolean","description":"dev.racci.minix.api.data.PlayerData.isDoubleJump","location":"Minix-API/dev.racci.minix.api.data/-player-data/is-double-jump.html","searchKeys":["isDoubleJump","val isDoubleJump: Boolean","dev.racci.minix.api.data.PlayerData.isDoubleJump"]},{"name":"val isDoubleOffhand: Boolean","description":"dev.racci.minix.api.data.PlayerData.isDoubleOffhand","location":"Minix-API/dev.racci.minix.api.data/-player-data/is-double-offhand.html","searchKeys":["isDoubleOffhand","val isDoubleOffhand: Boolean","dev.racci.minix.api.data.PlayerData.isDoubleOffhand"]},{"name":"val isDoubleSneak: Boolean","description":"dev.racci.minix.api.data.PlayerData.isDoubleSneak","location":"Minix-API/dev.racci.minix.api.data/-player-data/is-double-sneak.html","searchKeys":["isDoubleSneak","val isDoubleSneak: Boolean","dev.racci.minix.api.data.PlayerData.isDoubleSneak"]},{"name":"val isEmpty: Boolean","description":"dev.racci.minix.api.utils.collections.MultiMap.isEmpty","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/is-empty.html","searchKeys":["isEmpty","val isEmpty: Boolean","dev.racci.minix.api.utils.collections.MultiMap.isEmpty"]},{"name":"val isEnd: Boolean","description":"dev.racci.minix.api.events.KWorldEvent.isEnd","location":"Minix-API/dev.racci.minix.api.events/-k-world-event/is-end.html","searchKeys":["isEnd","val isEnd: Boolean","dev.racci.minix.api.events.KWorldEvent.isEnd"]},{"name":"val isEntityEvent: Boolean","description":"dev.racci.minix.api.events.AbstractComboEvent.isEntityEvent","location":"Minix-API/dev.racci.minix.api.events/-abstract-combo-event/is-entity-event.html","searchKeys":["isEntityEvent","val isEntityEvent: Boolean","dev.racci.minix.api.events.AbstractComboEvent.isEntityEvent"]},{"name":"val isHardcore: Boolean","description":"dev.racci.minix.api.extensions.isHardcore","location":"Minix-API/dev.racci.minix.api.extensions/is-hardcore.html","searchKeys":["isHardcore","val isHardcore: Boolean","dev.racci.minix.api.extensions.isHardcore"]},{"name":"val isNether: Boolean","description":"dev.racci.minix.api.events.KWorldEvent.isNether","location":"Minix-API/dev.racci.minix.api.events/-k-world-event/is-nether.html","searchKeys":["isNether","val isNether: Boolean","dev.racci.minix.api.events.KWorldEvent.isNether"]},{"name":"val isOverworld: Boolean","description":"dev.racci.minix.api.events.KWorldEvent.isOverworld","location":"Minix-API/dev.racci.minix.api.events/-k-world-event/is-overworld.html","searchKeys":["isOverworld","val isOverworld: Boolean","dev.racci.minix.api.events.KWorldEvent.isOverworld"]},{"name":"val isPrimaryThread: Boolean","description":"dev.racci.minix.api.extensions.isPrimaryThread","location":"Minix-API/dev.racci.minix.api.extensions/is-primary-thread.html","searchKeys":["isPrimaryThread","val isPrimaryThread: Boolean","dev.racci.minix.api.extensions.isPrimaryThread"]},{"name":"val isSuccessful: Boolean = false","description":"dev.racci.minix.api.updater.UpdateResult.isSuccessful","location":"Minix-API/dev.racci.minix.api.updater/-update-result/is-successful.html","searchKeys":["isSuccessful","val isSuccessful: Boolean = false","dev.racci.minix.api.updater.UpdateResult.isSuccessful"]},{"name":"val item: ItemStack?","description":"dev.racci.minix.api.events.AbstractComboEvent.item","location":"Minix-API/dev.racci.minix.api.events/-abstract-combo-event/item.html","searchKeys":["item","val item: ItemStack?","dev.racci.minix.api.events.AbstractComboEvent.item"]},{"name":"val items: List<SerializableItemStack>","description":"dev.racci.minix.api.serializables.recipes.ShapelessRecipeIngredients.items","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-shapeless-recipe-ingredients/items.html","searchKeys":["items","val items: List<SerializableItemStack>","dev.racci.minix.api.serializables.recipes.ShapelessRecipeIngredients.items"]},{"name":"val items: Map<String, SerializableItemStack>","description":"dev.racci.minix.api.serializables.recipes.ShapedRecipeIngredients.items","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-shaped-recipe-ingredients/items.html","searchKeys":["items","val items: Map<String, SerializableItemStack>","dev.racci.minix.api.serializables.recipes.ShapedRecipeIngredients.items"]},{"name":"val iterator: PosRangeIterator<POS>","description":"dev.racci.minix.api.utils.minecraft.RangeIteratorWithFactor.iterator","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-range-iterator-with-factor/iterator.html","searchKeys":["iterator","val iterator: PosRangeIterator<POS>","dev.racci.minix.api.utils.minecraft.RangeIteratorWithFactor.iterator"]},{"name":"val key: String","description":"dev.racci.minix.api.serializables.recipes.SerializableRecipe.key","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-serializable-recipe/key.html","searchKeys":["key","val key: String","dev.racci.minix.api.serializables.recipes.SerializableRecipe.key"]},{"name":"val keys: MutableSet<K>","description":"dev.racci.minix.api.utils.collections.MultiMap.keys","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/keys.html","searchKeys":["keys","val keys: MutableSet<K>","dev.racci.minix.api.utils.collections.MultiMap.keys"]},{"name":"val kilobytes: Double","description":"dev.racci.minix.api.utils.data.Data.kilobytes","location":"Minix-API/dev.racci.minix.api.utils.data/-data/kilobytes.html","searchKeys":["kilobytes","val kilobytes: Double","dev.racci.minix.api.utils.data.Data.kilobytes"]},{"name":"val kilobytesRounded: Long","description":"dev.racci.minix.api.utils.data.Data.kilobytesRounded","location":"Minix-API/dev.racci.minix.api.utils.data/-data/kilobytes-rounded.html","searchKeys":["kilobytesRounded","val kilobytesRounded: Long","dev.racci.minix.api.utils.data.Data.kilobytesRounded"]},{"name":"val knownCommandsField: Field","description":"dev.racci.minix.api.extensions.knownCommandsField","location":"Minix-API/dev.racci.minix.api.extensions/known-commands-field.html","searchKeys":["knownCommandsField","val knownCommandsField: Field","dev.racci.minix.api.extensions.knownCommandsField"]},{"name":"val last: POS","description":"dev.racci.minix.api.utils.minecraft.PosRange.last","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-pos-range/last.html","searchKeys":["last","val last: POS","dev.racci.minix.api.utils.minecraft.PosRange.last"]},{"name":"val level: MinixLogger.LoggingLevel","description":"dev.racci.minix.api.plugin.logger.MinixLogger.FormattedMessage.level","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-formatted-message/level.html","searchKeys":["level","val level: MinixLogger.LoggingLevel","dev.racci.minix.api.plugin.logger.MinixLogger.FormattedMessage.level"]},{"name":"val level: MinixLogger.LoggingLevel","description":"dev.racci.minix.api.plugin.logger.MinixLogger.level","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/level.html","searchKeys":["level","val level: MinixLogger.LoggingLevel","dev.racci.minix.api.plugin.logger.MinixLogger.level"]},{"name":"val lightLevel: Int","description":"dev.racci.minix.api.events.PlayerLightEvent.lightLevel","location":"Minix-API/dev.racci.minix.api.events/-player-light-event/light-level.html","searchKeys":["lightLevel","val lightLevel: Int","dev.racci.minix.api.events.PlayerLightEvent.lightLevel"]},{"name":"val loaded: Boolean","description":"dev.racci.minix.api.utils.Loadable.loaded","location":"Minix-API/dev.racci.minix.api.utils/-loadable/loaded.html","searchKeys":["loaded","val loaded: Boolean","dev.racci.minix.api.utils.Loadable.loaded"]},{"name":"val loadedExtensions: MutableList<Extension<P>>","description":"dev.racci.minix.api.plugin.PluginData.loadedExtensions","location":"Minix-API/dev.racci.minix.api.plugin/-plugin-data/loaded-extensions.html","searchKeys":["loadedExtensions","val loadedExtensions: MutableList<Extension<P>>","dev.racci.minix.api.plugin.PluginData.loadedExtensions"]},{"name":"val loader: ClassLoader","description":"dev.racci.minix.api.plugin.PluginData.loader","location":"Minix-API/dev.racci.minix.api.plugin/-plugin-data/loader.html","searchKeys":["loader","val loader: ClassLoader","dev.racci.minix.api.plugin.PluginData.loader"]},{"name":"val localFile: String","description":"dev.racci.minix.api.data.PluginUpdater.localFile","location":"Minix-API/dev.racci.minix.api.data/-plugin-updater/local-file.html","searchKeys":["localFile","val localFile: String","dev.racci.minix.api.data.PluginUpdater.localFile"]},{"name":"val localVersion: Version","description":"dev.racci.minix.api.data.PluginUpdater.localVersion","location":"Minix-API/dev.racci.minix.api.data/-plugin-updater/local-version.html","searchKeys":["localVersion","val localVersion: Version","dev.racci.minix.api.data.PluginUpdater.localVersion"]},{"name":"val log: MinixLogger","description":"dev.racci.minix.api.plugin.MinixPlugin.log","location":"Minix-API/dev.racci.minix.api.plugin/-minix-plugin/log.html","searchKeys":["log","val log: MinixLogger","dev.racci.minix.api.plugin.MinixPlugin.log"]},{"name":"val log: PluginDependentMinixLogger<P>","description":"dev.racci.minix.api.plugin.PluginData.log","location":"Minix-API/dev.racci.minix.api.plugin/-plugin-data/log.html","searchKeys":["log","val log: PluginDependentMinixLogger<P>","dev.racci.minix.api.plugin.PluginData.log"]},{"name":"val logger: MinixLogger","description":"dev.racci.minix.api.updater.providers.UpdateProvider.logger","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/logger.html","searchKeys":["logger","val logger: MinixLogger","dev.racci.minix.api.updater.providers.UpdateProvider.logger"]},{"name":"val mainVersionString: String","description":"dev.racci.minix.api.utils.minecraft.MCVersion.mainVersionString","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/main-version-string.html","searchKeys":["mainVersionString","val mainVersionString: String","dev.racci.minix.api.utils.minecraft.MCVersion.mainVersionString"]},{"name":"val major: Int","description":"dev.racci.minix.api.updater.Version.major","location":"Minix-API/dev.racci.minix.api.updater/-version/major.html","searchKeys":["major","val major: Int","dev.racci.minix.api.updater.Version.major"]},{"name":"val majorMinecraftVersion: MCVersion","description":"dev.racci.minix.api.utils.minecraft.MCVersion.majorMinecraftVersion","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/major-minecraft-version.html","searchKeys":["majorMinecraftVersion","val majorMinecraftVersion: MCVersion","dev.racci.minix.api.utils.minecraft.MCVersion.majorMinecraftVersion"]},{"name":"val map: MutableMap<K, MutableCollection<V>?>","description":"dev.racci.minix.api.utils.collections.MultiMap.map","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/map.html","searchKeys":["map","val map: MutableMap<K, MutableCollection<V>?>","dev.racci.minix.api.utils.collections.MultiMap.map"]},{"name":"val megabytes: Double","description":"dev.racci.minix.api.utils.data.Data.megabytes","location":"Minix-API/dev.racci.minix.api.utils.data/-data/megabytes.html","searchKeys":["megabytes","val megabytes: Double","dev.racci.minix.api.utils.data.Data.megabytes"]},{"name":"val megabytesRounded: Long","description":"dev.racci.minix.api.utils.data.Data.megabytesRounded","location":"Minix-API/dev.racci.minix.api.utils.data/-data/megabytes-rounded.html","searchKeys":["megabytesRounded","val megabytesRounded: Long","dev.racci.minix.api.utils.data.Data.megabytesRounded"]},{"name":"val messenger: Messenger","description":"dev.racci.minix.api.extensions.messenger","location":"Minix-API/dev.racci.minix.api.extensions/messenger.html","searchKeys":["messenger","val messenger: Messenger","dev.racci.minix.api.extensions.messenger"]},{"name":"val metrics: Metrics?","description":"dev.racci.minix.api.plugin.MinixPlugin.metrics","location":"Minix-API/dev.racci.minix.api.plugin/-minix-plugin/metrics.html","searchKeys":["metrics","val metrics: Metrics?","dev.racci.minix.api.plugin.MinixPlugin.metrics"]},{"name":"val minix: MinixConfig.Minix<P>","description":"dev.racci.minix.api.data.MinixConfig.minix","location":"Minix-API/dev.racci.minix.api.data/-minix-config/minix.html","searchKeys":["minix","val minix: MinixConfig.Minix<P>","dev.racci.minix.api.data.MinixConfig.minix"]},{"name":"val minor: Int","description":"dev.racci.minix.api.updater.Version.minor","location":"Minix-API/dev.racci.minix.api.updater/-version/minor.html","searchKeys":["minor","val minor: Int","dev.racci.minix.api.updater.Version.minor"]},{"name":"val monsterSpawnLimit: Int","description":"dev.racci.minix.api.extensions.monsterSpawnLimit","location":"Minix-API/dev.racci.minix.api.extensions/monster-spawn-limit.html","searchKeys":["monsterSpawnLimit","val monsterSpawnLimit: Int","dev.racci.minix.api.extensions.monsterSpawnLimit"]},{"name":"val name: String","description":"dev.racci.minix.api.annotations.MappedExtension.name","location":"Minix-API/dev.racci.minix.api.annotations/-mapped-extension/name.html","searchKeys":["name","val name: String","dev.racci.minix.api.annotations.MappedExtension.name"]},{"name":"val name: String","description":"dev.racci.minix.api.scheduler.CoroutineRunnable.name","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-runnable/name.html","searchKeys":["name","val name: String","dev.racci.minix.api.scheduler.CoroutineRunnable.name"]},{"name":"val name: String","description":"dev.racci.minix.api.utils.minecraft.MCVersion.name","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/name.html","searchKeys":["name","val name: String","dev.racci.minix.api.utils.minecraft.MCVersion.name"]},{"name":"val newType: LiquidType","description":"dev.racci.minix.api.events.PlayerLiquidEvent.newType","location":"Minix-API/dev.racci.minix.api.events/-player-liquid-event/new-type.html","searchKeys":["newType","val newType: LiquidType","dev.racci.minix.api.events.PlayerLiquidEvent.newType"]},{"name":"val offHandItem: ItemStack?","description":"dev.racci.minix.api.events.PlayerDoubleOffhandEvent.offHandItem","location":"Minix-API/dev.racci.minix.api.events/-player-double-offhand-event/off-hand-item.html","searchKeys":["offHandItem","val offHandItem: ItemStack?","dev.racci.minix.api.events.PlayerDoubleOffhandEvent.offHandItem"]},{"name":"val offHandItem: ItemStack?","description":"dev.racci.minix.api.events.PlayerOffhandEvent.offHandItem","location":"Minix-API/dev.racci.minix.api.events/-player-offhand-event/off-hand-item.html","searchKeys":["offHandItem","val offHandItem: ItemStack?","dev.racci.minix.api.events.PlayerOffhandEvent.offHandItem"]},{"name":"val offHandItem: ItemStack?","description":"dev.racci.minix.api.events.PlayerShiftDoubleOffhandEvent.offHandItem","location":"Minix-API/dev.racci.minix.api.events/-player-shift-double-offhand-event/off-hand-item.html","searchKeys":["offHandItem","val offHandItem: ItemStack?","dev.racci.minix.api.events.PlayerShiftDoubleOffhandEvent.offHandItem"]},{"name":"val offHandItem: ItemStack?","description":"dev.racci.minix.api.events.PlayerShiftOffhandEvent.offHandItem","location":"Minix-API/dev.racci.minix.api.events/-player-shift-offhand-event/off-hand-item.html","searchKeys":["offHandItem","val offHandItem: ItemStack?","dev.racci.minix.api.events.PlayerShiftOffhandEvent.offHandItem"]},{"name":"val onlineMode: Boolean","description":"dev.racci.minix.api.extensions.onlineMode","location":"Minix-API/dev.racci.minix.api.extensions/online-mode.html","searchKeys":["onlineMode","val onlineMode: Boolean","dev.racci.minix.api.extensions.onlineMode"]},{"name":"val onlinePlayers: Collection<Player>","description":"dev.racci.minix.api.extensions.onlinePlayers","location":"Minix-API/dev.racci.minix.api.extensions/online-players.html","searchKeys":["onlinePlayers","val onlinePlayers: Collection<Player>","dev.racci.minix.api.extensions.onlinePlayers"]},{"name":"val operators: Set<OfflinePlayer>","description":"dev.racci.minix.api.extensions.operators","location":"Minix-API/dev.racci.minix.api.extensions/operators.html","searchKeys":["operators","val operators: Set<OfflinePlayer>","dev.racci.minix.api.extensions.operators"]},{"name":"val ordinal: Int","description":"dev.racci.minix.api.utils.minecraft.MCVersion.ordinal","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/ordinal.html","searchKeys":["ordinal","val ordinal: Int","dev.racci.minix.api.utils.minecraft.MCVersion.ordinal"]},{"name":"val parent: KClass<*>","description":"dev.racci.minix.api.annotations.MappedConfig.parent","location":"Minix-API/dev.racci.minix.api.annotations/-mapped-config/parent.html","searchKeys":["parent","val parent: KClass<*>","dev.racci.minix.api.annotations.MappedConfig.parent"]},{"name":"val parent: KClass<*>","description":"dev.racci.minix.api.annotations.MappedExtension.parent","location":"Minix-API/dev.racci.minix.api.annotations/-mapped-extension/parent.html","searchKeys":["parent","val parent: KClass<*>","dev.racci.minix.api.annotations.MappedExtension.parent"]},{"name":"val patch: Int","description":"dev.racci.minix.api.updater.Version.patch","location":"Minix-API/dev.racci.minix.api.updater/-version/patch.html","searchKeys":["patch","val patch: Int","dev.racci.minix.api.updater.Version.patch"]},{"name":"val pitch: Float","description":"dev.racci.minix.api.utils.minecraft.LocationPos.pitch","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-location-pos/pitch.html","searchKeys":["pitch","val pitch: Float","dev.racci.minix.api.utils.minecraft.LocationPos.pitch"]},{"name":"val pitchColumn: Column<Float>","description":"dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegate.pitchColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-multi-column-exposed-delegate/pitch-column.html","searchKeys":["pitchColumn","val pitchColumn: Column<Float>","dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegate.pitchColumn"]},{"name":"val pitchColumn: Column<Float>","description":"dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegate.pitchColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-multi-column-exposed-delegate/pitch-column.html","searchKeys":["pitchColumn","val pitchColumn: Column<Float>","dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegate.pitchColumn"]},{"name":"val pitchColumn: Column<Float?>","description":"dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegateNullable.pitchColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-multi-column-exposed-delegate-nullable/pitch-column.html","searchKeys":["pitchColumn","val pitchColumn: Column<Float?>","dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegateNullable.pitchColumn"]},{"name":"val pitchColumn: Column<Float?>","description":"dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegateNullable.pitchColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-multi-column-exposed-delegate-nullable/pitch-column.html","searchKeys":["pitchColumn","val pitchColumn: Column<Float?>","dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegateNullable.pitchColumn"]},{"name":"val player: Player? = null","description":"dev.racci.minix.api.events.PlayerUnloadEvent.player","location":"Minix-API/dev.racci.minix.api.events/-player-unload-event/player.html","searchKeys":["player","val player: Player? = null","dev.racci.minix.api.events.PlayerUnloadEvent.player"]},{"name":"val playerQuit: PlayerQuitFunction","description":"dev.racci.minix.api.utils.minecraft.PlayerUtils.ChatInput.playerQuit","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-player-utils/-chat-input/player-quit.html","searchKeys":["playerQuit","val playerQuit: PlayerQuitFunction","dev.racci.minix.api.utils.minecraft.PlayerUtils.ChatInput.playerQuit"]},{"name":"val plugin: MinixPlugin","description":"dev.racci.minix.api.scheduler.CoroutineRunnable.plugin","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-runnable/plugin.html","searchKeys":["plugin","val plugin: MinixPlugin","dev.racci.minix.api.scheduler.CoroutineRunnable.plugin"]},{"name":"val plugin: MinixPlugin","description":"dev.racci.minix.api.utils.minecraft.PlayerUtils.ChatInput.plugin","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-player-utils/-chat-input/plugin.html","searchKeys":["plugin","val plugin: MinixPlugin","dev.racci.minix.api.utils.minecraft.PlayerUtils.ChatInput.plugin"]},{"name":"val plugin: MinixPlugin","description":"dev.racci.minix.api.utils.minecraft.PlayerUtils.PlayerCallback.plugin","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-player-utils/-player-callback/plugin.html","searchKeys":["plugin","val plugin: MinixPlugin","dev.racci.minix.api.utils.minecraft.PlayerUtils.PlayerCallback.plugin"]},{"name":"val plugin: P","description":"dev.racci.minix.api.data.MinixConfig.InnerConfig.plugin","location":"Minix-API/dev.racci.minix.api.data/-minix-config/-inner-config/plugin.html","searchKeys":["plugin","val plugin: P","dev.racci.minix.api.data.MinixConfig.InnerConfig.plugin"]},{"name":"val plugin: P","description":"dev.racci.minix.api.plugin.PluginData.plugin","location":"Minix-API/dev.racci.minix.api.plugin/-plugin-data/plugin.html","searchKeys":["plugin","val plugin: P","dev.racci.minix.api.plugin.PluginData.plugin"]},{"name":"val pluginManager: PluginManager","description":"dev.racci.minix.api.extensions.pluginManager","location":"Minix-API/dev.racci.minix.api.extensions/plugin-manager.html","searchKeys":["pluginManager","val pluginManager: PluginManager","dev.racci.minix.api.extensions.pluginManager"]},{"name":"val pluginName: String","description":"dev.racci.minix.api.utils.minecraft.PluginUtils.DependencyDelegate.pluginName","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-plugin-utils/-dependency-delegate/plugin-name.html","searchKeys":["pluginName","val pluginName: String","dev.racci.minix.api.utils.minecraft.PluginUtils.DependencyDelegate.pluginName"]},{"name":"val pluginName: String","description":"dev.racci.minix.api.utils.minecraft.PluginUtils.SoftDependencyDelegate.pluginName","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-plugin-utils/-soft-dependency-delegate/plugin-name.html","searchKeys":["pluginName","val pluginName: String","dev.racci.minix.api.utils.minecraft.PluginUtils.SoftDependencyDelegate.pluginName"]},{"name":"val pm: PluginManager","description":"dev.racci.minix.api.extensions.pm","location":"Minix-API/dev.racci.minix.api.extensions/pm.html","searchKeys":["pm","val pm: PluginManager","dev.racci.minix.api.extensions.pm"]},{"name":"val preReleaseTagRegex: Regex","description":"dev.racci.minix.api.updater.Version.Companion.preReleaseTagRegex","location":"Minix-API/dev.racci.minix.api.updater/-version/-companion/pre-release-tag-regex.html","searchKeys":["preReleaseTagRegex","val preReleaseTagRegex: Regex","dev.racci.minix.api.updater.Version.Companion.preReleaseTagRegex"]},{"name":"val preReleaseTagResolution: MutableMap<String, Int>","description":"dev.racci.minix.api.updater.Version.Companion.preReleaseTagResolution","location":"Minix-API/dev.racci.minix.api.updater/-version/-companion/pre-release-tag-resolution.html","searchKeys":["preReleaseTagResolution","val preReleaseTagResolution: MutableMap<String, Int>","dev.racci.minix.api.updater.Version.Companion.preReleaseTagResolution"]},{"name":"val preReleaseTags: Array<String>","description":"dev.racci.minix.api.updater.Version.Companion.preReleaseTags","location":"Minix-API/dev.racci.minix.api.updater/-version/-companion/pre-release-tags.html","searchKeys":["preReleaseTags","val preReleaseTags: Array<String>","dev.racci.minix.api.updater.Version.Companion.preReleaseTags"]},{"name":"val previousType: LiquidType","description":"dev.racci.minix.api.events.PlayerLiquidEvent.previousType","location":"Minix-API/dev.racci.minix.api.events/-player-liquid-event/previous-type.html","searchKeys":["previousType","val previousType: LiquidType","dev.racci.minix.api.events.PlayerLiquidEvent.previousType"]},{"name":"val protocolVersion: Int","description":"dev.racci.minix.api.utils.minecraft.MCVersion.protocolVersion","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/protocol-version.html","searchKeys":["protocolVersion","val protocolVersion: Int","dev.racci.minix.api.utils.minecraft.MCVersion.protocolVersion"]},{"name":"val protocolVersions: List<MCVersion>","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.protocolVersions","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/protocol-versions.html","searchKeys":["protocolVersions","val protocolVersions: List<MCVersion>","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.protocolVersions"]},{"name":"val provider: UpdateProvider","description":"dev.racci.minix.api.data.PluginUpdater.provider","location":"Minix-API/dev.racci.minix.api.data/-plugin-updater/provider.html","searchKeys":["provider","val provider: UpdateProvider","dev.racci.minix.api.data.PluginUpdater.provider"]},{"name":"val raw: String","description":"dev.racci.minix.api.plugin.logger.MinixLogger.FormattedMessage.raw","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-formatted-message/raw.html","searchKeys":["raw","val raw: String","dev.racci.minix.api.plugin.logger.MinixLogger.FormattedMessage.raw"]},{"name":"val rawVersion: String","description":"dev.racci.minix.api.updater.Version.rawVersion","location":"Minix-API/dev.racci.minix.api.updater/-version/raw-version.html","searchKeys":["rawVersion","val rawVersion: String","dev.racci.minix.api.updater.Version.rawVersion"]},{"name":"val recipes: Iterator<Recipe>","description":"dev.racci.minix.api.extensions.recipes","location":"Minix-API/dev.racci.minix.api.extensions/recipes.html","searchKeys":["recipes","val recipes: Iterator<Recipe>","dev.racci.minix.api.extensions.recipes"]},{"name":"val rendered: String","description":"dev.racci.minix.api.plugin.logger.MinixLogger.FormattedMessage.rendered","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-formatted-message/rendered.html","searchKeys":["rendered","val rendered: String","dev.racci.minix.api.plugin.logger.MinixLogger.FormattedMessage.rendered"]},{"name":"val result: SerializableItemStack","description":"dev.racci.minix.api.serializables.recipes.SerializableRecipe.result","location":"Minix-API/dev.racci.minix.api.serializables.recipes/-serializable-recipe/result.html","searchKeys":["result","val result: SerializableItemStack","dev.racci.minix.api.serializables.recipes.SerializableRecipe.result"]},{"name":"val scheduler: BukkitScheduler","description":"dev.racci.minix.api.extensions.scheduler","location":"Minix-API/dev.racci.minix.api.extensions/scheduler.html","searchKeys":["scheduler","val scheduler: BukkitScheduler","dev.racci.minix.api.extensions.scheduler"]},{"name":"val scoreboardManager: ScoreboardManager","description":"dev.racci.minix.api.extensions.scoreboardManager","location":"Minix-API/dev.racci.minix.api.extensions/scoreboard-manager.html","searchKeys":["scoreboardManager","val scoreboardManager: ScoreboardManager","dev.racci.minix.api.extensions.scoreboardManager"]},{"name":"val serializers: Array<KClass<*>>","description":"dev.racci.minix.api.annotations.MappedConfig.serializers","location":"Minix-API/dev.racci.minix.api.annotations/-mapped-config/serializers.html","searchKeys":["serializers","val serializers: Array<KClass<*>>","dev.racci.minix.api.annotations.MappedConfig.serializers"]},{"name":"val serializers: TypeSerializerCollection","description":"dev.racci.minix.api.serializables.Serializer.serializers","location":"Minix-API/dev.racci.minix.api.serializables/-serializer/serializers.html","searchKeys":["serializers","val serializers: TypeSerializerCollection","dev.racci.minix.api.serializables.Serializer.serializers"]},{"name":"val serializers: TypeSerializerCollection","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateProviderSerializer.Companion.serializers","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-provider-serializer/-companion/serializers.html","searchKeys":["serializers","val serializers: TypeSerializerCollection","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateProviderSerializer.Companion.serializers"]},{"name":"val server: Server","description":"dev.racci.minix.api.extensions.server","location":"Minix-API/dev.racci.minix.api.extensions/server.html","searchKeys":["server","val server: Server","dev.racci.minix.api.extensions.server"]},{"name":"val serverCommands: SimpleCommandMap","description":"dev.racci.minix.api.extensions.serverCommands","location":"Minix-API/dev.racci.minix.api.extensions/server-commands.html","searchKeys":["serverCommands","val serverCommands: SimpleCommandMap","dev.racci.minix.api.extensions.serverCommands"]},{"name":"val servicesManager: ServicesManager","description":"dev.racci.minix.api.extensions.servicesManager","location":"Minix-API/dev.racci.minix.api.extensions/services-manager.html","searchKeys":["servicesManager","val servicesManager: ServicesManager","dev.racci.minix.api.extensions.servicesManager"]},{"name":"val state: ExtensionState","description":"dev.racci.minix.api.extension.ExtensionStateEvent.state","location":"Minix-API/dev.racci.minix.api.extension/-extension-state-event/state.html","searchKeys":["state","val state: ExtensionState","dev.racci.minix.api.extension.ExtensionStateEvent.state"]},{"name":"val state: Loadable.State","description":"dev.racci.minix.api.utils.Loadable.state","location":"Minix-API/dev.racci.minix.api.utils/-loadable/state.html","searchKeys":["state","val state: Loadable.State","dev.racci.minix.api.utils.Loadable.state"]},{"name":"val supportsDuelWielding: Boolean","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.supportsDuelWielding","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/supports-duel-wielding.html","searchKeys":["supportsDuelWielding","val supportsDuelWielding: Boolean","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.supportsDuelWielding"]},{"name":"val supportsDuelWielding: Boolean","description":"dev.racci.minix.api.utils.minecraft.MCVersion.supportsDuelWielding","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/supports-duel-wielding.html","searchKeys":["supportsDuelWielding","val supportsDuelWielding: Boolean","dev.racci.minix.api.utils.minecraft.MCVersion.supportsDuelWielding"]},{"name":"val supportsRGB: Boolean","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.supportsRGB","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/supports-r-g-b.html","searchKeys":["supportsRGB","val supportsRGB: Boolean","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.supportsRGB"]},{"name":"val supportsRGBColour: Boolean","description":"dev.racci.minix.api.utils.minecraft.MCVersion.supportsRGBColour","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/supports-r-g-b-colour.html","searchKeys":["supportsRGBColour","val supportsRGBColour: Boolean","dev.racci.minix.api.utils.minecraft.MCVersion.supportsRGBColour"]},{"name":"val supportsUUIDs: Boolean","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.supportsUUIDs","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/supports-u-u-i-ds.html","searchKeys":["supportsUUIDs","val supportsUUIDs: Boolean","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.supportsUUIDs"]},{"name":"val supportsUUIDs: Boolean","description":"dev.racci.minix.api.utils.minecraft.MCVersion.supportsUUIDs","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/supports-u-u-i-ds.html","searchKeys":["supportsUUIDs","val supportsUUIDs: Boolean","dev.racci.minix.api.utils.minecraft.MCVersion.supportsUUIDs"]},{"name":"val tagRegex: Regex","description":"dev.racci.minix.api.updater.Version.Companion.tagRegex","location":"Minix-API/dev.racci.minix.api.updater/-version/-companion/tag-regex.html","searchKeys":["tagRegex","val tagRegex: Regex","dev.racci.minix.api.updater.Version.Companion.tagRegex"]},{"name":"val taskID: Int","description":"dev.racci.minix.api.scheduler.CoroutineRunnable.taskID","location":"Minix-API/dev.racci.minix.api.scheduler/-coroutine-runnable/task-i-d.html","searchKeys":["taskID","val taskID: Int","dev.racci.minix.api.scheduler.CoroutineRunnable.taskID"]},{"name":"val throwable: Throwable?","description":"dev.racci.minix.api.plugin.logger.MinixLogger.FormattedMessage.throwable","location":"Minix-API/dev.racci.minix.api.plugin.logger/-minix-logger/-formatted-message/throwable.html","searchKeys":["throwable","val throwable: Throwable?","dev.racci.minix.api.plugin.logger.MinixLogger.FormattedMessage.throwable"]},{"name":"val ticksPerAnimalSpawns: Int","description":"dev.racci.minix.api.extensions.ticksPerAnimalSpawns","location":"Minix-API/dev.racci.minix.api.extensions/ticks-per-animal-spawns.html","searchKeys":["ticksPerAnimalSpawns","val ticksPerAnimalSpawns: Int","dev.racci.minix.api.extensions.ticksPerAnimalSpawns"]},{"name":"val ticksPerMonsterSpawns: Int","description":"dev.racci.minix.api.extensions.ticksPerMonsterSpawns","location":"Minix-API/dev.racci.minix.api.extensions/ticks-per-monster-spawns.html","searchKeys":["ticksPerMonsterSpawns","val ticksPerMonsterSpawns: Int","dev.racci.minix.api.extensions.ticksPerMonsterSpawns"]},{"name":"val timestamp: Long","description":"dev.racci.minix.api.updater.Version.timestamp","location":"Minix-API/dev.racci.minix.api.updater/-version/timestamp.html","searchKeys":["timestamp","val timestamp: Long","dev.racci.minix.api.updater.Version.timestamp"]},{"name":"val type: KClass<T>","description":"dev.racci.minix.api.utils.minecraft.PluginUtils.DependencyDelegate.type","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-plugin-utils/-dependency-delegate/type.html","searchKeys":["type","val type: KClass<T>","dev.racci.minix.api.utils.minecraft.PluginUtils.DependencyDelegate.type"]},{"name":"val type: KClass<T>","description":"dev.racci.minix.api.utils.minecraft.PluginUtils.SoftDependencyDelegate.type","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-plugin-utils/-soft-dependency-delegate/type.html","searchKeys":["type","val type: KClass<T>","dev.racci.minix.api.utils.minecraft.PluginUtils.SoftDependencyDelegate.type"]},{"name":"val unloaded: Boolean","description":"dev.racci.minix.api.utils.Loadable.unloaded","location":"Minix-API/dev.racci.minix.api.utils/-loadable/unloaded.html","searchKeys":["unloaded","val unloaded: Boolean","dev.racci.minix.api.utils.Loadable.unloaded"]},{"name":"val unloadedExtensions: MutableList<Extension<P>>","description":"dev.racci.minix.api.plugin.PluginData.unloadedExtensions","location":"Minix-API/dev.racci.minix.api.plugin/-plugin-data/unloaded-extensions.html","searchKeys":["unloadedExtensions","val unloadedExtensions: MutableList<Extension<P>>","dev.racci.minix.api.plugin.PluginData.unloadedExtensions"]},{"name":"val updateFolder: String","description":"dev.racci.minix.api.extensions.updateFolder","location":"Minix-API/dev.racci.minix.api.extensions/update-folder.html","searchKeys":["updateFolder","val updateFolder: String","dev.racci.minix.api.extensions.updateFolder"]},{"name":"val updateFolderFile: File","description":"dev.racci.minix.api.extensions.updateFolderFile","location":"Minix-API/dev.racci.minix.api.extensions/update-folder-file.html","searchKeys":["updateFolderFile","val updateFolderFile: File","dev.racci.minix.api.extensions.updateFolderFile"]},{"name":"val uuid: UUID","description":"dev.racci.minix.api.data.PlayerData.uuid","location":"Minix-API/dev.racci.minix.api.data/-player-data/uuid.html","searchKeys":["uuid","val uuid: UUID","dev.racci.minix.api.data.PlayerData.uuid"]},{"name":"val uuid: UUID","description":"dev.racci.minix.api.events.PlayerUnloadEvent.uuid","location":"Minix-API/dev.racci.minix.api.events/-player-unload-event/uuid.html","searchKeys":["uuid","val uuid: UUID","dev.racci.minix.api.events.PlayerUnloadEvent.uuid"]},{"name":"val value: AtomicRef<T?>","description":"dev.racci.minix.api.utils.Loadable.value","location":"Minix-API/dev.racci.minix.api.utils/-loadable/value.html","searchKeys":["value","val value: AtomicRef<T?>","dev.racci.minix.api.utils.Loadable.value"]},{"name":"val value: Component","description":"dev.racci.minix.api.utils.adventure.PartialComponent.value","location":"Minix-API/dev.racci.minix.api.utils.adventure/-partial-component/value.html","searchKeys":["value","val value: Component","dev.racci.minix.api.utils.adventure.PartialComponent.value"]},{"name":"val values: MutableCollection<MutableCollection<V>?>","description":"dev.racci.minix.api.utils.collections.MultiMap.values","location":"Minix-API/dev.racci.minix.api.utils.collections/-multi-map/values.html","searchKeys":["values","val values: MutableCollection<MutableCollection<V>?>","dev.racci.minix.api.utils.collections.MultiMap.values"]},{"name":"val versionID: Int","description":"dev.racci.minix.api.utils.minecraft.MCVersion.versionID","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/version-i-d.html","searchKeys":["versionID","val versionID: Int","dev.racci.minix.api.utils.minecraft.MCVersion.versionID"]},{"name":"val versionString: String","description":"dev.racci.minix.api.utils.minecraft.MCVersion.versionString","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/version-string.html","searchKeys":["versionString","val versionString: String","dev.racci.minix.api.utils.minecraft.MCVersion.versionString"]},{"name":"val versionStringRegex: Regex","description":"dev.racci.minix.api.updater.Version.Companion.versionStringRegex","location":"Minix-API/dev.racci.minix.api.updater/-version/-companion/version-string-regex.html","searchKeys":["versionStringRegex","val versionStringRegex: Regex","dev.racci.minix.api.updater.Version.Companion.versionStringRegex"]},{"name":"val versions: List<MCVersion>","description":"dev.racci.minix.api.utils.minecraft.MCVersion.Companion.versions","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-m-c-version/-companion/versions.html","searchKeys":["versions","val versions: List<MCVersion>","dev.racci.minix.api.utils.minecraft.MCVersion.Companion.versions"]},{"name":"val whitelistedPlayers: MutableSet<OfflinePlayer>","description":"dev.racci.minix.api.extensions.whitelistedPlayers","location":"Minix-API/dev.racci.minix.api.extensions/whitelisted-players.html","searchKeys":["whitelistedPlayers","val whitelistedPlayers: MutableSet<OfflinePlayer>","dev.racci.minix.api.extensions.whitelistedPlayers"]},{"name":"val worldColumn: Column<String>","description":"dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegate.worldColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-multi-column-exposed-delegate/world-column.html","searchKeys":["worldColumn","val worldColumn: Column<String>","dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegate.worldColumn"]},{"name":"val worldColumn: Column<String>","description":"dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegate.worldColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-multi-column-exposed-delegate/world-column.html","searchKeys":["worldColumn","val worldColumn: Column<String>","dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegate.worldColumn"]},{"name":"val worldColumn: Column<String>","description":"dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegate.worldColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-multi-column-exposed-delegate/world-column.html","searchKeys":["worldColumn","val worldColumn: Column<String>","dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegate.worldColumn"]},{"name":"val worldColumn: Column<String?>","description":"dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegateNullable.worldColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-multi-column-exposed-delegate-nullable/world-column.html","searchKeys":["worldColumn","val worldColumn: Column<String?>","dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegateNullable.worldColumn"]},{"name":"val worldColumn: Column<String?>","description":"dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegateNullable.worldColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-multi-column-exposed-delegate-nullable/world-column.html","searchKeys":["worldColumn","val worldColumn: Column<String?>","dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegateNullable.worldColumn"]},{"name":"val worldColumn: Column<String?>","description":"dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegateNullable.worldColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-multi-column-exposed-delegate-nullable/world-column.html","searchKeys":["worldColumn","val worldColumn: Column<String?>","dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegateNullable.worldColumn"]},{"name":"val worldContainer: File","description":"dev.racci.minix.api.extensions.worldContainer","location":"Minix-API/dev.racci.minix.api.extensions/world-container.html","searchKeys":["worldContainer","val worldContainer: File","dev.racci.minix.api.extensions.worldContainer"]},{"name":"val worldType: String","description":"dev.racci.minix.api.extensions.worldType","location":"Minix-API/dev.racci.minix.api.extensions/world-type.html","searchKeys":["worldType","val worldType: String","dev.racci.minix.api.extensions.worldType"]},{"name":"val worlds: List<World>","description":"dev.racci.minix.api.extensions.worlds","location":"Minix-API/dev.racci.minix.api.extensions/worlds.html","searchKeys":["worlds","val worlds: List<World>","dev.racci.minix.api.extensions.worlds"]},{"name":"val x: Double","description":"dev.racci.minix.api.utils.minecraft.LocationPos.x","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-location-pos/x.html","searchKeys":["x","val x: Double","dev.racci.minix.api.utils.minecraft.LocationPos.x"]},{"name":"val x: Int","description":"dev.racci.minix.api.utils.minecraft.BlockPos.x","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-block-pos/x.html","searchKeys":["x","val x: Int","dev.racci.minix.api.utils.minecraft.BlockPos.x"]},{"name":"val x: Int","description":"dev.racci.minix.api.utils.minecraft.ChunkPos.x","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-chunk-pos/x.html","searchKeys":["x","val x: Int","dev.racci.minix.api.utils.minecraft.ChunkPos.x"]},{"name":"val xColumn: Column<Double>","description":"dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegate.xColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-multi-column-exposed-delegate/x-column.html","searchKeys":["xColumn","val xColumn: Column<Double>","dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegate.xColumn"]},{"name":"val xColumn: Column<Double>","description":"dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegate.xColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-multi-column-exposed-delegate/x-column.html","searchKeys":["xColumn","val xColumn: Column<Double>","dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegate.xColumn"]},{"name":"val xColumn: Column<Double?>","description":"dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegateNullable.xColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-multi-column-exposed-delegate-nullable/x-column.html","searchKeys":["xColumn","val xColumn: Column<Double?>","dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegateNullable.xColumn"]},{"name":"val xColumn: Column<Double?>","description":"dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegateNullable.xColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-multi-column-exposed-delegate-nullable/x-column.html","searchKeys":["xColumn","val xColumn: Column<Double?>","dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegateNullable.xColumn"]},{"name":"val xColumn: Column<Int>","description":"dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegate.xColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-multi-column-exposed-delegate/x-column.html","searchKeys":["xColumn","val xColumn: Column<Int>","dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegate.xColumn"]},{"name":"val xColumn: Column<Int>","description":"dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegate.xColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-multi-column-exposed-delegate/x-column.html","searchKeys":["xColumn","val xColumn: Column<Int>","dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegate.xColumn"]},{"name":"val xColumn: Column<Int>","description":"dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegate.xColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-multi-column-exposed-delegate/x-column.html","searchKeys":["xColumn","val xColumn: Column<Int>","dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegate.xColumn"]},{"name":"val xColumn: Column<Int>","description":"dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegate.xColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-multi-column-exposed-delegate/x-column.html","searchKeys":["xColumn","val xColumn: Column<Int>","dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegate.xColumn"]},{"name":"val xColumn: Column<Int?>","description":"dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegateNullable.xColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-multi-column-exposed-delegate-nullable/x-column.html","searchKeys":["xColumn","val xColumn: Column<Int?>","dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegateNullable.xColumn"]},{"name":"val xColumn: Column<Int?>","description":"dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegateNullable.xColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-multi-column-exposed-delegate-nullable/x-column.html","searchKeys":["xColumn","val xColumn: Column<Int?>","dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegateNullable.xColumn"]},{"name":"val xColumn: Column<Int?>","description":"dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegateNullable.xColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-multi-column-exposed-delegate-nullable/x-column.html","searchKeys":["xColumn","val xColumn: Column<Int?>","dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegateNullable.xColumn"]},{"name":"val xColumn: Column<Int?>","description":"dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegateNullable.xColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-multi-column-exposed-delegate-nullable/x-column.html","searchKeys":["xColumn","val xColumn: Column<Int?>","dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegateNullable.xColumn"]},{"name":"val y: Double","description":"dev.racci.minix.api.utils.minecraft.LocationPos.y","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-location-pos/y.html","searchKeys":["y","val y: Double","dev.racci.minix.api.utils.minecraft.LocationPos.y"]},{"name":"val y: Int","description":"dev.racci.minix.api.utils.minecraft.BlockPos.y","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-block-pos/y.html","searchKeys":["y","val y: Int","dev.racci.minix.api.utils.minecraft.BlockPos.y"]},{"name":"val yColumn: Column<Double>","description":"dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegate.yColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-multi-column-exposed-delegate/y-column.html","searchKeys":["yColumn","val yColumn: Column<Double>","dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegate.yColumn"]},{"name":"val yColumn: Column<Double>","description":"dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegate.yColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-multi-column-exposed-delegate/y-column.html","searchKeys":["yColumn","val yColumn: Column<Double>","dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegate.yColumn"]},{"name":"val yColumn: Column<Double?>","description":"dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegateNullable.yColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-multi-column-exposed-delegate-nullable/y-column.html","searchKeys":["yColumn","val yColumn: Column<Double?>","dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegateNullable.yColumn"]},{"name":"val yColumn: Column<Double?>","description":"dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegateNullable.yColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-multi-column-exposed-delegate-nullable/y-column.html","searchKeys":["yColumn","val yColumn: Column<Double?>","dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegateNullable.yColumn"]},{"name":"val yColumn: Column<Int>","description":"dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegate.yColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-multi-column-exposed-delegate/y-column.html","searchKeys":["yColumn","val yColumn: Column<Int>","dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegate.yColumn"]},{"name":"val yColumn: Column<Int>","description":"dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegate.yColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-multi-column-exposed-delegate/y-column.html","searchKeys":["yColumn","val yColumn: Column<Int>","dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegate.yColumn"]},{"name":"val yColumn: Column<Int?>","description":"dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegateNullable.yColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-multi-column-exposed-delegate-nullable/y-column.html","searchKeys":["yColumn","val yColumn: Column<Int?>","dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegateNullable.yColumn"]},{"name":"val yColumn: Column<Int?>","description":"dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegateNullable.yColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-multi-column-exposed-delegate-nullable/y-column.html","searchKeys":["yColumn","val yColumn: Column<Int?>","dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegateNullable.yColumn"]},{"name":"val yaw: Float","description":"dev.racci.minix.api.utils.minecraft.LocationPos.yaw","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-location-pos/yaw.html","searchKeys":["yaw","val yaw: Float","dev.racci.minix.api.utils.minecraft.LocationPos.yaw"]},{"name":"val yawColumn: Column<Float>","description":"dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegate.yawColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-multi-column-exposed-delegate/yaw-column.html","searchKeys":["yawColumn","val yawColumn: Column<Float>","dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegate.yawColumn"]},{"name":"val yawColumn: Column<Float>","description":"dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegate.yawColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-multi-column-exposed-delegate/yaw-column.html","searchKeys":["yawColumn","val yawColumn: Column<Float>","dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegate.yawColumn"]},{"name":"val yawColumn: Column<Float?>","description":"dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegateNullable.yawColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-multi-column-exposed-delegate-nullable/yaw-column.html","searchKeys":["yawColumn","val yawColumn: Column<Float?>","dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegateNullable.yawColumn"]},{"name":"val yawColumn: Column<Float?>","description":"dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegateNullable.yawColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-multi-column-exposed-delegate-nullable/yaw-column.html","searchKeys":["yawColumn","val yawColumn: Column<Float?>","dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegateNullable.yawColumn"]},{"name":"val z: Double","description":"dev.racci.minix.api.utils.minecraft.LocationPos.z","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-location-pos/z.html","searchKeys":["z","val z: Double","dev.racci.minix.api.utils.minecraft.LocationPos.z"]},{"name":"val z: Int","description":"dev.racci.minix.api.utils.minecraft.BlockPos.z","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-block-pos/z.html","searchKeys":["z","val z: Int","dev.racci.minix.api.utils.minecraft.BlockPos.z"]},{"name":"val z: Int","description":"dev.racci.minix.api.utils.minecraft.ChunkPos.z","location":"Minix-API/dev.racci.minix.api.utils.minecraft/-chunk-pos/z.html","searchKeys":["z","val z: Int","dev.racci.minix.api.utils.minecraft.ChunkPos.z"]},{"name":"val zColumn: Column<Double>","description":"dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegate.zColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-multi-column-exposed-delegate/z-column.html","searchKeys":["zColumn","val zColumn: Column<Double>","dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegate.zColumn"]},{"name":"val zColumn: Column<Double>","description":"dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegate.zColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-multi-column-exposed-delegate/z-column.html","searchKeys":["zColumn","val zColumn: Column<Double>","dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegate.zColumn"]},{"name":"val zColumn: Column<Double?>","description":"dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegateNullable.zColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-multi-column-exposed-delegate-nullable/z-column.html","searchKeys":["zColumn","val zColumn: Column<Double?>","dev.racci.minix.api.utils.exposed.LocationMultiColumnExposedDelegateNullable.zColumn"]},{"name":"val zColumn: Column<Double?>","description":"dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegateNullable.zColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-location-pos-multi-column-exposed-delegate-nullable/z-column.html","searchKeys":["zColumn","val zColumn: Column<Double?>","dev.racci.minix.api.utils.exposed.LocationPosMultiColumnExposedDelegateNullable.zColumn"]},{"name":"val zColumn: Column<Int>","description":"dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegate.zColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-multi-column-exposed-delegate/z-column.html","searchKeys":["zColumn","val zColumn: Column<Int>","dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegate.zColumn"]},{"name":"val zColumn: Column<Int>","description":"dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegate.zColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-multi-column-exposed-delegate/z-column.html","searchKeys":["zColumn","val zColumn: Column<Int>","dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegate.zColumn"]},{"name":"val zColumn: Column<Int>","description":"dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegate.zColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-multi-column-exposed-delegate/z-column.html","searchKeys":["zColumn","val zColumn: Column<Int>","dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegate.zColumn"]},{"name":"val zColumn: Column<Int>","description":"dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegate.zColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-multi-column-exposed-delegate/z-column.html","searchKeys":["zColumn","val zColumn: Column<Int>","dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegate.zColumn"]},{"name":"val zColumn: Column<Int?>","description":"dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegateNullable.zColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-multi-column-exposed-delegate-nullable/z-column.html","searchKeys":["zColumn","val zColumn: Column<Int?>","dev.racci.minix.api.utils.exposed.BlockMultiColumnExposedDelegateNullable.zColumn"]},{"name":"val zColumn: Column<Int?>","description":"dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegateNullable.zColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-block-pos-multi-column-exposed-delegate-nullable/z-column.html","searchKeys":["zColumn","val zColumn: Column<Int?>","dev.racci.minix.api.utils.exposed.BlockPosMultiColumnExposedDelegateNullable.zColumn"]},{"name":"val zColumn: Column<Int?>","description":"dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegateNullable.zColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-multi-column-exposed-delegate-nullable/z-column.html","searchKeys":["zColumn","val zColumn: Column<Int?>","dev.racci.minix.api.utils.exposed.ChunkMultiColumnExposedDelegateNullable.zColumn"]},{"name":"val zColumn: Column<Int?>","description":"dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegateNullable.zColumn","location":"Minix-API/dev.racci.minix.api.utils.exposed/-chunk-pos-multi-column-exposed-delegate-nullable/z-column.html","searchKeys":["zColumn","val zColumn: Column<Int?>","dev.racci.minix.api.utils.exposed.ChunkPosMultiColumnExposedDelegateNullable.zColumn"]},{"name":"var activeProvider: Int = 0","description":"dev.racci.minix.api.data.PluginUpdater.activeProvider","location":"Minix-API/dev.racci.minix.api.data/-plugin-updater/active-provider.html","searchKeys":["activeProvider","var activeProvider: Int = 0","dev.racci.minix.api.data.PluginUpdater.activeProvider"]},{"name":"var amount: Double = 0.0","description":"dev.racci.minix.api.serializables.SerializableAttributeModifier.amount","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-attribute-modifier/amount.html","searchKeys":["amount","var amount: Double = 0.0","dev.racci.minix.api.serializables.SerializableAttributeModifier.amount"]},{"name":"var amount: Int = 1","description":"dev.racci.minix.api.serializables.SerializableItemStack.amount","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-item-stack/amount.html","searchKeys":["amount","var amount: Int = 1","dev.racci.minix.api.serializables.SerializableItemStack.amount"]},{"name":"var attributeModifiers: MultiMap<Attribute, AttributeModifier>? = null","description":"dev.racci.minix.api.serializables.SerializableItemMeta.attributeModifiers","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-item-meta/attribute-modifiers.html","searchKeys":["attributeModifiers","var attributeModifiers: MultiMap<Attribute, AttributeModifier>? = null","dev.racci.minix.api.serializables.SerializableItemMeta.attributeModifiers"]},{"name":"var changelog: String","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.changelog","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-file/changelog.html","searchKeys":["changelog","var changelog: String","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.changelog"]},{"name":"var channels: Array<String>","description":"dev.racci.minix.api.data.PluginUpdater.channels","location":"Minix-API/dev.racci.minix.api.data/-plugin-updater/channels.html","searchKeys":["channels","var channels: Array<String>","dev.racci.minix.api.data.PluginUpdater.channels"]},{"name":"var checksum: String? = null","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.checksum","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-file/checksum.html","searchKeys":["checksum","var checksum: String? = null","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.checksum"]},{"name":"var customModelData: Int? = null","description":"dev.racci.minix.api.serializables.SerializableItemMeta.customModelData","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-item-meta/custom-model-data.html","searchKeys":["customModelData","var customModelData: Int? = null","dev.racci.minix.api.serializables.SerializableItemMeta.customModelData"]},{"name":"var damage: Int? = null","description":"dev.racci.minix.api.serializables.SerializableItemMeta.damage","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-item-meta/damage.html","searchKeys":["damage","var damage: Int? = null","dev.racci.minix.api.serializables.SerializableItemMeta.damage"]},{"name":"var defaultGameMode: GameMode","description":"dev.racci.minix.api.extensions.defaultGameMode","location":"Minix-API/dev.racci.minix.api.extensions/default-game-mode.html","searchKeys":["defaultGameMode","var defaultGameMode: GameMode","dev.racci.minix.api.extensions.defaultGameMode"]},{"name":"var displayName: Component? = null","description":"dev.racci.minix.api.serializables.SerializableItemMeta.displayName","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-item-meta/display-name.html","searchKeys":["displayName","var displayName: Component? = null","dev.racci.minix.api.serializables.SerializableItemMeta.displayName"]},{"name":"var downloadURL: URL? = null","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.downloadURL","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-file/download-u-r-l.html","searchKeys":["downloadURL","var downloadURL: URL? = null","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.downloadURL"]},{"name":"var enchants: ImmutableMap<Enchantment, Int>? = null","description":"dev.racci.minix.api.serializables.SerializableItemMeta.enchants","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-item-meta/enchants.html","searchKeys":["enchants","var enchants: ImmutableMap<Enchantment, Int>? = null","dev.racci.minix.api.serializables.SerializableItemMeta.enchants"]},{"name":"var failedAttempts: Int = 0","description":"dev.racci.minix.api.data.PluginUpdater.failedAttempts","location":"Minix-API/dev.racci.minix.api.data/-plugin-updater/failed-attempts.html","searchKeys":["failedAttempts","var failedAttempts: Int = 0","dev.racci.minix.api.data.PluginUpdater.failedAttempts"]},{"name":"var fileName: String? = null","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.fileName","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-file/file-name.html","searchKeys":["fileName","var fileName: String? = null","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.fileName"]},{"name":"var gameVersion: String? = null","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.gameVersion","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-file/game-version.html","searchKeys":["gameVersion","var gameVersion: String? = null","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.gameVersion"]},{"name":"var gameVersions: Array<String>? = null","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.gameVersions","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-file/game-versions.html","searchKeys":["gameVersions","var gameVersions: Array<String>? = null","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.gameVersions"]},{"name":"var idleTimeout: Int","description":"dev.racci.minix.api.extensions.idleTimeout","location":"Minix-API/dev.racci.minix.api.extensions/idle-timeout.html","searchKeys":["idleTimeout","var idleTimeout: Int","dev.racci.minix.api.extensions.idleTimeout"]},{"name":"var ignored: Array<String>","description":"dev.racci.minix.api.data.PluginUpdater.ignored","location":"Minix-API/dev.racci.minix.api.data/-plugin-updater/ignored.html","searchKeys":["ignored","var ignored: Array<String>","dev.racci.minix.api.data.PluginUpdater.ignored"]},{"name":"var inAccess: Int","description":"dev.racci.minix.api.data.PlayerData.inAccess","location":"Minix-API/dev.racci.minix.api.data/-player-data/in-access.html","searchKeys":["inAccess","var inAccess: Int","dev.racci.minix.api.data.PlayerData.inAccess"]},{"name":"var isPreRelease: Boolean = false","description":"dev.racci.minix.api.updater.Version.isPreRelease","location":"Minix-API/dev.racci.minix.api.updater/-version/is-pre-release.html","searchKeys":["isPreRelease","var isPreRelease: Boolean = false","dev.racci.minix.api.updater.Version.isPreRelease"]},{"name":"var isSupported: Boolean = false","description":"dev.racci.minix.api.updater.ChecksumType.isSupported","location":"Minix-API/dev.racci.minix.api.updater/-checksum-type/is-supported.html","searchKeys":["isSupported","var isSupported: Boolean = false","dev.racci.minix.api.updater.ChecksumType.isSupported"]},{"name":"var itemFlags: ImmutableSet<ItemFlag>? = null","description":"dev.racci.minix.api.serializables.SerializableItemMeta.itemFlags","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-item-meta/item-flags.html","searchKeys":["itemFlags","var itemFlags: ImmutableSet<ItemFlag>? = null","dev.racci.minix.api.serializables.SerializableItemMeta.itemFlags"]},{"name":"var lastRun: Instant? = null","description":"dev.racci.minix.api.data.PluginUpdater.lastRun","location":"Minix-API/dev.racci.minix.api.data/-plugin-updater/last-run.html","searchKeys":["lastRun","var lastRun: Instant? = null","dev.racci.minix.api.data.PluginUpdater.lastRun"]},{"name":"var liquidType: LiquidType","description":"dev.racci.minix.api.data.PlayerData.liquidType","location":"Minix-API/dev.racci.minix.api.data/-player-data/liquid-type.html","searchKeys":["liquidType","var liquidType: LiquidType","dev.racci.minix.api.data.PlayerData.liquidType"]},{"name":"var localizedName: String? = null","description":"dev.racci.minix.api.serializables.SerializableItemMeta.localizedName","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-item-meta/localized-name.html","searchKeys":["localizedName","var localizedName: String? = null","dev.racci.minix.api.serializables.SerializableItemMeta.localizedName"]},{"name":"var loggingLevel: String","description":"dev.racci.minix.api.data.MinixConfig.Minix.loggingLevel","location":"Minix-API/dev.racci.minix.api.data/-minix-config/-minix/logging-level.html","searchKeys":["loggingLevel","var loggingLevel: String","dev.racci.minix.api.data.MinixConfig.Minix.loggingLevel"]},{"name":"var lore: ImmutableList<Component>? = null","description":"dev.racci.minix.api.serializables.SerializableItemMeta.lore","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-item-meta/lore.html","searchKeys":["lore","var lore: ImmutableList<Component>? = null","dev.racci.minix.api.serializables.SerializableItemMeta.lore"]},{"name":"var meta: SerializableItemMeta? = null","description":"dev.racci.minix.api.serializables.SerializableItemStack.meta","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-item-stack/meta.html","searchKeys":["meta","var meta: SerializableItemMeta? = null","dev.racci.minix.api.serializables.SerializableItemStack.meta"]},{"name":"var metrics: Metrics? = null","description":"dev.racci.minix.api.plugin.PluginData.metrics","location":"Minix-API/dev.racci.minix.api.plugin/-plugin-data/metrics.html","searchKeys":["metrics","var metrics: Metrics? = null","dev.racci.minix.api.plugin.PluginData.metrics"]},{"name":"var name: String","description":"dev.racci.minix.api.serializables.SerializableAttributeModifier.name","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-attribute-modifier/name.html","searchKeys":["name","var name: String","dev.racci.minix.api.serializables.SerializableAttributeModifier.name"]},{"name":"var name: String? = null","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.name","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-file/name.html","searchKeys":["name","var name: String? = null","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.name"]},{"name":"var operation: AttributeModifier.Operation","description":"dev.racci.minix.api.serializables.SerializableAttributeModifier.operation","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-attribute-modifier/operation.html","searchKeys":["operation","var operation: AttributeModifier.Operation","dev.racci.minix.api.serializables.SerializableAttributeModifier.operation"]},{"name":"var owner: UUID? = null","description":"dev.racci.minix.api.serializables.SerializableSkullMeta.owner","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-skull-meta/owner.html","searchKeys":["owner","var owner: UUID? = null","dev.racci.minix.api.serializables.SerializableSkullMeta.owner"]},{"name":"var pluginInstance: Plugin? = null","description":"dev.racci.minix.api.data.PluginUpdater.pluginInstance","location":"Minix-API/dev.racci.minix.api.data/-plugin-updater/plugin-instance.html","searchKeys":["pluginInstance","var pluginInstance: Plugin? = null","dev.racci.minix.api.data.PluginUpdater.pluginInstance"]},{"name":"var providers: MutableList<UpdateProvider>","description":"dev.racci.minix.api.data.PluginUpdater.providers","location":"Minix-API/dev.racci.minix.api.data/-plugin-updater/providers.html","searchKeys":["providers","var providers: MutableList<UpdateProvider>","dev.racci.minix.api.data.PluginUpdater.providers"]},{"name":"var result: UpdateResult? = null","description":"dev.racci.minix.api.data.PluginUpdater.result","location":"Minix-API/dev.racci.minix.api.data/-plugin-updater/result.html","searchKeys":["result","var result: UpdateResult? = null","dev.racci.minix.api.data.PluginUpdater.result"]},{"name":"var sentAvailable: Boolean = false","description":"dev.racci.minix.api.data.PluginUpdater.sentAvailable","location":"Minix-API/dev.racci.minix.api.data/-plugin-updater/sent-available.html","searchKeys":["sentAvailable","var sentAvailable: Boolean = false","dev.racci.minix.api.data.PluginUpdater.sentAvailable"]},{"name":"var sentInfo: Boolean = false","description":"dev.racci.minix.api.data.PluginUpdater.sentInfo","location":"Minix-API/dev.racci.minix.api.data/-plugin-updater/sent-info.html","searchKeys":["sentInfo","var sentInfo: Boolean = false","dev.racci.minix.api.data.PluginUpdater.sentInfo"]},{"name":"var skullMeta: SerializableSkullMeta? = null","description":"dev.racci.minix.api.serializables.SerializableItemStack.skullMeta","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-item-stack/skull-meta.html","searchKeys":["skullMeta","var skullMeta: SerializableSkullMeta? = null","dev.racci.minix.api.serializables.SerializableItemStack.skullMeta"]},{"name":"var slot: EquipmentSlot? = null","description":"dev.racci.minix.api.serializables.SerializableAttributeModifier.slot","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-attribute-modifier/slot.html","searchKeys":["slot","var slot: EquipmentSlot? = null","dev.racci.minix.api.serializables.SerializableAttributeModifier.slot"]},{"name":"var spawnRadius: Int","description":"dev.racci.minix.api.extensions.spawnRadius","location":"Minix-API/dev.racci.minix.api.extensions/spawn-radius.html","searchKeys":["spawnRadius","var spawnRadius: Int","dev.racci.minix.api.extensions.spawnRadius"]},{"name":"var tag: String","description":"dev.racci.minix.api.serializables.SerializableItemStack.tag","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-item-stack/tag.html","searchKeys":["tag","var tag: String","dev.racci.minix.api.serializables.SerializableItemStack.tag"]},{"name":"var texture: String? = null","description":"dev.racci.minix.api.serializables.SerializableSkullMeta.texture","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-skull-meta/texture.html","searchKeys":["texture","var texture: String? = null","dev.racci.minix.api.serializables.SerializableSkullMeta.texture"]},{"name":"var to: Location","description":"dev.racci.minix.api.events.PlayerMoveFullXYZEvent.to","location":"Minix-API/dev.racci.minix.api.events/-player-move-full-x-y-z-event/to.html","searchKeys":["to","var to: Location","dev.racci.minix.api.events.PlayerMoveFullXYZEvent.to"]},{"name":"var to: Location","description":"dev.racci.minix.api.events.PlayerMoveXYZEvent.to","location":"Minix-API/dev.racci.minix.api.events/-player-move-x-y-z-event/to.html","searchKeys":["to","var to: Location","dev.racci.minix.api.events.PlayerMoveXYZEvent.to"]},{"name":"var type: Material? = null","description":"dev.racci.minix.api.serializables.SerializableItemStack.type","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-item-stack/type.html","searchKeys":["type","var type: Material? = null","dev.racci.minix.api.serializables.SerializableItemStack.type"]},{"name":"var unbreakable: Boolean = false","description":"dev.racci.minix.api.serializables.SerializableItemMeta.unbreakable","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-item-meta/unbreakable.html","searchKeys":["unbreakable","var unbreakable: Boolean = false","dev.racci.minix.api.serializables.SerializableItemMeta.unbreakable"]},{"name":"var updateMode: UpdateMode","description":"dev.racci.minix.api.data.PluginUpdater.updateMode","location":"Minix-API/dev.racci.minix.api.data/-plugin-updater/update-mode.html","searchKeys":["updateMode","var updateMode: UpdateMode","dev.racci.minix.api.data.PluginUpdater.updateMode"]},{"name":"var uuid: UUID","description":"dev.racci.minix.api.serializables.SerializableAttributeModifier.uuid","location":"Minix-API/dev.racci.minix.api.serializables/-serializable-attribute-modifier/uuid.html","searchKeys":["uuid","var uuid: UUID","dev.racci.minix.api.serializables.SerializableAttributeModifier.uuid"]},{"name":"var version: Version? = null","description":"dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.version","location":"Minix-API/dev.racci.minix.api.updater.providers/-update-provider/-update-file/version.html","searchKeys":["version","var version: Version? = null","dev.racci.minix.api.updater.providers.UpdateProvider.UpdateFile.version"]},{"name":"var whitelist: Boolean","description":"dev.racci.minix.api.extensions.whitelist","location":"Minix-API/dev.racci.minix.api.extensions/whitelist.html","searchKeys":["whitelist","var whitelist: Boolean","dev.racci.minix.api.extensions.whitelist"]},{"name":"class BackupConfig","description":"dev.racci.minix.core.data.UpdaterConfig.BackupConfig","location":"Minix-Core/dev.racci.minix.core.data/-updater-config/-backup-config/index.html","searchKeys":["BackupConfig","class BackupConfig","dev.racci.minix.core.data.UpdaterConfig.BackupConfig"]},{"name":"class BannerBuilderImpl : BaseItemBuilderImpl<BannerBuilder, BannerMeta> , BannerBuilder","description":"dev.racci.minix.core.builders.BannerBuilderImpl","location":"Minix-Core/dev.racci.minix.core.builders/-banner-builder-impl/index.html","searchKeys":["BannerBuilderImpl","class BannerBuilderImpl : BaseItemBuilderImpl<BannerBuilder, BannerMeta> , BannerBuilder","dev.racci.minix.core.builders.BannerBuilderImpl"]},{"name":"class BookBuilderImpl : BaseItemBuilderImpl<BookBuilder, BookMeta> , BookBuilder","description":"dev.racci.minix.core.builders.BookBuilderImpl","location":"Minix-Core/dev.racci.minix.core.builders/-book-builder-impl/index.html","searchKeys":["BookBuilderImpl","class BookBuilderImpl : BaseItemBuilderImpl<BookBuilder, BookMeta> , BookBuilder","dev.racci.minix.core.builders.BookBuilderImpl"]},{"name":"class CommandService(val plugin: Minix) : Extension<Minix> ","description":"dev.racci.minix.core.services.CommandService","location":"Minix-Core/dev.racci.minix.core.services/-command-service/index.html","searchKeys":["CommandService","class CommandService(val plugin: Minix) : Extension<Minix> ","dev.racci.minix.core.services.CommandService"]},{"name":"class ConfigData<P : MinixPlugin, T : MinixConfig<P>>(val kClass: KClass<T>)","description":"dev.racci.minix.core.services.DataServiceImpl.ConfigData","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-config-data/index.html","searchKeys":["ConfigData","class ConfigData<P : MinixPlugin, T : MinixConfig<P>>(val kClass: KClass<T>)","dev.racci.minix.core.services.DataServiceImpl.ConfigData"]},{"name":"class CoroutineSchedulerImpl(val plugin: Minix) : Extension<Minix> , CoroutineScheduler","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/index.html","searchKeys":["CoroutineSchedulerImpl","class CoroutineSchedulerImpl(val plugin: Minix) : Extension<Minix> , CoroutineScheduler","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl"]},{"name":"class CoroutineServiceImpl : CoroutineService","description":"dev.racci.minix.core.coroutine.impl.CoroutineServiceImpl","location":"Minix-Core/dev.racci.minix.core.coroutine.impl/-coroutine-service-impl/index.html","searchKeys":["CoroutineServiceImpl","class CoroutineServiceImpl : CoroutineService","dev.racci.minix.core.coroutine.impl.CoroutineServiceImpl"]},{"name":"class CoroutineTaskImpl(val owner: MinixPlugin) : CoroutineTask","description":"dev.racci.minix.core.scheduler.CoroutineTaskImpl","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-task-impl/index.html","searchKeys":["CoroutineTaskImpl","class CoroutineTaskImpl(val owner: MinixPlugin) : CoroutineTask","dev.racci.minix.core.scheduler.CoroutineTaskImpl"]},{"name":"class DataHolder(plugin: EntityID<String>) : Entity<String> ","description":"dev.racci.minix.core.services.DataServiceImpl.DataHolder","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-data-holder/index.html","searchKeys":["DataHolder","class DataHolder(plugin: EntityID<String>) : Entity<String> ","dev.racci.minix.core.services.DataServiceImpl.DataHolder"]},{"name":"class DataServiceImpl(val plugin: Minix) : DataService","description":"dev.racci.minix.core.services.DataServiceImpl","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/index.html","searchKeys":["DataServiceImpl","class DataServiceImpl(val plugin: Minix) : DataService","dev.racci.minix.core.services.DataServiceImpl"]},{"name":"class DummyLoader","description":"dev.racci.minix.core.DummyLoader","location":"Minix-Core/dev.racci.minix.core/-dummy-loader/index.html","searchKeys":["DummyLoader","class DummyLoader","dev.racci.minix.core.DummyLoader"]},{"name":"class FireworkBuilderImpl : BaseItemBuilderImpl<FireworkBuilder, FireworkMeta> , FireworkBuilder","description":"dev.racci.minix.core.builders.FireworkBuilderImpl","location":"Minix-Core/dev.racci.minix.core.builders/-firework-builder-impl/index.html","searchKeys":["FireworkBuilderImpl","class FireworkBuilderImpl : BaseItemBuilderImpl<FireworkBuilder, FireworkMeta> , FireworkBuilder","dev.racci.minix.core.builders.FireworkBuilderImpl"]},{"name":"class HeadBuilderImpl : BaseItemBuilderImpl<HeadBuilder, SkullMeta> , HeadBuilder","description":"dev.racci.minix.core.builders.HeadBuilderImpl","location":"Minix-Core/dev.racci.minix.core.builders/-head-builder-impl/index.html","searchKeys":["HeadBuilderImpl","class HeadBuilderImpl : BaseItemBuilderImpl<HeadBuilder, SkullMeta> , HeadBuilder","dev.racci.minix.core.builders.HeadBuilderImpl"]},{"name":"class ItemBuilderImpl : BaseItemBuilderImpl<ItemBuilder, ItemMeta> , ItemBuilder","description":"dev.racci.minix.core.builders.ItemBuilderImpl","location":"Minix-Core/dev.racci.minix.core.builders/-item-builder-impl/index.html","searchKeys":["ItemBuilderImpl","class ItemBuilderImpl : BaseItemBuilderImpl<ItemBuilder, ItemMeta> , ItemBuilder","dev.racci.minix.core.builders.ItemBuilderImpl"]},{"name":"class ListenerService(val plugin: Minix) : Extension<Minix> ","description":"dev.racci.minix.core.services.ListenerService","location":"Minix-Core/dev.racci.minix.core.services/-listener-service/index.html","searchKeys":["ListenerService","class ListenerService(val plugin: Minix) : Extension<Minix> ","dev.racci.minix.core.services.ListenerService"]},{"name":"class MapBuilderImpl : BaseItemBuilderImpl<MapBuilderImpl, MapMeta> , MapBuilder","description":"dev.racci.minix.core.builders.MapBuilderImpl","location":"Minix-Core/dev.racci.minix.core.builders/-map-builder-impl/index.html","searchKeys":["MapBuilderImpl","class MapBuilderImpl : BaseItemBuilderImpl<MapBuilderImpl, MapMeta> , MapBuilder","dev.racci.minix.core.builders.MapBuilderImpl"]},{"name":"class MinixConfig : KoinComponent","description":"dev.racci.minix.core.data.MinixConfig","location":"Minix-Core/dev.racci.minix.core.data/-minix-config/index.html","searchKeys":["MinixConfig","class MinixConfig : KoinComponent","dev.racci.minix.core.data.MinixConfig"]},{"name":"class MinixImpl : Minix","description":"dev.racci.minix.core.MinixImpl","location":"Minix-Core/dev.racci.minix.core/-minix-impl/index.html","searchKeys":["MinixImpl","class MinixImpl : Minix","dev.racci.minix.core.MinixImpl"]},{"name":"class PlayerServiceImpl(val plugin: Minix) : Extension<Minix> , PlayerService","description":"dev.racci.minix.core.services.PlayerServiceImpl","location":"Minix-Core/dev.racci.minix.core.services/-player-service-impl/index.html","searchKeys":["PlayerServiceImpl","class PlayerServiceImpl(val plugin: Minix) : Extension<Minix> , PlayerService","dev.racci.minix.core.services.PlayerServiceImpl"]},{"name":"class PluginServiceImpl(val minix: Minix) : PluginService, KoinComponent","description":"dev.racci.minix.core.services.PluginServiceImpl","location":"Minix-Core/dev.racci.minix.core.services/-plugin-service-impl/index.html","searchKeys":["PluginServiceImpl","class PluginServiceImpl(val minix: Minix) : PluginService, KoinComponent","dev.racci.minix.core.services.PluginServiceImpl"]},{"name":"class TimeService(val plugin: Minix) : Extension<Minix> ","description":"dev.racci.minix.core.services.TimeService","location":"Minix-Core/dev.racci.minix.core.services/-time-service/index.html","searchKeys":["TimeService","class TimeService(val plugin: Minix) : Extension<Minix> ","dev.racci.minix.core.services.TimeService"]},{"name":"class UpdaterConfig","description":"dev.racci.minix.core.data.UpdaterConfig","location":"Minix-Core/dev.racci.minix.core.data/-updater-config/index.html","searchKeys":["UpdaterConfig","class UpdaterConfig","dev.racci.minix.core.data.UpdaterConfig"]},{"name":"class UpdaterServiceImpl(val plugin: Minix) : Extension<Minix> , UpdaterService","description":"dev.racci.minix.core.services.UpdaterServiceImpl","location":"Minix-Core/dev.racci.minix.core.services/-updater-service-impl/index.html","searchKeys":["UpdaterServiceImpl","class UpdaterServiceImpl(val plugin: Minix) : Extension<Minix> , UpdaterService","dev.racci.minix.core.services.UpdaterServiceImpl"]},{"name":"class WakeUpBlockServiceImpl(plugin: MinixPlugin) : WakeUpBlockService","description":"dev.racci.minix.core.coroutine.service.WakeUpBlockServiceImpl","location":"Minix-Core/dev.racci.minix.core.coroutine.service/-wake-up-block-service-impl/index.html","searchKeys":["WakeUpBlockServiceImpl","class WakeUpBlockServiceImpl(plugin: MinixPlugin) : WakeUpBlockService","dev.racci.minix.core.coroutine.service.WakeUpBlockServiceImpl"]},{"name":"const val SCOPE: String","description":"dev.racci.minix.core.services.DataServiceImpl.Companion.SCOPE","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-companion/-s-c-o-p-e.html","searchKeys":["SCOPE","const val SCOPE: String","dev.racci.minix.core.services.DataServiceImpl.Companion.SCOPE"]},{"name":"const val SCOPE: String","description":"dev.racci.minix.core.services.PluginServiceImpl.Companion.SCOPE","location":"Minix-Core/dev.racci.minix.core.services/-plugin-service-impl/-companion/-s-c-o-p-e.html","searchKeys":["SCOPE","const val SCOPE: String","dev.racci.minix.core.services.PluginServiceImpl.Companion.SCOPE"]},{"name":"fun <T : MinixConfig<P>> ConfigData(kClass: KClass<T>)","description":"dev.racci.minix.core.services.DataServiceImpl.ConfigData.ConfigData","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-config-data/-config-data.html","searchKeys":["ConfigData","fun <T : MinixConfig<P>> ConfigData(kClass: KClass<T>)","dev.racci.minix.core.services.DataServiceImpl.ConfigData.ConfigData"]},{"name":"fun BackupConfig()","description":"dev.racci.minix.core.data.UpdaterConfig.BackupConfig.BackupConfig","location":"Minix-Core/dev.racci.minix.core.data/-updater-config/-backup-config/-backup-config.html","searchKeys":["BackupConfig","fun BackupConfig()","dev.racci.minix.core.data.UpdaterConfig.BackupConfig.BackupConfig"]},{"name":"fun CommandService(plugin: Minix)","description":"dev.racci.minix.core.services.CommandService.CommandService","location":"Minix-Core/dev.racci.minix.core.services/-command-service/-command-service.html","searchKeys":["CommandService","fun CommandService(plugin: Minix)","dev.racci.minix.core.services.CommandService.CommandService"]},{"name":"fun CoroutineSchedulerImpl(plugin: Minix)","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.CoroutineSchedulerImpl","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/-coroutine-scheduler-impl.html","searchKeys":["CoroutineSchedulerImpl","fun CoroutineSchedulerImpl(plugin: Minix)","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.CoroutineSchedulerImpl"]},{"name":"fun CoroutineServiceImpl()","description":"dev.racci.minix.core.coroutine.impl.CoroutineServiceImpl.CoroutineServiceImpl","location":"Minix-Core/dev.racci.minix.core.coroutine.impl/-coroutine-service-impl/-coroutine-service-impl.html","searchKeys":["CoroutineServiceImpl","fun CoroutineServiceImpl()","dev.racci.minix.core.coroutine.impl.CoroutineServiceImpl.CoroutineServiceImpl"]},{"name":"fun CoroutineTaskImpl(owner: MinixPlugin)","description":"dev.racci.minix.core.scheduler.CoroutineTaskImpl.CoroutineTaskImpl","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-task-impl/-coroutine-task-impl.html","searchKeys":["CoroutineTaskImpl","fun CoroutineTaskImpl(owner: MinixPlugin)","dev.racci.minix.core.scheduler.CoroutineTaskImpl.CoroutineTaskImpl"]},{"name":"fun CoroutineTaskImpl(plugin: MinixPlugin, runnable: CoroutineRunnable)","description":"dev.racci.minix.core.scheduler.CoroutineTaskImpl.CoroutineTaskImpl","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-task-impl/-coroutine-task-impl.html","searchKeys":["CoroutineTaskImpl","fun CoroutineTaskImpl(plugin: MinixPlugin, runnable: CoroutineRunnable)","dev.racci.minix.core.scheduler.CoroutineTaskImpl.CoroutineTaskImpl"]},{"name":"fun CoroutineTaskImpl(plugin: MinixPlugin, task: suspend (MinixPlugin, CoroutineScope) -> Unit)","description":"dev.racci.minix.core.scheduler.CoroutineTaskImpl.CoroutineTaskImpl","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-task-impl/-coroutine-task-impl.html","searchKeys":["CoroutineTaskImpl","fun CoroutineTaskImpl(plugin: MinixPlugin, task: suspend (MinixPlugin, CoroutineScope) -> Unit)","dev.racci.minix.core.scheduler.CoroutineTaskImpl.CoroutineTaskImpl"]},{"name":"fun DataHolder(plugin: EntityID<String>)","description":"dev.racci.minix.core.services.DataServiceImpl.DataHolder.DataHolder","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-data-holder/-data-holder.html","searchKeys":["DataHolder","fun DataHolder(plugin: EntityID<String>)","dev.racci.minix.core.services.DataServiceImpl.DataHolder.DataHolder"]},{"name":"fun DataServiceImpl(plugin: Minix)","description":"dev.racci.minix.core.services.DataServiceImpl.DataServiceImpl","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-data-service-impl.html","searchKeys":["DataServiceImpl","fun DataServiceImpl(plugin: Minix)","dev.racci.minix.core.services.DataServiceImpl.DataServiceImpl"]},{"name":"fun DummyLoader()","description":"dev.racci.minix.core.DummyLoader.DummyLoader","location":"Minix-Core/dev.racci.minix.core/-dummy-loader/-dummy-loader.html","searchKeys":["DummyLoader","fun DummyLoader()","dev.racci.minix.core.DummyLoader.DummyLoader"]},{"name":"fun Extension<*>.dependsOn(other: Extension<*>): Boolean","description":"dev.racci.minix.core.services.PluginServiceImpl.Companion.dependsOn","location":"Minix-Core/dev.racci.minix.core.services/-plugin-service-impl/-companion/depends-on.html","searchKeys":["dependsOn","fun Extension<*>.dependsOn(other: Extension<*>): Boolean","dev.racci.minix.core.services.PluginServiceImpl.Companion.dependsOn"]},{"name":"fun ListenerService(plugin: Minix)","description":"dev.racci.minix.core.services.ListenerService.ListenerService","location":"Minix-Core/dev.racci.minix.core.services/-listener-service/-listener-service.html","searchKeys":["ListenerService","fun ListenerService(plugin: Minix)","dev.racci.minix.core.services.ListenerService.ListenerService"]},{"name":"fun MinixConfig()","description":"dev.racci.minix.core.data.MinixConfig.MinixConfig","location":"Minix-Core/dev.racci.minix.core.data/-minix-config/-minix-config.html","searchKeys":["MinixConfig","fun MinixConfig()","dev.racci.minix.core.data.MinixConfig.MinixConfig"]},{"name":"fun MinixImpl()","description":"dev.racci.minix.core.MinixImpl.MinixImpl","location":"Minix-Core/dev.racci.minix.core/-minix-impl/-minix-impl.html","searchKeys":["MinixImpl","fun MinixImpl()","dev.racci.minix.core.MinixImpl.MinixImpl"]},{"name":"fun PlayerServiceImpl(plugin: Minix)","description":"dev.racci.minix.core.services.PlayerServiceImpl.PlayerServiceImpl","location":"Minix-Core/dev.racci.minix.core.services/-player-service-impl/-player-service-impl.html","searchKeys":["PlayerServiceImpl","fun PlayerServiceImpl(plugin: Minix)","dev.racci.minix.core.services.PlayerServiceImpl.PlayerServiceImpl"]},{"name":"fun PluginServiceImpl(minix: Minix)","description":"dev.racci.minix.core.services.PluginServiceImpl.PluginServiceImpl","location":"Minix-Core/dev.racci.minix.core.services/-plugin-service-impl/-plugin-service-impl.html","searchKeys":["PluginServiceImpl","fun PluginServiceImpl(minix: Minix)","dev.racci.minix.core.services.PluginServiceImpl.PluginServiceImpl"]},{"name":"fun TimeService(plugin: Minix)","description":"dev.racci.minix.core.services.TimeService.TimeService","location":"Minix-Core/dev.racci.minix.core.services/-time-service/-time-service.html","searchKeys":["TimeService","fun TimeService(plugin: Minix)","dev.racci.minix.core.services.TimeService.TimeService"]},{"name":"fun UpdaterConfig()","description":"dev.racci.minix.core.data.UpdaterConfig.UpdaterConfig","location":"Minix-Core/dev.racci.minix.core.data/-updater-config/-updater-config.html","searchKeys":["UpdaterConfig","fun UpdaterConfig()","dev.racci.minix.core.data.UpdaterConfig.UpdaterConfig"]},{"name":"fun UpdaterServiceImpl(plugin: Minix)","description":"dev.racci.minix.core.services.UpdaterServiceImpl.UpdaterServiceImpl","location":"Minix-Core/dev.racci.minix.core.services/-updater-service-impl/-updater-service-impl.html","searchKeys":["UpdaterServiceImpl","fun UpdaterServiceImpl(plugin: Minix)","dev.racci.minix.core.services.UpdaterServiceImpl.UpdaterServiceImpl"]},{"name":"fun WakeUpBlockServiceImpl(plugin: MinixPlugin)","description":"dev.racci.minix.core.coroutine.service.WakeUpBlockServiceImpl.WakeUpBlockServiceImpl","location":"Minix-Core/dev.racci.minix.core.coroutine.service/-wake-up-block-service-impl/-wake-up-block-service-impl.html","searchKeys":["WakeUpBlockServiceImpl","fun WakeUpBlockServiceImpl(plugin: MinixPlugin)","dev.racci.minix.core.coroutine.service.WakeUpBlockServiceImpl.WakeUpBlockServiceImpl"]},{"name":"fun cancel0(): Boolean","description":"dev.racci.minix.core.scheduler.CoroutineTaskImpl.cancel0","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-task-impl/cancel0.html","searchKeys":["cancel0","fun cancel0(): Boolean","dev.racci.minix.core.scheduler.CoroutineTaskImpl.cancel0"]},{"name":"fun getAllDependents(requiredExt: Extension<*>, allExtensions: List<Extension<MinixPlugin>>, currentDependents: HashSet<Extension<*>>): HashSet<Extension<*>>","description":"dev.racci.minix.core.services.PluginServiceImpl.Companion.getAllDependents","location":"Minix-Core/dev.racci.minix.core.services/-plugin-service-impl/-companion/get-all-dependents.html","searchKeys":["getAllDependents","fun getAllDependents(requiredExt: Extension<*>, allExtensions: List<Extension<MinixPlugin>>, currentDependents: HashSet<Extension<*>>): HashSet<Extension<*>>","dev.racci.minix.core.services.PluginServiceImpl.Companion.getAllDependents"]},{"name":"fun getOrNull(id: String): DataServiceImpl.DataHolder?","description":"dev.racci.minix.core.services.DataServiceImpl.DataHolder.Companion.getOrNull","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-data-holder/-companion/get-or-null.html","searchKeys":["getOrNull","fun getOrNull(id: String): DataServiceImpl.DataHolder?","dev.racci.minix.core.services.DataServiceImpl.DataHolder.Companion.getOrNull"]},{"name":"fun getOrNull(plugin: Plugin): DataServiceImpl.DataHolder?","description":"dev.racci.minix.core.services.DataServiceImpl.DataHolder.Companion.getOrNull","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-data-holder/-companion/get-or-null.html","searchKeys":["getOrNull","fun getOrNull(plugin: Plugin): DataServiceImpl.DataHolder?","dev.racci.minix.core.services.DataServiceImpl.DataHolder.Companion.getOrNull"]},{"name":"fun loadPlugin(description: PluginDescriptionFile, initPlugin: MinixInit, classLoader: PluginClassLoader)","description":"dev.racci.minix.core.DummyLoader.loadPlugin","location":"Minix-Core/dev.racci.minix.core/-dummy-loader/load-plugin.html","searchKeys":["loadPlugin","fun loadPlugin(description: PluginDescriptionFile, initPlugin: MinixInit, classLoader: PluginClassLoader)","dev.racci.minix.core.DummyLoader.loadPlugin"]},{"name":"fun save()","description":"dev.racci.minix.core.services.DataServiceImpl.ConfigData.save","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-config-data/save.html","searchKeys":["save","fun save()","dev.racci.minix.core.services.DataServiceImpl.ConfigData.save"]},{"name":"object Companion","description":"dev.racci.minix.core.services.PluginServiceImpl.Companion","location":"Minix-Core/dev.racci.minix.core.services/-plugin-service-impl/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.core.services.PluginServiceImpl.Companion"]},{"name":"object Companion","description":"dev.racci.minix.core.services.UpdaterServiceImpl.Companion","location":"Minix-Core/dev.racci.minix.core.services/-updater-service-impl/-companion/index.html","searchKeys":["Companion","object Companion","dev.racci.minix.core.services.UpdaterServiceImpl.Companion"]},{"name":"object Companion : EntityClass<String, DataServiceImpl.DataHolder> , KoinComponent","description":"dev.racci.minix.core.services.DataServiceImpl.DataHolder.Companion","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-data-holder/-companion/index.html","searchKeys":["Companion","object Companion : EntityClass<String, DataServiceImpl.DataHolder> , KoinComponent","dev.racci.minix.core.services.DataServiceImpl.DataHolder.Companion"]},{"name":"object Companion : Extension.ExtensionCompanion<DataServiceImpl> ","description":"dev.racci.minix.core.services.DataServiceImpl.Companion","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-companion/index.html","searchKeys":["Companion","object Companion : Extension.ExtensionCompanion<DataServiceImpl> ","dev.racci.minix.core.services.DataServiceImpl.Companion"]},{"name":"object Companion : Extension.ExtensionCompanion<PlayerServiceImpl> ","description":"dev.racci.minix.core.services.PlayerServiceImpl.Companion","location":"Minix-Core/dev.racci.minix.core.services/-player-service-impl/-companion/index.html","searchKeys":["Companion","object Companion : Extension.ExtensionCompanion<PlayerServiceImpl> ","dev.racci.minix.core.services.PlayerServiceImpl.Companion"]},{"name":"object Companion : ItemBuilderDSL","description":"dev.racci.minix.core.builders.ItemBuilderImpl.Companion","location":"Minix-Core/dev.racci.minix.core.builders/-item-builder-impl/-companion/index.html","searchKeys":["Companion","object Companion : ItemBuilderDSL","dev.racci.minix.core.builders.ItemBuilderImpl.Companion"]},{"name":"object PluginData : IdTable<String> ","description":"dev.racci.minix.core.services.DataServiceImpl.PluginData","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-plugin-data/index.html","searchKeys":["PluginData","object PluginData : IdTable<String> ","dev.racci.minix.core.services.DataServiceImpl.PluginData"]},{"name":"open class MinixInit : JavaPlugin","description":"dev.racci.minix.core.MinixInit","location":"Minix-Core/dev.racci.minix.core/-minix-init/index.html","searchKeys":["MinixInit","open class MinixInit : JavaPlugin","dev.racci.minix.core.MinixInit"]},{"name":"open class ReflectingInitializationException : RuntimeException","description":"dev.racci.minix.core.ReflectingInitializationException","location":"Minix-Core/dev.racci.minix.core/-reflecting-initialization-exception/index.html","searchKeys":["ReflectingInitializationException","open class ReflectingInitializationException : RuntimeException","dev.racci.minix.core.ReflectingInitializationException"]},{"name":"open fun ReflectingInitializationException(nested: Exception)","description":"dev.racci.minix.core.ReflectingInitializationException.ReflectingInitializationException","location":"Minix-Core/dev.racci.minix.core/-reflecting-initialization-exception/-reflecting-initialization-exception.html","searchKeys":["ReflectingInitializationException","open fun ReflectingInitializationException(nested: Exception)","dev.racci.minix.core.ReflectingInitializationException.ReflectingInitializationException"]},{"name":"open operator override fun <P : MinixPlugin> get(plugin: P): PluginData<P>","description":"dev.racci.minix.core.services.PluginServiceImpl.get","location":"Minix-Core/dev.racci.minix.core.services/-plugin-service-impl/get.html","searchKeys":["get","open operator override fun <P : MinixPlugin> get(plugin: P): PluginData<P>","dev.racci.minix.core.services.PluginServiceImpl.get"]},{"name":"open operator override fun minusAssign(uuid: UUID)","description":"dev.racci.minix.core.services.PlayerServiceImpl.minusAssign","location":"Minix-Core/dev.racci.minix.core.services/-player-service-impl/minus-assign.html","searchKeys":["minusAssign","open operator override fun minusAssign(uuid: UUID)","dev.racci.minix.core.services.PlayerServiceImpl.minusAssign"]},{"name":"open override fun <P : MinixPlugin, T : MinixConfig<P>> getConfig(kClass: KClass<T>): T?","description":"dev.racci.minix.core.services.DataServiceImpl.getConfig","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/get-config.html","searchKeys":["getConfig","open override fun <P : MinixPlugin, T : MinixConfig<P>> getConfig(kClass: KClass<T>): T?","dev.racci.minix.core.services.DataServiceImpl.getConfig"]},{"name":"open override fun Attribute.addModifier(vararg modifiers: AttributeModifier): B","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.addModifier","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/add-modifier.html","searchKeys":["addModifier","open override fun Attribute.addModifier(vararg modifiers: AttributeModifier): B","dev.racci.minix.core.builders.BaseItemBuilderImpl.addModifier"]},{"name":"open override fun Attribute.clearModifiers(): B","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.clearModifiers","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/clear-modifiers.html","searchKeys":["clearModifiers","open override fun Attribute.clearModifiers(): B","dev.racci.minix.core.builders.BaseItemBuilderImpl.clearModifiers"]},{"name":"open override fun Attribute.removeModifier(vararg modifiers: AttributeModifier): B","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.removeModifier","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/remove-modifier.html","searchKeys":["removeModifier","open override fun Attribute.removeModifier(vararg modifiers: AttributeModifier): B","dev.racci.minix.core.builders.BaseItemBuilderImpl.removeModifier"]},{"name":"open override fun activateTasks(plugin: MinixPlugin): IntArray?","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.activateTasks","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/activate-tasks.html","searchKeys":["activateTasks","open override fun activateTasks(plugin: MinixPlugin): IntArray?","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.activateTasks"]},{"name":"open override fun addEffects(vararg effects: FireworkEffect): FireworkBuilderImpl","description":"dev.racci.minix.core.builders.FireworkBuilderImpl.addEffects","location":"Minix-Core/dev.racci.minix.core.builders/-firework-builder-impl/add-effects.html","searchKeys":["addEffects","open override fun addEffects(vararg effects: FireworkEffect): FireworkBuilderImpl","dev.racci.minix.core.builders.FireworkBuilderImpl.addEffects"]},{"name":"open override fun addEnchant(vararg enchantments: Pair<Enchantment, Int>): B","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.addEnchant","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/add-enchant.html","searchKeys":["addEnchant","open override fun addEnchant(vararg enchantments: Pair<Enchantment, Int>): B","dev.racci.minix.core.builders.BaseItemBuilderImpl.addEnchant"]},{"name":"open override fun addFlag(vararg flags: ItemFlag): B","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.addFlag","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/add-flag.html","searchKeys":["addFlag","open override fun addFlag(vararg flags: ItemFlag): B","dev.racci.minix.core.builders.BaseItemBuilderImpl.addFlag"]},{"name":"open override fun addPage(vararg pages: Component): BookBuilder","description":"dev.racci.minix.core.builders.BookBuilderImpl.addPage","location":"Minix-Core/dev.racci.minix.core.builders/-book-builder-impl/add-page.html","searchKeys":["addPage","open override fun addPage(vararg pages: Component): BookBuilder","dev.racci.minix.core.builders.BookBuilderImpl.addPage"]},{"name":"open override fun addPattern(vararg pattern: Pattern): BannerBuilder","description":"dev.racci.minix.core.builders.BannerBuilderImpl.addPattern","location":"Minix-Core/dev.racci.minix.core.builders/-banner-builder-impl/add-pattern.html","searchKeys":["addPattern","open override fun addPattern(vararg pattern: Pattern): BannerBuilder","dev.racci.minix.core.builders.BannerBuilderImpl.addPattern"]},{"name":"open override fun async(): CoroutineTaskImpl","description":"dev.racci.minix.core.scheduler.CoroutineTaskImpl.async","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-task-impl/async.html","searchKeys":["async","open override fun async(): CoroutineTaskImpl","dev.racci.minix.core.scheduler.CoroutineTaskImpl.async"]},{"name":"open override fun banner(itemStack: ItemStack, builder: BannerBuilder.() -> Unit): ItemStack","description":"dev.racci.minix.core.builders.ItemBuilderImpl.Companion.banner","location":"Minix-Core/dev.racci.minix.core.builders/-item-builder-impl/-companion/banner.html","searchKeys":["banner","open override fun banner(itemStack: ItemStack, builder: BannerBuilder.() -> Unit): ItemStack","dev.racci.minix.core.builders.ItemBuilderImpl.Companion.banner"]},{"name":"open override fun book(itemStack: ItemStack, builder: BookBuilder.() -> Unit): ItemStack","description":"dev.racci.minix.core.builders.ItemBuilderImpl.Companion.book","location":"Minix-Core/dev.racci.minix.core.builders/-item-builder-impl/-companion/book.html","searchKeys":["book","open override fun book(itemStack: ItemStack, builder: BookBuilder.() -> Unit): ItemStack","dev.racci.minix.core.builders.ItemBuilderImpl.Companion.book"]},{"name":"open override fun build(): ItemStack","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.build","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/build.html","searchKeys":["build","open override fun build(): ItemStack","dev.racci.minix.core.builders.BaseItemBuilderImpl.build"]},{"name":"open override fun cancel(): Boolean","description":"dev.racci.minix.core.scheduler.CoroutineTaskImpl.cancel","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-task-impl/cancel.html","searchKeys":["cancel","open override fun cancel(): Boolean","dev.racci.minix.core.scheduler.CoroutineTaskImpl.cancel"]},{"name":"open override fun cancelTask(taskID: Int): Boolean","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.cancelTask","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/cancel-task.html","searchKeys":["cancelTask","open override fun cancelTask(taskID: Int): Boolean","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.cancelTask"]},{"name":"open override fun checkForUpdate(updater: PluginUpdater): Boolean","description":"dev.racci.minix.core.services.UpdaterServiceImpl.checkForUpdate","location":"Minix-Core/dev.racci.minix.core.services/-updater-service-impl/check-for-update.html","searchKeys":["checkForUpdate","open override fun checkForUpdate(updater: PluginUpdater): Boolean","dev.racci.minix.core.services.UpdaterServiceImpl.checkForUpdate"]},{"name":"open override fun disable(plugin: MinixPlugin)","description":"dev.racci.minix.core.coroutine.impl.CoroutineServiceImpl.disable","location":"Minix-Core/dev.racci.minix.core.coroutine.impl/-coroutine-service-impl/disable.html","searchKeys":["disable","open override fun disable(plugin: MinixPlugin)","dev.racci.minix.core.coroutine.impl.CoroutineServiceImpl.disable"]},{"name":"open override fun dispose()","description":"dev.racci.minix.core.coroutine.service.WakeUpBlockServiceImpl.dispose","location":"Minix-Core/dev.racci.minix.core.coroutine.service/-wake-up-block-service-impl/dispose.html","searchKeys":["dispose","open override fun dispose()","dev.racci.minix.core.coroutine.service.WakeUpBlockServiceImpl.dispose"]},{"name":"open override fun ensureWakeup()","description":"dev.racci.minix.core.coroutine.service.WakeUpBlockServiceImpl.ensureWakeup","location":"Minix-Core/dev.racci.minix.core.coroutine.service/-wake-up-block-service-impl/ensure-wakeup.html","searchKeys":["ensureWakeup","open override fun ensureWakeup()","dev.racci.minix.core.coroutine.service.WakeUpBlockServiceImpl.ensureWakeup"]},{"name":"open override fun firework(itemStack: ItemStack, builder: FireworkBuilder.() -> Unit): ItemStack","description":"dev.racci.minix.core.builders.ItemBuilderImpl.Companion.firework","location":"Minix-Core/dev.racci.minix.core.builders/-item-builder-impl/-companion/firework.html","searchKeys":["firework","open override fun firework(itemStack: ItemStack, builder: FireworkBuilder.() -> Unit): ItemStack","dev.racci.minix.core.builders.ItemBuilderImpl.Companion.firework"]},{"name":"open override fun firstNonMinixPlugin(): MinixPlugin?","description":"dev.racci.minix.core.services.PluginServiceImpl.firstNonMinixPlugin","location":"Minix-Core/dev.racci.minix.core.services/-plugin-service-impl/first-non-minix-plugin.html","searchKeys":["firstNonMinixPlugin","open override fun firstNonMinixPlugin(): MinixPlugin?","dev.racci.minix.core.services.PluginServiceImpl.firstNonMinixPlugin"]},{"name":"open override fun from(itemStack: ItemStack, builder: ItemBuilder.() -> Unit): ItemStack","description":"dev.racci.minix.core.builders.ItemBuilderImpl.Companion.from","location":"Minix-Core/dev.racci.minix.core.builders/-item-builder-impl/-companion/from.html","searchKeys":["from","open override fun from(itemStack: ItemStack, builder: ItemBuilder.() -> Unit): ItemStack","dev.racci.minix.core.builders.ItemBuilderImpl.Companion.from"]},{"name":"open override fun from(material: Material, builder: ItemBuilder.() -> Unit): ItemStack","description":"dev.racci.minix.core.builders.ItemBuilderImpl.Companion.from","location":"Minix-Core/dev.racci.minix.core.builders/-item-builder-impl/-companion/from.html","searchKeys":["from","open override fun from(material: Material, builder: ItemBuilder.() -> Unit): ItemStack","dev.racci.minix.core.builders.ItemBuilderImpl.Companion.from"]},{"name":"open override fun fromClassloader(classLoader: ClassLoader): MinixPlugin?","description":"dev.racci.minix.core.services.PluginServiceImpl.fromClassloader","location":"Minix-Core/dev.racci.minix.core.services/-plugin-service-impl/from-classloader.html","searchKeys":["fromClassloader","open override fun fromClassloader(classLoader: ClassLoader): MinixPlugin?","dev.racci.minix.core.services.PluginServiceImpl.fromClassloader"]},{"name":"open override fun getCoroutineSession(plugin: MinixPlugin): CoroutineSession","description":"dev.racci.minix.core.coroutine.impl.CoroutineServiceImpl.getCoroutineSession","location":"Minix-Core/dev.racci.minix.core.coroutine.impl/-coroutine-service-impl/get-coroutine-session.html","searchKeys":["getCoroutineSession","open override fun getCoroutineSession(plugin: MinixPlugin): CoroutineSession","dev.racci.minix.core.coroutine.impl.CoroutineServiceImpl.getCoroutineSession"]},{"name":"open override fun head(itemStack: ItemStack, builder: HeadBuilder.() -> Unit): ItemStack","description":"dev.racci.minix.core.builders.ItemBuilderImpl.Companion.head","location":"Minix-Core/dev.racci.minix.core.builders/-item-builder-impl/-companion/head.html","searchKeys":["head","open override fun head(itemStack: ItemStack, builder: HeadBuilder.() -> Unit): ItemStack","dev.racci.minix.core.builders.ItemBuilderImpl.Companion.head"]},{"name":"open override fun isCurrentlyRunning(taskID: Int): Boolean","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.isCurrentlyRunning","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/is-currently-running.html","searchKeys":["isCurrentlyRunning","open override fun isCurrentlyRunning(taskID: Int): Boolean","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.isCurrentlyRunning"]},{"name":"open override fun loadPlugin(plugin: MinixPlugin)","description":"dev.racci.minix.core.services.PluginServiceImpl.loadPlugin","location":"Minix-Core/dev.racci.minix.core.services/-plugin-service-impl/load-plugin.html","searchKeys":["loadPlugin","open override fun loadPlugin(plugin: MinixPlugin)","dev.racci.minix.core.services.PluginServiceImpl.loadPlugin"]},{"name":"open override fun lore(vararg component: Component): B","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.lore","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/lore.html","searchKeys":["lore","open override fun lore(vararg component: Component): B","dev.racci.minix.core.builders.BaseItemBuilderImpl.lore"]},{"name":"open override fun map(itemStack: ItemStack, builder: MapBuilder.() -> Unit): ItemStack","description":"dev.racci.minix.core.builders.ItemBuilderImpl.Companion.map","location":"Minix-Core/dev.racci.minix.core.builders/-item-builder-impl/-companion/map.html","searchKeys":["map","open override fun map(itemStack: ItemStack, builder: MapBuilder.() -> Unit): ItemStack","dev.racci.minix.core.builders.ItemBuilderImpl.Companion.map"]},{"name":"open override fun onLoad()","description":"dev.racci.minix.core.MinixImpl.onLoad","location":"Minix-Core/dev.racci.minix.core/-minix-impl/on-load.html","searchKeys":["onLoad","open override fun onLoad()","dev.racci.minix.core.MinixImpl.onLoad"]},{"name":"open override fun pdc(block: PDC.() -> Unit): B","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.pdc","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/pdc.html","searchKeys":["pdc","open override fun pdc(block: PDC.() -> Unit): B","dev.racci.minix.core.builders.BaseItemBuilderImpl.pdc"]},{"name":"open override fun remove(uuid: UUID): Boolean","description":"dev.racci.minix.core.services.PlayerServiceImpl.remove","location":"Minix-Core/dev.racci.minix.core.services/-player-service-impl/remove.html","searchKeys":["remove","open override fun remove(uuid: UUID): Boolean","dev.racci.minix.core.services.PlayerServiceImpl.remove"]},{"name":"open override fun removeEnchant(vararg enchantments: Enchantment): B","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.removeEnchant","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/remove-enchant.html","searchKeys":["removeEnchant","open override fun removeEnchant(vararg enchantments: Enchantment): B","dev.racci.minix.core.builders.BaseItemBuilderImpl.removeEnchant"]},{"name":"open override fun removeFlag(vararg flags: ItemFlag): B","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.removeFlag","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/remove-flag.html","searchKeys":["removeFlag","open override fun removeFlag(vararg flags: ItemFlag): B","dev.racci.minix.core.builders.BaseItemBuilderImpl.removeFlag"]},{"name":"open override fun runAsyncTask(plugin: MinixPlugin, coroutineTask: CoroutineTask): CoroutineTask","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runAsyncTask","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/run-async-task.html","searchKeys":["runAsyncTask","open override fun runAsyncTask(plugin: MinixPlugin, coroutineTask: CoroutineTask): CoroutineTask","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runAsyncTask"]},{"name":"open override fun runAsyncTask(plugin: MinixPlugin, name: String?, runnable: CoroutineRunnable): CoroutineTask","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runAsyncTask","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/run-async-task.html","searchKeys":["runAsyncTask","open override fun runAsyncTask(plugin: MinixPlugin, name: String?, runnable: CoroutineRunnable): CoroutineTask","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runAsyncTask"]},{"name":"open override fun runAsyncTask(plugin: MinixPlugin, name: String?, task: CoroutineBlock): CoroutineTask","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runAsyncTask","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/run-async-task.html","searchKeys":["runAsyncTask","open override fun runAsyncTask(plugin: MinixPlugin, name: String?, task: CoroutineBlock): CoroutineTask","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runAsyncTask"]},{"name":"open override fun runAsyncTaskLater(plugin: MinixPlugin, coroutineTask: CoroutineTask, delay: Duration): CoroutineTask","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runAsyncTaskLater","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/run-async-task-later.html","searchKeys":["runAsyncTaskLater","open override fun runAsyncTaskLater(plugin: MinixPlugin, coroutineTask: CoroutineTask, delay: Duration): CoroutineTask","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runAsyncTaskLater"]},{"name":"open override fun runAsyncTaskLater(plugin: MinixPlugin, name: String?, task: CoroutineBlock, delay: Duration): CoroutineTask","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runAsyncTaskLater","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/run-async-task-later.html","searchKeys":["runAsyncTaskLater","open override fun runAsyncTaskLater(plugin: MinixPlugin, name: String?, task: CoroutineBlock, delay: Duration): CoroutineTask","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runAsyncTaskLater"]},{"name":"open override fun runAsyncTaskLater(plugin: MinixPlugin, runnable: CoroutineRunnable, delay: Duration): CoroutineTask","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runAsyncTaskLater","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/run-async-task-later.html","searchKeys":["runAsyncTaskLater","open override fun runAsyncTaskLater(plugin: MinixPlugin, runnable: CoroutineRunnable, delay: Duration): CoroutineTask","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runAsyncTaskLater"]},{"name":"open override fun runAsyncTaskTimer(plugin: MinixPlugin, coroutineTask: CoroutineTask, delay: Duration, period: Duration): CoroutineTask","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runAsyncTaskTimer","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/run-async-task-timer.html","searchKeys":["runAsyncTaskTimer","open override fun runAsyncTaskTimer(plugin: MinixPlugin, coroutineTask: CoroutineTask, delay: Duration, period: Duration): CoroutineTask","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runAsyncTaskTimer"]},{"name":"open override fun runAsyncTaskTimer(plugin: MinixPlugin, name: String?, task: CoroutineBlock, delay: Duration, period: Duration): CoroutineTask","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runAsyncTaskTimer","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/run-async-task-timer.html","searchKeys":["runAsyncTaskTimer","open override fun runAsyncTaskTimer(plugin: MinixPlugin, name: String?, task: CoroutineBlock, delay: Duration, period: Duration): CoroutineTask","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runAsyncTaskTimer"]},{"name":"open override fun runAsyncTaskTimer(plugin: MinixPlugin, runnable: CoroutineRunnable, delay: Duration, period: Duration): CoroutineTask","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runAsyncTaskTimer","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/run-async-task-timer.html","searchKeys":["runAsyncTaskTimer","open override fun runAsyncTaskTimer(plugin: MinixPlugin, runnable: CoroutineRunnable, delay: Duration, period: Duration): CoroutineTask","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runAsyncTaskTimer"]},{"name":"open override fun runTask(plugin: MinixPlugin, coroutineTask: CoroutineTask): CoroutineTask","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runTask","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/run-task.html","searchKeys":["runTask","open override fun runTask(plugin: MinixPlugin, coroutineTask: CoroutineTask): CoroutineTask","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runTask"]},{"name":"open override fun runTask(plugin: MinixPlugin, name: String?, task: CoroutineBlock): CoroutineTask","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runTask","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/run-task.html","searchKeys":["runTask","open override fun runTask(plugin: MinixPlugin, name: String?, task: CoroutineBlock): CoroutineTask","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runTask"]},{"name":"open override fun runTask(plugin: MinixPlugin, runnable: CoroutineRunnable): CoroutineTask","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runTask","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/run-task.html","searchKeys":["runTask","open override fun runTask(plugin: MinixPlugin, runnable: CoroutineRunnable): CoroutineTask","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runTask"]},{"name":"open override fun runTaskLater(plugin: MinixPlugin, coroutineTask: CoroutineTask, delay: Duration): CoroutineTask","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runTaskLater","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/run-task-later.html","searchKeys":["runTaskLater","open override fun runTaskLater(plugin: MinixPlugin, coroutineTask: CoroutineTask, delay: Duration): CoroutineTask","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runTaskLater"]},{"name":"open override fun runTaskLater(plugin: MinixPlugin, name: String?, task: CoroutineBlock, delay: Duration): CoroutineTask","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runTaskLater","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/run-task-later.html","searchKeys":["runTaskLater","open override fun runTaskLater(plugin: MinixPlugin, name: String?, task: CoroutineBlock, delay: Duration): CoroutineTask","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runTaskLater"]},{"name":"open override fun runTaskLater(plugin: MinixPlugin, runnable: CoroutineRunnable, delay: Duration): CoroutineTask","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runTaskLater","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/run-task-later.html","searchKeys":["runTaskLater","open override fun runTaskLater(plugin: MinixPlugin, runnable: CoroutineRunnable, delay: Duration): CoroutineTask","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runTaskLater"]},{"name":"open override fun runTaskTimer(plugin: MinixPlugin, coroutineTask: CoroutineTask, delay: Duration, period: Duration): CoroutineTask","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runTaskTimer","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/run-task-timer.html","searchKeys":["runTaskTimer","open override fun runTaskTimer(plugin: MinixPlugin, coroutineTask: CoroutineTask, delay: Duration, period: Duration): CoroutineTask","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runTaskTimer"]},{"name":"open override fun runTaskTimer(plugin: MinixPlugin, name: String?, task: CoroutineBlock, delay: Duration, period: Duration): CoroutineTask","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runTaskTimer","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/run-task-timer.html","searchKeys":["runTaskTimer","open override fun runTaskTimer(plugin: MinixPlugin, name: String?, task: CoroutineBlock, delay: Duration, period: Duration): CoroutineTask","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runTaskTimer"]},{"name":"open override fun runTaskTimer(plugin: MinixPlugin, runnable: CoroutineRunnable, delay: Duration, period: Duration): CoroutineTask","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runTaskTimer","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/run-task-timer.html","searchKeys":["runTaskTimer","open override fun runTaskTimer(plugin: MinixPlugin, runnable: CoroutineRunnable, delay: Duration, period: Duration): CoroutineTask","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.runTaskTimer"]},{"name":"open override fun setPages(vararg pages: Pair<Int, Component>): BookBuilder","description":"dev.racci.minix.core.builders.BookBuilderImpl.setPages","location":"Minix-Core/dev.racci.minix.core.builders/-book-builder-impl/set-pages.html","searchKeys":["setPages","open override fun setPages(vararg pages: Pair<Int, Component>): BookBuilder","dev.racci.minix.core.builders.BookBuilderImpl.setPages"]},{"name":"open override fun shutdown(): Boolean","description":"dev.racci.minix.core.scheduler.CoroutineTaskImpl.shutdown","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-task-impl/shutdown.html","searchKeys":["shutdown","open override fun shutdown(): Boolean","dev.racci.minix.core.scheduler.CoroutineTaskImpl.shutdown"]},{"name":"open override fun startPlugin(plugin: MinixPlugin)","description":"dev.racci.minix.core.services.PluginServiceImpl.startPlugin","location":"Minix-Core/dev.racci.minix.core.services/-plugin-service-impl/start-plugin.html","searchKeys":["startPlugin","open override fun startPlugin(plugin: MinixPlugin)","dev.racci.minix.core.services.PluginServiceImpl.startPlugin"]},{"name":"open override fun sync(): CoroutineTaskImpl","description":"dev.racci.minix.core.scheduler.CoroutineTaskImpl.sync","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-task-impl/sync.html","searchKeys":["sync","open override fun sync(): CoroutineTaskImpl","dev.racci.minix.core.scheduler.CoroutineTaskImpl.sync"]},{"name":"open override fun toString(): String","description":"dev.racci.minix.core.data.UpdaterConfig.BackupConfig.toString","location":"Minix-Core/dev.racci.minix.core.data/-updater-config/-backup-config/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.racci.minix.core.data.UpdaterConfig.BackupConfig.toString"]},{"name":"open override fun toString(): String","description":"dev.racci.minix.core.data.UpdaterConfig.toString","location":"Minix-Core/dev.racci.minix.core.data/-updater-config/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.racci.minix.core.data.UpdaterConfig.toString"]},{"name":"open override fun unloadPlugin(plugin: MinixPlugin)","description":"dev.racci.minix.core.services.PluginServiceImpl.unloadPlugin","location":"Minix-Core/dev.racci.minix.core.services/-plugin-service-impl/unload-plugin.html","searchKeys":["unloadPlugin","open override fun unloadPlugin(plugin: MinixPlugin)","dev.racci.minix.core.services.PluginServiceImpl.unloadPlugin"]},{"name":"open override val coroutineSession: LoadingCache<MinixPlugin, CoroutineSession>","description":"dev.racci.minix.core.services.PluginServiceImpl.coroutineSession","location":"Minix-Core/dev.racci.minix.core.services/-plugin-service-impl/coroutine-session.html","searchKeys":["coroutineSession","open override val coroutineSession: LoadingCache<MinixPlugin, CoroutineSession>","dev.racci.minix.core.services.PluginServiceImpl.coroutineSession"]},{"name":"open override val disabledUpdaters: MutableList<PluginUpdater>","description":"dev.racci.minix.core.services.UpdaterServiceImpl.disabledUpdaters","location":"Minix-Core/dev.racci.minix.core.services/-updater-service-impl/disabled-updaters.html","searchKeys":["disabledUpdaters","open override val disabledUpdaters: MutableList<PluginUpdater>","dev.racci.minix.core.services.UpdaterServiceImpl.disabledUpdaters"]},{"name":"open override val enabledUpdaters: MutableList<PluginUpdater>","description":"dev.racci.minix.core.services.UpdaterServiceImpl.enabledUpdaters","location":"Minix-Core/dev.racci.minix.core.services/-updater-service-impl/enabled-updaters.html","searchKeys":["enabledUpdaters","open override val enabledUpdaters: MutableList<PluginUpdater>","dev.racci.minix.core.services.UpdaterServiceImpl.enabledUpdaters"]},{"name":"open override val functionsMove: OnlinePlayerMap<PlayerUtils.PlayerCallback<Boolean>>","description":"dev.racci.minix.core.services.PlayerServiceImpl.functionsMove","location":"Minix-Core/dev.racci.minix.core.services/-player-service-impl/functions-move.html","searchKeys":["functionsMove","open override val functionsMove: OnlinePlayerMap<PlayerUtils.PlayerCallback<Boolean>>","dev.racci.minix.core.services.PlayerServiceImpl.functionsMove"]},{"name":"open override val functionsQuit: OnlinePlayerMap<PlayerUtils.PlayerCallback<Unit>>","description":"dev.racci.minix.core.services.PlayerServiceImpl.functionsQuit","location":"Minix-Core/dev.racci.minix.core.services/-player-service-impl/functions-quit.html","searchKeys":["functionsQuit","open override val functionsQuit: OnlinePlayerMap<PlayerUtils.PlayerCallback<Unit>>","dev.racci.minix.core.services.PlayerServiceImpl.functionsQuit"]},{"name":"open override val id: Column<EntityID<String>>","description":"dev.racci.minix.core.services.DataServiceImpl.PluginData.id","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-plugin-data/id.html","searchKeys":["id","open override val id: Column<EntityID<String>>","dev.racci.minix.core.services.DataServiceImpl.PluginData.id"]},{"name":"open override val inputCallbacks: OnlinePlayerMap<PlayerUtils.ChatInput>","description":"dev.racci.minix.core.services.PlayerServiceImpl.inputCallbacks","location":"Minix-Core/dev.racci.minix.core.services/-player-service-impl/input-callbacks.html","searchKeys":["inputCallbacks","open override val inputCallbacks: OnlinePlayerMap<PlayerUtils.ChatInput>","dev.racci.minix.core.services.PlayerServiceImpl.inputCallbacks"]},{"name":"open override val loadedPlugins: MutableMap<KClass<out MinixPlugin>, MinixPlugin>","description":"dev.racci.minix.core.services.PluginServiceImpl.loadedPlugins","location":"Minix-Core/dev.racci.minix.core.services/-plugin-service-impl/loaded-plugins.html","searchKeys":["loadedPlugins","open override val loadedPlugins: MutableMap<KClass<out MinixPlugin>, MinixPlugin>","dev.racci.minix.core.services.PluginServiceImpl.loadedPlugins"]},{"name":"open override val owner: MinixPlugin","description":"dev.racci.minix.core.scheduler.CoroutineTaskImpl.owner","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-task-impl/owner.html","searchKeys":["owner","open override val owner: MinixPlugin","dev.racci.minix.core.scheduler.CoroutineTaskImpl.owner"]},{"name":"open override val parentJob: CompletableJob","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.parentJob","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/parent-job.html","searchKeys":["parentJob","open override val parentJob: CompletableJob","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.parentJob"]},{"name":"open override val plugin: Minix","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.plugin","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/plugin.html","searchKeys":["plugin","open override val plugin: Minix","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.plugin"]},{"name":"open override val plugin: Minix","description":"dev.racci.minix.core.services.CommandService.plugin","location":"Minix-Core/dev.racci.minix.core.services/-command-service/plugin.html","searchKeys":["plugin","open override val plugin: Minix","dev.racci.minix.core.services.CommandService.plugin"]},{"name":"open override val plugin: Minix","description":"dev.racci.minix.core.services.DataServiceImpl.plugin","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/plugin.html","searchKeys":["plugin","open override val plugin: Minix","dev.racci.minix.core.services.DataServiceImpl.plugin"]},{"name":"open override val plugin: Minix","description":"dev.racci.minix.core.services.ListenerService.plugin","location":"Minix-Core/dev.racci.minix.core.services/-listener-service/plugin.html","searchKeys":["plugin","open override val plugin: Minix","dev.racci.minix.core.services.ListenerService.plugin"]},{"name":"open override val plugin: Minix","description":"dev.racci.minix.core.services.PlayerServiceImpl.plugin","location":"Minix-Core/dev.racci.minix.core.services/-player-service-impl/plugin.html","searchKeys":["plugin","open override val plugin: Minix","dev.racci.minix.core.services.PlayerServiceImpl.plugin"]},{"name":"open override val plugin: Minix","description":"dev.racci.minix.core.services.TimeService.plugin","location":"Minix-Core/dev.racci.minix.core.services/-time-service/plugin.html","searchKeys":["plugin","open override val plugin: Minix","dev.racci.minix.core.services.TimeService.plugin"]},{"name":"open override val plugin: Minix","description":"dev.racci.minix.core.services.UpdaterServiceImpl.plugin","location":"Minix-Core/dev.racci.minix.core.services/-updater-service-impl/plugin.html","searchKeys":["plugin","open override val plugin: Minix","dev.racci.minix.core.services.UpdaterServiceImpl.plugin"]},{"name":"open override val pluginCache: LoadingCache<MinixPlugin, PluginData<MinixPlugin>>","description":"dev.racci.minix.core.services.PluginServiceImpl.pluginCache","location":"Minix-Core/dev.racci.minix.core.services/-plugin-service-impl/plugin-cache.html","searchKeys":["pluginCache","open override val pluginCache: LoadingCache<MinixPlugin, PluginData<MinixPlugin>>","dev.racci.minix.core.services.PluginServiceImpl.pluginCache"]},{"name":"open override val primaryThread: Thread","description":"dev.racci.minix.core.coroutine.service.WakeUpBlockServiceImpl.primaryThread","location":"Minix-Core/dev.racci.minix.core.coroutine.service/-wake-up-block-service-impl/primary-thread.html","searchKeys":["primaryThread","open override val primaryThread: Thread","dev.racci.minix.core.coroutine.service.WakeUpBlockServiceImpl.primaryThread"]},{"name":"open override val updater: PluginUpdater","description":"dev.racci.minix.core.MinixImpl.updater","location":"Minix-Core/dev.racci.minix.core/-minix-impl/updater.html","searchKeys":["updater","open override val updater: PluginUpdater","dev.racci.minix.core.MinixImpl.updater"]},{"name":"open override var amount: Int","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.amount","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/amount.html","searchKeys":["amount","open override var amount: Int","dev.racci.minix.core.builders.BaseItemBuilderImpl.amount"]},{"name":"open override var attributeModifiers: Multimap<Attribute, AttributeModifier>?","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.attributeModifiers","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/attribute-modifiers.html","searchKeys":["attributeModifiers","open override var attributeModifiers: Multimap<Attribute, AttributeModifier>?","dev.racci.minix.core.builders.BaseItemBuilderImpl.attributeModifiers"]},{"name":"open override var author: Component?","description":"dev.racci.minix.core.builders.BookBuilderImpl.author","location":"Minix-Core/dev.racci.minix.core.builders/-book-builder-impl/author.html","searchKeys":["author","open override var author: Component?","dev.racci.minix.core.builders.BookBuilderImpl.author"]},{"name":"open override var baseColour: Material","description":"dev.racci.minix.core.builders.BannerBuilderImpl.baseColour","location":"Minix-Core/dev.racci.minix.core.builders/-banner-builder-impl/base-colour.html","searchKeys":["baseColour","open override var baseColour: Material","dev.racci.minix.core.builders.BannerBuilderImpl.baseColour"]},{"name":"open override var colour: Color?","description":"dev.racci.minix.core.builders.MapBuilderImpl.colour","location":"Minix-Core/dev.racci.minix.core.builders/-map-builder-impl/colour.html","searchKeys":["colour","open override var colour: Color?","dev.racci.minix.core.builders.MapBuilderImpl.colour"]},{"name":"open override var destroyableKeys: Set<Namespaced>","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.destroyableKeys","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/destroyable-keys.html","searchKeys":["destroyableKeys","open override var destroyableKeys: Set<Namespaced>","dev.racci.minix.core.builders.BaseItemBuilderImpl.destroyableKeys"]},{"name":"open override var effects: List<FireworkEffect>","description":"dev.racci.minix.core.builders.FireworkBuilderImpl.effects","location":"Minix-Core/dev.racci.minix.core.builders/-firework-builder-impl/effects.html","searchKeys":["effects","open override var effects: List<FireworkEffect>","dev.racci.minix.core.builders.FireworkBuilderImpl.effects"]},{"name":"open override var generation: BookMeta.Generation?","description":"dev.racci.minix.core.builders.BookBuilderImpl.generation","location":"Minix-Core/dev.racci.minix.core.builders/-book-builder-impl/generation.html","searchKeys":["generation","open override var generation: BookMeta.Generation?","dev.racci.minix.core.builders.BookBuilderImpl.generation"]},{"name":"open override var glowing: Boolean","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.glowing","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/glowing.html","searchKeys":["glowing","open override var glowing: Boolean","dev.racci.minix.core.builders.BaseItemBuilderImpl.glowing"]},{"name":"open override var isManipulatedServerHeartBeatEnabled: Boolean = false","description":"dev.racci.minix.core.coroutine.service.WakeUpBlockServiceImpl.isManipulatedServerHeartBeatEnabled","location":"Minix-Core/dev.racci.minix.core.coroutine.service/-wake-up-block-service-impl/is-manipulated-server-heart-beat-enabled.html","searchKeys":["isManipulatedServerHeartBeatEnabled","open override var isManipulatedServerHeartBeatEnabled: Boolean = false","dev.racci.minix.core.coroutine.service.WakeUpBlockServiceImpl.isManipulatedServerHeartBeatEnabled"]},{"name":"open override var isUnbreakable: Boolean","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.isUnbreakable","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/is-unbreakable.html","searchKeys":["isUnbreakable","open override var isUnbreakable: Boolean","dev.racci.minix.core.builders.BaseItemBuilderImpl.isUnbreakable"]},{"name":"open override var itemFlags: Set<ItemFlag>","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.itemFlags","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/item-flags.html","searchKeys":["itemFlags","open override var itemFlags: Set<ItemFlag>","dev.racci.minix.core.builders.BaseItemBuilderImpl.itemFlags"]},{"name":"open override var itemStack: ItemStack","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.itemStack","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/item-stack.html","searchKeys":["itemStack","open override var itemStack: ItemStack","dev.racci.minix.core.builders.BaseItemBuilderImpl.itemStack"]},{"name":"open override var job: Job","description":"dev.racci.minix.core.scheduler.CoroutineTaskImpl.job","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-task-impl/job.html","searchKeys":["job","open override var job: Job","dev.racci.minix.core.scheduler.CoroutineTaskImpl.job"]},{"name":"open override var keepRunning: AtomicBoolean","description":"dev.racci.minix.core.scheduler.CoroutineTaskImpl.keepRunning","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-task-impl/keep-running.html","searchKeys":["keepRunning","open override var keepRunning: AtomicBoolean","dev.racci.minix.core.scheduler.CoroutineTaskImpl.keepRunning"]},{"name":"open override var locName: String?","description":"dev.racci.minix.core.builders.MapBuilderImpl.locName","location":"Minix-Core/dev.racci.minix.core.builders/-map-builder-impl/loc-name.html","searchKeys":["locName","open override var locName: String?","dev.racci.minix.core.builders.MapBuilderImpl.locName"]},{"name":"open override var lore: List<Component>","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.lore","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/lore.html","searchKeys":["lore","open override var lore: List<Component>","dev.racci.minix.core.builders.BaseItemBuilderImpl.lore"]},{"name":"open override var meta: M","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.meta","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/meta.html","searchKeys":["meta","open override var meta: M","dev.racci.minix.core.builders.BaseItemBuilderImpl.meta"]},{"name":"open override var model: Int?","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.model","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/model.html","searchKeys":["model","open override var model: Int?","dev.racci.minix.core.builders.BaseItemBuilderImpl.model"]},{"name":"open override var name: Component?","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.name","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/name.html","searchKeys":["name","open override var name: Component?","dev.racci.minix.core.builders.BaseItemBuilderImpl.name"]},{"name":"open override var name: String","description":"dev.racci.minix.core.scheduler.CoroutineTaskImpl.name","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-task-impl/name.html","searchKeys":["name","open override var name: String","dev.racci.minix.core.scheduler.CoroutineTaskImpl.name"]},{"name":"open override var owner: OfflinePlayer?","description":"dev.racci.minix.core.builders.HeadBuilderImpl.owner","location":"Minix-Core/dev.racci.minix.core.builders/-head-builder-impl/owner.html","searchKeys":["owner","open override var owner: OfflinePlayer?","dev.racci.minix.core.builders.HeadBuilderImpl.owner"]},{"name":"open override var patterns: List<Pattern>","description":"dev.racci.minix.core.builders.BannerBuilderImpl.patterns","location":"Minix-Core/dev.racci.minix.core.builders/-banner-builder-impl/patterns.html","searchKeys":["patterns","open override var patterns: List<Pattern>","dev.racci.minix.core.builders.BannerBuilderImpl.patterns"]},{"name":"open override var period: Duration? = null","description":"dev.racci.minix.core.scheduler.CoroutineTaskImpl.period","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-task-impl/period.html","searchKeys":["period","open override var period: Duration? = null","dev.racci.minix.core.scheduler.CoroutineTaskImpl.period"]},{"name":"open override var placeableKeys: Set<Namespaced>","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl.placeableKeys","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/placeable-keys.html","searchKeys":["placeableKeys","open override var placeableKeys: Set<Namespaced>","dev.racci.minix.core.builders.BaseItemBuilderImpl.placeableKeys"]},{"name":"open override var playerProfiler: PlayerProfile?","description":"dev.racci.minix.core.builders.HeadBuilderImpl.playerProfiler","location":"Minix-Core/dev.racci.minix.core.builders/-head-builder-impl/player-profiler.html","searchKeys":["playerProfiler","open override var playerProfiler: PlayerProfile?","dev.racci.minix.core.builders.HeadBuilderImpl.playerProfiler"]},{"name":"open override var power: Int","description":"dev.racci.minix.core.builders.FireworkBuilderImpl.power","location":"Minix-Core/dev.racci.minix.core.builders/-firework-builder-impl/power.html","searchKeys":["power","open override var power: Int","dev.racci.minix.core.builders.FireworkBuilderImpl.power"]},{"name":"open override var runnable: CoroutineRunnable? = null","description":"dev.racci.minix.core.scheduler.CoroutineTaskImpl.runnable","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-task-impl/runnable.html","searchKeys":["runnable","open override var runnable: CoroutineRunnable? = null","dev.racci.minix.core.scheduler.CoroutineTaskImpl.runnable"]},{"name":"open override var scaling: Boolean","description":"dev.racci.minix.core.builders.MapBuilderImpl.scaling","location":"Minix-Core/dev.racci.minix.core.builders/-map-builder-impl/scaling.html","searchKeys":["scaling","open override var scaling: Boolean","dev.racci.minix.core.builders.MapBuilderImpl.scaling"]},{"name":"open override var task: suspend (MinixPlugin, CoroutineScope) -> Unit","description":"dev.racci.minix.core.scheduler.CoroutineTaskImpl.task","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-task-impl/task.html","searchKeys":["task","open override var task: suspend (MinixPlugin, CoroutineScope) -> Unit","dev.racci.minix.core.scheduler.CoroutineTaskImpl.task"]},{"name":"open override var taskID: Int","description":"dev.racci.minix.core.scheduler.CoroutineTaskImpl.taskID","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-task-impl/task-i-d.html","searchKeys":["taskID","open override var taskID: Int","dev.racci.minix.core.scheduler.CoroutineTaskImpl.taskID"]},{"name":"open override var texture: String","description":"dev.racci.minix.core.builders.HeadBuilderImpl.texture","location":"Minix-Core/dev.racci.minix.core.builders/-head-builder-impl/texture.html","searchKeys":["texture","open override var texture: String","dev.racci.minix.core.builders.HeadBuilderImpl.texture"]},{"name":"open override var title: Component?","description":"dev.racci.minix.core.builders.BookBuilderImpl.title","location":"Minix-Core/dev.racci.minix.core.builders/-book-builder-impl/title.html","searchKeys":["title","open override var title: Component?","dev.racci.minix.core.builders.BookBuilderImpl.title"]},{"name":"open override var view: MapView?","description":"dev.racci.minix.core.builders.MapBuilderImpl.view","location":"Minix-Core/dev.racci.minix.core.builders/-map-builder-impl/view.html","searchKeys":["view","open override var view: MapView?","dev.racci.minix.core.builders.MapBuilderImpl.view"]},{"name":"open suspend override fun handleDisable()","description":"dev.racci.minix.core.MinixImpl.handleDisable","location":"Minix-Core/dev.racci.minix.core/-minix-impl/handle-disable.html","searchKeys":["handleDisable","open suspend override fun handleDisable()","dev.racci.minix.core.MinixImpl.handleDisable"]},{"name":"open suspend override fun handleEnable()","description":"dev.racci.minix.core.MinixImpl.handleEnable","location":"Minix-Core/dev.racci.minix.core/-minix-impl/handle-enable.html","searchKeys":["handleEnable","open suspend override fun handleEnable()","dev.racci.minix.core.MinixImpl.handleEnable"]},{"name":"open suspend override fun handleEnable()","description":"dev.racci.minix.core.services.ListenerService.handleEnable","location":"Minix-Core/dev.racci.minix.core.services/-listener-service/handle-enable.html","searchKeys":["handleEnable","open suspend override fun handleEnable()","dev.racci.minix.core.services.ListenerService.handleEnable"]},{"name":"open suspend override fun handleEnable()","description":"dev.racci.minix.core.services.PlayerServiceImpl.handleEnable","location":"Minix-Core/dev.racci.minix.core.services/-player-service-impl/handle-enable.html","searchKeys":["handleEnable","open suspend override fun handleEnable()","dev.racci.minix.core.services.PlayerServiceImpl.handleEnable"]},{"name":"open suspend override fun handleEnable()","description":"dev.racci.minix.core.services.TimeService.handleEnable","location":"Minix-Core/dev.racci.minix.core.services/-time-service/handle-enable.html","searchKeys":["handleEnable","open suspend override fun handleEnable()","dev.racci.minix.core.services.TimeService.handleEnable"]},{"name":"open suspend override fun handleEnable()","description":"dev.racci.minix.core.services.UpdaterServiceImpl.handleEnable","location":"Minix-Core/dev.racci.minix.core.services/-updater-service-impl/handle-enable.html","searchKeys":["handleEnable","open suspend override fun handleEnable()","dev.racci.minix.core.services.UpdaterServiceImpl.handleEnable"]},{"name":"open suspend override fun handleLoad()","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.handleLoad","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/handle-load.html","searchKeys":["handleLoad","open suspend override fun handleLoad()","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.handleLoad"]},{"name":"open suspend override fun handleLoad()","description":"dev.racci.minix.core.services.DataServiceImpl.handleLoad","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/handle-load.html","searchKeys":["handleLoad","open suspend override fun handleLoad()","dev.racci.minix.core.services.DataServiceImpl.handleLoad"]},{"name":"open suspend override fun handleLoad()","description":"dev.racci.minix.core.services.UpdaterServiceImpl.handleLoad","location":"Minix-Core/dev.racci.minix.core.services/-updater-service-impl/handle-load.html","searchKeys":["handleLoad","open suspend override fun handleLoad()","dev.racci.minix.core.services.UpdaterServiceImpl.handleLoad"]},{"name":"open suspend override fun handleUnload()","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.handleUnload","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/handle-unload.html","searchKeys":["handleUnload","open suspend override fun handleUnload()","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.handleUnload"]},{"name":"open suspend override fun handleUnload()","description":"dev.racci.minix.core.services.DataServiceImpl.handleUnload","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/handle-unload.html","searchKeys":["handleUnload","open suspend override fun handleUnload()","dev.racci.minix.core.services.DataServiceImpl.handleUnload"]},{"name":"open suspend override fun handleUnload()","description":"dev.racci.minix.core.services.PlayerServiceImpl.handleUnload","location":"Minix-Core/dev.racci.minix.core.services/-player-service-impl/handle-unload.html","searchKeys":["handleUnload","open suspend override fun handleUnload()","dev.racci.minix.core.services.PlayerServiceImpl.handleUnload"]},{"name":"open suspend override fun shutdownTask(taskID: Int): Boolean","description":"dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.shutdownTask","location":"Minix-Core/dev.racci.minix.core.scheduler/-coroutine-scheduler-impl/shutdown-task.html","searchKeys":["shutdownTask","open suspend override fun shutdownTask(taskID: Int): Boolean","dev.racci.minix.core.scheduler.CoroutineSchedulerImpl.shutdownTask"]},{"name":"open suspend override fun tryUpdate(updater: PluginUpdater): UpdateResult","description":"dev.racci.minix.core.services.UpdaterServiceImpl.tryUpdate","location":"Minix-Core/dev.racci.minix.core.services/-updater-service-impl/try-update.html","searchKeys":["tryUpdate","open suspend override fun tryUpdate(updater: PluginUpdater): UpdateResult","dev.racci.minix.core.services.UpdaterServiceImpl.tryUpdate"]},{"name":"operator fun get(plugin: Plugin): DataServiceImpl.DataHolder","description":"dev.racci.minix.core.services.DataServiceImpl.DataHolder.Companion.get","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-data-holder/-companion/get.html","searchKeys":["get","operator fun get(plugin: Plugin): DataServiceImpl.DataHolder","dev.racci.minix.core.services.DataServiceImpl.DataHolder.Companion.get"]},{"name":"operator fun get(uuid: UUID): PlayerData","description":"dev.racci.minix.core.services.PlayerServiceImpl.get","location":"Minix-Core/dev.racci.minix.core.services/-player-service-impl/get.html","searchKeys":["get","operator fun get(uuid: UUID): PlayerData","dev.racci.minix.core.services.PlayerServiceImpl.get"]},{"name":"sealed class BaseItemBuilderImpl<B : BaseItemBuilder<B, M>, M : ItemMeta> : BaseItemBuilder<B, M> ","description":"dev.racci.minix.core.builders.BaseItemBuilderImpl","location":"Minix-Core/dev.racci.minix.core.builders/-base-item-builder-impl/index.html","searchKeys":["BaseItemBuilderImpl","sealed class BaseItemBuilderImpl<B : BaseItemBuilder<B, M>, M : ItemMeta> : BaseItemBuilder<B, M> ","dev.racci.minix.core.builders.BaseItemBuilderImpl"]},{"name":"val configDataHolder: LoadingCache<KClass<MinixConfig<MinixPlugin>>, DataServiceImpl.ConfigData<MinixPlugin, MinixConfig<MinixPlugin>>>","description":"dev.racci.minix.core.services.DataServiceImpl.configDataHolder","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/config-data-holder.html","searchKeys":["configDataHolder","val configDataHolder: LoadingCache<KClass<MinixConfig<MinixPlugin>>, DataServiceImpl.ConfigData<MinixPlugin, MinixConfig<MinixPlugin>>>","dev.racci.minix.core.services.DataServiceImpl.configDataHolder"]},{"name":"val configInstance: T","description":"dev.racci.minix.core.services.DataServiceImpl.ConfigData.configInstance","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-config-data/config-instance.html","searchKeys":["configInstance","val configInstance: T","dev.racci.minix.core.services.DataServiceImpl.ConfigData.configInstance"]},{"name":"val configLoader: HoconConfigurationLoader","description":"dev.racci.minix.core.services.DataServiceImpl.ConfigData.configLoader","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-config-data/config-loader.html","searchKeys":["configLoader","val configLoader: HoconConfigurationLoader","dev.racci.minix.core.services.DataServiceImpl.ConfigData.configLoader"]},{"name":"val database: Database","description":"dev.racci.minix.core.services.DataServiceImpl.database","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/database.html","searchKeys":["database","val database: Database","dev.racci.minix.core.services.DataServiceImpl.database"]},{"name":"val enabled: Boolean = true","description":"dev.racci.minix.core.data.UpdaterConfig.BackupConfig.enabled","location":"Minix-Core/dev.racci.minix.core.data/-updater-config/-backup-config/enabled.html","searchKeys":["enabled","val enabled: Boolean = true","dev.racci.minix.core.data.UpdaterConfig.BackupConfig.enabled"]},{"name":"val file: File","description":"dev.racci.minix.core.services.DataServiceImpl.ConfigData.file","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-config-data/file.html","searchKeys":["file","val file: File","dev.racci.minix.core.services.DataServiceImpl.ConfigData.file"]},{"name":"val kClass: KClass<T>","description":"dev.racci.minix.core.services.DataServiceImpl.ConfigData.kClass","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-config-data/k-class.html","searchKeys":["kClass","val kClass: KClass<T>","dev.racci.minix.core.services.DataServiceImpl.ConfigData.kClass"]},{"name":"val mappedConfig: MappedConfig","description":"dev.racci.minix.core.services.DataServiceImpl.ConfigData.mappedConfig","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-config-data/mapped-config.html","searchKeys":["mappedConfig","val mappedConfig: MappedConfig","dev.racci.minix.core.services.DataServiceImpl.ConfigData.mappedConfig"]},{"name":"val maxSize: Data","description":"dev.racci.minix.core.data.UpdaterConfig.BackupConfig.maxSize","location":"Minix-Core/dev.racci.minix.core.data/-updater-config/-backup-config/max-size.html","searchKeys":["maxSize","val maxSize: Data","dev.racci.minix.core.data.UpdaterConfig.BackupConfig.maxSize"]},{"name":"val minix: Minix","description":"dev.racci.minix.core.services.PluginServiceImpl.minix","location":"Minix-Core/dev.racci.minix.core.services/-plugin-service-impl/minix.html","searchKeys":["minix","val minix: Minix","dev.racci.minix.core.services.PluginServiceImpl.minix"]},{"name":"val node: CommentedConfigurationNode","description":"dev.racci.minix.core.services.DataServiceImpl.ConfigData.node","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-config-data/node.html","searchKeys":["node","val node: CommentedConfigurationNode","dev.racci.minix.core.services.DataServiceImpl.ConfigData.node"]},{"name":"var announceDownloadProgress: Boolean = true","description":"dev.racci.minix.core.data.UpdaterConfig.announceDownloadProgress","location":"Minix-Core/dev.racci.minix.core.data/-updater-config/announce-download-progress.html","searchKeys":["announceDownloadProgress","var announceDownloadProgress: Boolean = true","dev.racci.minix.core.data.UpdaterConfig.announceDownloadProgress"]},{"name":"var backups: UpdaterConfig.BackupConfig","description":"dev.racci.minix.core.data.UpdaterConfig.backups","location":"Minix-Core/dev.racci.minix.core.data/-updater-config/backups.html","searchKeys":["backups","var backups: UpdaterConfig.BackupConfig","dev.racci.minix.core.data.UpdaterConfig.backups"]},{"name":"var downloadDependencies: Boolean = true","description":"dev.racci.minix.core.data.UpdaterConfig.downloadDependencies","location":"Minix-Core/dev.racci.minix.core.data/-updater-config/download-dependencies.html","searchKeys":["downloadDependencies","var downloadDependencies: Boolean = true","dev.racci.minix.core.data.UpdaterConfig.downloadDependencies"]},{"name":"var enabled: Boolean = true","description":"dev.racci.minix.core.data.UpdaterConfig.enabled","location":"Minix-Core/dev.racci.minix.core.data/-updater-config/enabled.html","searchKeys":["enabled","var enabled: Boolean = true","dev.racci.minix.core.data.UpdaterConfig.enabled"]},{"name":"var interval: Duration","description":"dev.racci.minix.core.data.UpdaterConfig.interval","location":"Minix-Core/dev.racci.minix.core.data/-updater-config/interval.html","searchKeys":["interval","var interval: Duration","dev.racci.minix.core.data.UpdaterConfig.interval"]},{"name":"var loggingLevel: String","description":"dev.racci.minix.core.data.MinixConfig.loggingLevel","location":"Minix-Core/dev.racci.minix.core.data/-minix-config/logging-level.html","searchKeys":["loggingLevel","var loggingLevel: String","dev.racci.minix.core.data.MinixConfig.loggingLevel"]},{"name":"var newVersion: Column<String>","description":"dev.racci.minix.core.services.DataServiceImpl.PluginData.newVersion","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-plugin-data/new-version.html","searchKeys":["newVersion","var newVersion: Column<String>","dev.racci.minix.core.services.DataServiceImpl.PluginData.newVersion"]},{"name":"var newVersion: String","description":"dev.racci.minix.core.services.DataServiceImpl.DataHolder.newVersion","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-data-holder/new-version.html","searchKeys":["newVersion","var newVersion: String","dev.racci.minix.core.services.DataServiceImpl.DataHolder.newVersion"]},{"name":"var oldVersion: Column<String>","description":"dev.racci.minix.core.services.DataServiceImpl.PluginData.oldVersion","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-plugin-data/old-version.html","searchKeys":["oldVersion","var oldVersion: Column<String>","dev.racci.minix.core.services.DataServiceImpl.PluginData.oldVersion"]},{"name":"var oldVersion: String","description":"dev.racci.minix.core.services.DataServiceImpl.DataHolder.oldVersion","location":"Minix-Core/dev.racci.minix.core.services/-data-service-impl/-data-holder/old-version.html","searchKeys":["oldVersion","var oldVersion: String","dev.racci.minix.core.services.DataServiceImpl.DataHolder.oldVersion"]},{"name":"var pluginUpdaters: List<PluginUpdater>","description":"dev.racci.minix.core.data.UpdaterConfig.pluginUpdaters","location":"Minix-Core/dev.racci.minix.core.data/-updater-config/plugin-updaters.html","searchKeys":["pluginUpdaters","var pluginUpdaters: List<PluginUpdater>","dev.racci.minix.core.data.UpdaterConfig.pluginUpdaters"]},{"name":"var sentryEnabled: Boolean = true","description":"dev.racci.minix.core.data.MinixConfig.sentryEnabled","location":"Minix-Core/dev.racci.minix.core.data/-minix-config/sentry-enabled.html","searchKeys":["sentryEnabled","var sentryEnabled: Boolean = true","dev.racci.minix.core.data.MinixConfig.sentryEnabled"]},{"name":"var serverUUID: UUID","description":"dev.racci.minix.core.data.MinixConfig.serverUUID","location":"Minix-Core/dev.racci.minix.core.data/-minix-config/server-u-u-i-d.html","searchKeys":["serverUUID","var serverUUID: UUID","dev.racci.minix.core.data.MinixConfig.serverUUID"]},{"name":"var updateFolder: String","description":"dev.racci.minix.core.data.UpdaterConfig.updateFolder","location":"Minix-Core/dev.racci.minix.core.data/-updater-config/update-folder.html","searchKeys":["updateFolder","var updateFolder: String","dev.racci.minix.core.data.UpdaterConfig.updateFolder"]},{"name":"var verbose: Boolean = false","description":"dev.racci.minix.core.data.UpdaterConfig.verbose","location":"Minix-Core/dev.racci.minix.core.data/-updater-config/verbose.html","searchKeys":["verbose","var verbose: Boolean = false","dev.racci.minix.core.data.UpdaterConfig.verbose"]}]